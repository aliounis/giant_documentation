Search.setIndex({"docnames": ["brown_model/giant.camera_models.brown_model.BrownModel", "brown_model/giant.camera_models.brown_model.BrownModel.adjust_temperature", "brown_model/giant.camera_models.brown_model.BrownModel.apply_distortion", "brown_model/giant.camera_models.brown_model.BrownModel.apply_update", "brown_model/giant.camera_models.brown_model.BrownModel.compute_jacobian", "brown_model/giant.camera_models.brown_model.BrownModel.compute_pixel_jacobian", "brown_model/giant.camera_models.brown_model.BrownModel.compute_unit_vector_jacobian", "brown_model/giant.camera_models.brown_model.BrownModel.copy", "brown_model/giant.camera_models.brown_model.BrownModel.distort_pixels", "brown_model/giant.camera_models.brown_model.BrownModel.distortion_map", "brown_model/giant.camera_models.brown_model.BrownModel.from_elem", "brown_model/giant.camera_models.brown_model.BrownModel.get_misalignment", "brown_model/giant.camera_models.brown_model.BrownModel.get_projections", "brown_model/giant.camera_models.brown_model.BrownModel.get_state_labels", "brown_model/giant.camera_models.brown_model.BrownModel.get_temperature_scale", "brown_model/giant.camera_models.brown_model.BrownModel.overwrite", "brown_model/giant.camera_models.brown_model.BrownModel.pixels_to_gnomic", "brown_model/giant.camera_models.brown_model.BrownModel.pixels_to_gnomic_interp", "brown_model/giant.camera_models.brown_model.BrownModel.pixels_to_unit", "brown_model/giant.camera_models.brown_model.BrownModel.prepare_interp", "brown_model/giant.camera_models.brown_model.BrownModel.project_directions", "brown_model/giant.camera_models.brown_model.BrownModel.project_onto_image", "brown_model/giant.camera_models.brown_model.BrownModel.reset_misalignment", "brown_model/giant.camera_models.brown_model.BrownModel.to_elem", "brown_model/giant.camera_models.brown_model.BrownModel.undistort_image", "brown_model/giant.camera_models.brown_model.BrownModel.undistort_pixels", "calibration/calibration_class/giant.calibration.calibration_class.Calibration", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.add_images", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.calib_summary", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.estimate_attitude", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.estimate_calibration", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.estimate_static_alignment", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.estimate_temperature_dependent_alignment", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.id_stars", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.limit_magnitude", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.matched_star_residuals", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.remove_matched_stars", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.remove_outliers", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reproject_stars", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_attitude_estimator", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_calibration_estimator", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_image_processing", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_settings", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_star_id", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_static_alignment_estimator", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_temperature_dependent_alignment_estimator", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.review_outliers", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.sid_summary", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_attitude_estimator", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_calibration_estimator", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_image_processing", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_settings", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_star_id", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_static_alignment_estimator", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_temperature_dependent_alignment_estimator", "calibration/estimators/giant.calibration.estimators.CalibrationEstimator", "calibration/estimators/giant.calibration.estimators.CalibrationEstimator.estimate", "calibration/estimators/giant.calibration.estimators.CalibrationEstimator.reset", "calibration/estimators/giant.calibration.estimators.IterativeNonlinearLSTSQ", "calibration/estimators/giant.calibration.estimators.IterativeNonlinearLSTSQ.compute_residuals", "calibration/estimators/giant.calibration.estimators.IterativeNonlinearLSTSQ.estimate", "calibration/estimators/giant.calibration.estimators.IterativeNonlinearLSTSQ.reset", "calibration/estimators/giant.calibration.estimators.LMAEstimator", "calibration/estimators/giant.calibration.estimators.LMAEstimator.compute_residuals", "calibration/estimators/giant.calibration.estimators.LMAEstimator.estimate", "calibration/estimators/giant.calibration.estimators.LMAEstimator.reset", "calibration/estimators/giant.calibration.estimators.StaticAlignmentEstimator", "calibration/estimators/giant.calibration.estimators.StaticAlignmentEstimator.estimate", "calibration/estimators/giant.calibration.estimators.TemperatureDependentAlignmentEstimator", "calibration/estimators/giant.calibration.estimators.TemperatureDependentAlignmentEstimator.estimate", "calibration/giant.calibration.calibration_class", "calibration/giant.calibration.estimators", "calibration/giant.calibration.visualizer", "calibration/visualizer/giant.calibration.visualizer.plot_alignment_residuals", "calibration/visualizer/giant.calibration.visualizer.plot_distortion_map", "calibration/visualizer/giant.calibration.visualizer.plot_focal_length_temperature_dependence", "camera/giant.camera.AttitudeUpdateMethods", "camera/giant.camera.Camera", "camera/giant.camera.Camera.add_images", "camera/giant.camera.Camera.all_off", "camera/giant.camera.Camera.all_on", "camera/giant.camera.Camera.apply_date_range", "camera/giant.camera.Camera.image_check", "camera/giant.camera.Camera.long_off", "camera/giant.camera.Camera.long_on", "camera/giant.camera.Camera.only_long_on", "camera/giant.camera.Camera.only_short_on", "camera/giant.camera.Camera.preprocessor", "camera/giant.camera.Camera.remove_images", "camera/giant.camera.Camera.short_off", "camera/giant.camera.Camera.short_on", "camera/giant.camera.Camera.sort_by_date", "camera/giant.camera.Camera.update_attitude_from_function", "camera/giant.camera.Camera.update_short_attitude", "camera_model/giant.camera_models.camera_model.CameraModel", "camera_model/giant.camera_models.camera_model.CameraModel.apply_update", "camera_model/giant.camera_models.camera_model.CameraModel.compute_jacobian", "camera_model/giant.camera_models.camera_model.CameraModel.compute_pixel_jacobian", "camera_model/giant.camera_models.camera_model.CameraModel.compute_unit_vector_jacobian", "camera_model/giant.camera_models.camera_model.CameraModel.copy", "camera_model/giant.camera_models.camera_model.CameraModel.distort_pixels", "camera_model/giant.camera_models.camera_model.CameraModel.distortion_map", "camera_model/giant.camera_models.camera_model.CameraModel.from_elem", "camera_model/giant.camera_models.camera_model.CameraModel.get_state_labels", "camera_model/giant.camera_models.camera_model.CameraModel.overwrite", "camera_model/giant.camera_models.camera_model.CameraModel.pixels_to_unit", "camera_model/giant.camera_models.camera_model.CameraModel.project_directions", "camera_model/giant.camera_models.camera_model.CameraModel.project_onto_image", "camera_model/giant.camera_models.camera_model.CameraModel.to_elem", "camera_model/giant.camera_models.camera_model.CameraModel.undistort_image", "camera_model/giant.camera_models.camera_model.CameraModel.undistort_pixels", "camera_model/giant.camera_models.camera_model.ReturnShape", "camera_model/giant.camera_models.camera_model.load", "camera_model/giant.camera_models.camera_model.save", "catalogues/giant.catalogues.giant_catalogue", "catalogues/giant.catalogues.meta_catalogue", "catalogues/giant.catalogues.tycho", "catalogues/giant.catalogues.ucac", "catalogues/giant.catalogues.utilities", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.get_all_with_criteria", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.get_from_ids", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.get_tycho2_record", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.get_ucac4_record", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.query_catalogue", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.blend_stars", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.build_catalogue", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.find_star_pairs", "catalogues/meta_catalogue/giant.catalogues.meta_catalogue.Catalogue", "catalogues/meta_catalogue/giant.catalogues.meta_catalogue.Catalogue.query_catalogue", "catalogues/meta_catalogue/giant.catalogues.meta_catalogue.GIANT_COLUMNS", "catalogues/meta_catalogue/giant.catalogues.meta_catalogue.GIANT_TYPES", "catalogues/tycho/giant.catalogues.tycho.Tycho2", "catalogues/tycho/giant.catalogues.tycho.Tycho2.convert_to_giant_format", "catalogues/tycho/giant.catalogues.tycho.Tycho2.empty_frame", "catalogues/tycho/giant.catalogues.tycho.Tycho2.nan_frame", "catalogues/tycho/giant.catalogues.tycho.Tycho2.query_catalogue", "catalogues/tycho/giant.catalogues.tycho.Tycho2.query_catalogue_raw", "catalogues/tycho/giant.catalogues.tycho.Tycho2.retrieve_record", "catalogues/tycho/giant.catalogues.tycho.download_tycho", "catalogues/ucac/giant.catalogues.ucac.ColumnOrder", "catalogues/ucac/giant.catalogues.ucac.UCAC4", "catalogues/ucac/giant.catalogues.ucac.UCAC4.build_index", "catalogues/ucac/giant.catalogues.ucac.UCAC4.convert_to_giant_catalogue", "catalogues/ucac/giant.catalogues.ucac.UCAC4.cross_ref_tycho", "catalogues/ucac/giant.catalogues.ucac.UCAC4.dump_to_sqlite", "catalogues/ucac/giant.catalogues.ucac.UCAC4.get_from_ids", "catalogues/ucac/giant.catalogues.ucac.UCAC4.get_index_ind", "catalogues/ucac/giant.catalogues.ucac.UCAC4.get_zone_block", "catalogues/ucac/giant.catalogues.ucac.UCAC4.query_catalogue", "catalogues/ucac/giant.catalogues.ucac.UCAC4.query_catalogue_raw", "catalogues/ucac/giant.catalogues.ucac.binary_search", "catalogues/ucac/giant.catalogues.ucac.check_file", "catalogues/ucac/giant.catalogues.ucac.download_ucac", "catalogues/utilities/giant.catalogues.utilities.DEG2MAS", "catalogues/utilities/giant.catalogues.utilities.DEG2RAD", "catalogues/utilities/giant.catalogues.utilities.MAS2DEG", "catalogues/utilities/giant.catalogues.utilities.MAS2RAD", "catalogues/utilities/giant.catalogues.utilities.MJD_EPOCH", "catalogues/utilities/giant.catalogues.utilities.PARSEC2KM", "catalogues/utilities/giant.catalogues.utilities.RAD2DEG", "catalogues/utilities/giant.catalogues.utilities.RAD2MAS", "catalogues/utilities/giant.catalogues.utilities.SI_DAYS_PER_YEAR", "catalogues/utilities/giant.catalogues.utilities.SI_SECONDS_PER_DAY", "catalogues/utilities/giant.catalogues.utilities.STAR_DIST", "catalogues/utilities/giant.catalogues.utilities.apply_proper_motion", "catalogues/utilities/giant.catalogues.utilities.datetime_to_mjd_years", "catalogues/utilities/giant.catalogues.utilities.radec_distance", "catalogues/utilities/giant.catalogues.utilities.radec_to_unit", "catalogues/utilities/giant.catalogues.utilities.timedelta_to_si_years", "catalogues/utilities/giant.catalogues.utilities.unit_to_radec", "copyright", "getting_started", "giant", "giant.calibration", "giant.camera", "giant.camera_models", "giant.camera_models.brown_model", "giant.camera_models.camera_model", "giant.camera_models.opencv_model", "giant.camera_models.owen_model", "giant.camera_models.pinhole_model", "giant.catalogues", "giant.image", "giant.image_processing", "giant.opnav_class", "giant.point_spread_functions", "giant.ray_tracer", "giant.relative_opnav", "giant.rotations", "giant.scripts", "giant.stellar_opnav", "giant.ufo", "giant.utilities", "image/giant.image.ExposureType", "image/giant.image.OpNavImage", "image/giant.image.OpNavImage.load_image", "image/giant.image.OpNavImage.parse_data", "image_processing/giant.image_processing.FIRST_ORDER_IMAGINARY_MOMENTS", "image_processing/giant.image_processing.FIRST_ORDER_REAL_MOMENTS", "image_processing/giant.image_processing.HORIZONTAL_KERNEL", "image_processing/giant.image_processing.ImageFlatteningNoiseApprox", "image_processing/giant.image_processing.ImageProcessing", "image_processing/giant.image_processing.ImageProcessing.corners_to_roi", "image_processing/giant.image_processing.ImageProcessing.correlate", "image_processing/giant.image_processing.ImageProcessing.denoise_image", "image_processing/giant.image_processing.ImageProcessing.find_poi_in_roi", "image_processing/giant.image_processing.ImageProcessing.flatten_image_and_get_noise_level", "image_processing/giant.image_processing.ImageProcessing.identify_pixel_edges", "image_processing/giant.image_processing.ImageProcessing.identify_subpixel_limbs", "image_processing/giant.image_processing.ImageProcessing.locate_subpixel_poi_in_roi", "image_processing/giant.image_processing.ImageProcessing.pae_edges", "image_processing/giant.image_processing.ImageProcessing.refine_edges_pae", "image_processing/giant.image_processing.ImageProcessing.refine_edges_zernike_ramp", "image_processing/giant.image_processing.ImageProcessing.refine_locations", "image_processing/giant.image_processing.PAE_A01", "image_processing/giant.image_processing.PAE_A11", "image_processing/giant.image_processing.SECOND_ORDER_MOMENTS", "image_processing/giant.image_processing.SubpixelEdgeMethods", "image_processing/giant.image_processing.VERTICAL_KERNEL", "image_processing/giant.image_processing.cv2_correlator_2d", "image_processing/giant.image_processing.fft_correlator_1d", "image_processing/giant.image_processing.fft_correlator_2d", "image_processing/giant.image_processing.local_maxima", "image_processing/giant.image_processing.otsu", "image_processing/giant.image_processing.parabolic_peak_finder_1d", "image_processing/giant.image_processing.pixel_level_peak_finder_1d", "image_processing/giant.image_processing.pixel_level_peak_finder_2d", "image_processing/giant.image_processing.quadric_peak_finder_2d", "image_processing/giant.image_processing.spatial_correlator_2d", "index", "installation", "license", "opencv_model/giant.camera_models.opencv_model.OpenCVModel", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.adjust_temperature", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.apply_distortion", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.apply_update", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.compute_jacobian", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.compute_pixel_jacobian", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.compute_unit_vector_jacobian", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.copy", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.distort_pixels", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.distortion_map", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.from_elem", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.get_misalignment", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.get_projections", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.get_state_labels", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.get_temperature_scale", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.overwrite", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.pixels_to_gnomic", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.pixels_to_gnomic_interp", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.pixels_to_unit", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.prepare_interp", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.project_directions", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.project_onto_image", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.reset_misalignment", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.to_elem", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.undistort_image", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.undistort_pixels", "opnav_class/giant.opnav_class.OpNav", "opnav_class/giant.opnav_class.OpNav.add_images", "opnav_class/giant.opnav_class.OpNav.reset_image_processing", "opnav_class/giant.opnav_class.OpNav.update_image_processing", "owen_model/giant.camera_models.owen_model.OwenModel", "owen_model/giant.camera_models.owen_model.OwenModel.adjust_temperature", "owen_model/giant.camera_models.owen_model.OwenModel.apply_distortion", "owen_model/giant.camera_models.owen_model.OwenModel.apply_update", "owen_model/giant.camera_models.owen_model.OwenModel.compute_jacobian", "owen_model/giant.camera_models.owen_model.OwenModel.compute_pixel_jacobian", "owen_model/giant.camera_models.owen_model.OwenModel.compute_unit_vector_jacobian", "owen_model/giant.camera_models.owen_model.OwenModel.copy", "owen_model/giant.camera_models.owen_model.OwenModel.distort_pixels", "owen_model/giant.camera_models.owen_model.OwenModel.distortion_map", "owen_model/giant.camera_models.owen_model.OwenModel.from_elem", "owen_model/giant.camera_models.owen_model.OwenModel.get_misalignment", "owen_model/giant.camera_models.owen_model.OwenModel.get_projections", "owen_model/giant.camera_models.owen_model.OwenModel.get_state_labels", "owen_model/giant.camera_models.owen_model.OwenModel.get_temperature_scale", "owen_model/giant.camera_models.owen_model.OwenModel.overwrite", "owen_model/giant.camera_models.owen_model.OwenModel.pixels_to_gnomic", "owen_model/giant.camera_models.owen_model.OwenModel.pixels_to_gnomic_interp", "owen_model/giant.camera_models.owen_model.OwenModel.pixels_to_unit", "owen_model/giant.camera_models.owen_model.OwenModel.prepare_interp", "owen_model/giant.camera_models.owen_model.OwenModel.project_directions", "owen_model/giant.camera_models.owen_model.OwenModel.project_onto_image", "owen_model/giant.camera_models.owen_model.OwenModel.reset_misalignment", "owen_model/giant.camera_models.owen_model.OwenModel.to_elem", "owen_model/giant.camera_models.owen_model.OwenModel.undistort_image", "owen_model/giant.camera_models.owen_model.OwenModel.undistort_pixels", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.adjust_temperature", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.apply_update", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.compute_jacobian", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.compute_pixel_jacobian", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.compute_unit_vector_jacobian", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.copy", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.distort_pixels", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.distortion_map", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.from_elem", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.get_misalignment", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.get_projections", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.get_state_labels", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.get_temperature_scale", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.overwrite", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.pixels_to_gnomic", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.pixels_to_gnomic_interp", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.pixels_to_unit", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.prepare_interp", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.project_directions", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.project_onto_image", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.reset_misalignment", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.to_elem", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.undistort_image", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.undistort_pixels", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.__call__", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.apply_1d", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.apply_1d_sized", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.compute_jacobian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.determine_size", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.evaluate", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.fit", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.generate_kernel", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.normalize_amplitude", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.update_state", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.__call__", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.apply_1d", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.apply_1d_sized", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.compute_jacobian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.determine_size", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.evaluate", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.fit", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.generate_kernel", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.normalize_amplitude", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.update_state", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.__call__", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.apply_1d", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.apply_1d_sized", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.compute_jacobian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.converge", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.determine_size", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.evaluate", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.fit", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.fit_lstsq", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.generate_kernel", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.normalize_amplitude", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.update_state", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.__call__", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.apply_1d", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.apply_1d_sized", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.apply_update_bg", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.compute_jacobian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.compute_jacobian_all", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.compute_jacobian_bg", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.converge", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.determine_size", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.evaluate", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.evaluate_bg", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.fit", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.fit_bg", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.fit_lstsq", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.generate_kernel", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.normalize_amplitude", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.update_state", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.__call__", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.apply_1d", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.apply_1d_sized", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.compute_jacobian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.converge", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.determine_size", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.evaluate", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.fit", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.fit_lstsq", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.generate_kernel", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.normalize_amplitude", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.update_state", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.__call__", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.apply_1d", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.apply_1d_sized", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.apply_update_bg", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.compute_jacobian", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.compute_jacobian_all", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.compute_jacobian_bg", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.converge", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.determine_size", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.evaluate", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.evaluate_bg", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.fit", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.fit_bg", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.fit_lstsq", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.generate_kernel", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.normalize_amplitude", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.update_state", "point_spread_functions/giant.point_spread_functions.gaussians", "point_spread_functions/giant.point_spread_functions.moments", "point_spread_functions/giant.point_spread_functions.psf_meta", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.__call__", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.apply_1d", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.evaluate", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.fit", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.generate_kernel", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSF", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSF.fit_lstsq", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground.compute_jacobian_all", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground.evaluate", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground.fit_lstsq", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF.compute_jacobian", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF.converge", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF.update_state", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.apply_update_bg", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.compute_jacobian_bg", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.evaluate_bg", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.fit_bg", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.KernelBasedApply1DPSF", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.KernelBasedApply1DPSF.apply_1d_sized", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.KernelBasedCallPSF", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.KernelBasedCallPSF.__call__", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.__call__", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.apply_1d", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.evaluate", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.fit", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.generate_kernel", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.SizedPSF", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.SizedPSF.determine_size", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.SizedPSF.generate_kernel", "ray_tracer/giant.ray_tracer.illumination", "ray_tracer/giant.ray_tracer.kdtree", "ray_tracer/giant.ray_tracer.rays", "ray_tracer/giant.ray_tracer.scene", "ray_tracer/giant.ray_tracer.shapes", "ray_tracer/giant.ray_tracer.utilities", "ray_tracer/illumination/giant.ray_tracer.illumination.AshikhminShirleyDiffuseIllumination", "ray_tracer/illumination/giant.ray_tracer.illumination.GaskellIllumination", "ray_tracer/illumination/giant.ray_tracer.illumination.ILLUM_DTYPE", "ray_tracer/illumination/giant.ray_tracer.illumination.IlluminationModel", "ray_tracer/illumination/giant.ray_tracer.illumination.LambertianIllumination", "ray_tracer/illumination/giant.ray_tracer.illumination.LommelSeeligerIllumination", "ray_tracer/illumination/giant.ray_tracer.illumination.McEwenIllumination", "ray_tracer/illumination/giant.ray_tracer.illumination.McEwenIllumination.compute_photoclinometry_jacobian", "ray_tracer/illumination/giant.ray_tracer.illumination.McEwenIllumination.numeric_derivative", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.compute_bounding_box", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.rotate", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.split", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.translate", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.build", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.compute_intersect", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.compute_limb_jacobian", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.find_limbs", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.load", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.rotate", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.save", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.trace", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.translate", "ray_tracer/kdtree/giant.ray_tracer.kdtree.describe_tree", "ray_tracer/kdtree/giant.ray_tracer.kdtree.get_facet_vertices", "ray_tracer/kdtree/giant.ray_tracer.kdtree.get_ignore_inds", "ray_tracer/rays/giant.ray_tracer.rays.INTERSECT_DTYPE", "ray_tracer/rays/giant.ray_tracer.rays.Rays", "ray_tracer/rays/giant.ray_tracer.rays.Rays.rotate", "ray_tracer/rays/giant.ray_tracer.rays.Rays.translate", "ray_tracer/rays/giant.ray_tracer.rays.compute_rays", "ray_tracer/scene/giant.ray_tracer.scene.CorrectionsType", "ray_tracer/scene/giant.ray_tracer.scene.SPEED_OF_LIGHT", "ray_tracer/scene/giant.ray_tracer.scene.Scene", "ray_tracer/scene/giant.ray_tracer.scene.Scene.calculate_apparent_position", "ray_tracer/scene/giant.ray_tracer.scene.Scene.get_first", "ray_tracer/scene/giant.ray_tracer.scene.Scene.get_illumination_inputs", "ray_tracer/scene/giant.ray_tracer.scene.Scene.phase_angle", "ray_tracer/scene/giant.ray_tracer.scene.Scene.raster_render", "ray_tracer/scene/giant.ray_tracer.scene.Scene.trace", "ray_tracer/scene/giant.ray_tracer.scene.Scene.update", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.change_orientation", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.change_position", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.get_apparent_diameter", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.get_bounding_pixels", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.place", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.rotate", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.translate", "ray_tracer/scene/giant.ray_tracer.scene.correct_light_time", "ray_tracer/scene/giant.ray_tracer.scene.correct_stellar_aberration", "ray_tracer/scene/giant.ray_tracer.scene.correct_stellar_aberration_fsp", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.compute_intersect", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.rotate", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.trace", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.translate", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.min_max_to_bounding_box", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_albedos", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_bounding_box", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_intersect", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_limb_jacobian", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_normals", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.find_limbs", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.intersect", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.rotate", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.trace", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.translate", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.quadratic_equation", "ray_tracer/shapes/giant.ray_tracer.shapes.axis_aligned_bounding_box", "ray_tracer/shapes/giant.ray_tracer.shapes.ellipsoid", "ray_tracer/shapes/giant.ray_tracer.shapes.point", "ray_tracer/shapes/giant.ray_tracer.shapes.shape", "ray_tracer/shapes/giant.ray_tracer.shapes.solid", "ray_tracer/shapes/giant.ray_tracer.shapes.surface", "ray_tracer/shapes/giant.ray_tracer.shapes.triangle", "ray_tracer/shapes/point/giant.ray_tracer.shapes.point.Point", "ray_tracer/shapes/point/giant.ray_tracer.shapes.point.Point.rotate", "ray_tracer/shapes/point/giant.ray_tracer.shapes.point.Point.translate", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.compute_intersect", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.compute_limb_jacobian", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.find_limbs", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.rotate", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.trace", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.translate", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.compute_intersect", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.compute_limb_jacobian", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.find_limbs", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.rotate", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.trace", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.translate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.compute_bounding_box", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.compute_intersect", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.compute_limb_jacobian", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.compute_reference_ellipsoid", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.find_limbs", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.merge", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.rotate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.trace", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.translate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.compute_intersect", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.compute_limb_jacobian", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.find_limbs", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.rotate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.trace", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.translate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.compute_bounding_box", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.compute_intersect", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.compute_limb_jacobian", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.compute_reference_ellipsoid", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.find_limbs", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.merge", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.rotate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.trace", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.translate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_bounding_box", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_intersect", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_limb_jacobian", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_normals", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_reference_ellipsoid", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.find_limbs", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.merge", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.rotate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.trace", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.translate", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.find_limbs_surface", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_bounding_box", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_intersect", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_limb_jacobian", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_normals", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_reference_ellipsoid", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.find_limbs", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.get_albedo", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.merge", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.rotate", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.trace", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.translate", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_bounding_box", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_intersect", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_limb_jacobian", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_normals", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_reference_ellipsoid", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.find_limbs", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.get_albedo", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.merge", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.rotate", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.trace", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.translate", "ray_tracer/utilities/giant.ray_tracer.utilities.compute_com", "ray_tracer/utilities/giant.ray_tracer.utilities.compute_stats", "ray_tracer/utilities/giant.ray_tracer.utilities.find_limbs", "ray_tracer/utilities/giant.ray_tracer.utilities.ref_ellipse", "ray_tracer/utilities/giant.ray_tracer.utilities.to_block", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.compute_rays", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.estimate", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.render", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.reset", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.target_generator", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.estimate", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.extract_and_pair_limbs", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.reset", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.target_generator", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.LimbExtractionMethods", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.LimbScanner", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.LimbScanner.extract_limbs", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.LimbScanner.predict_limbs", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator.estimate", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator.reset", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator.target_generator", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavObservablesType", "relative_opnav/estimators/giant.relative_opnav.estimators.cross_correlation", "relative_opnav/estimators/giant.relative_opnav.estimators.ellipse_matching", "relative_opnav/estimators/giant.relative_opnav.estimators.estimator_interface_abc", "relative_opnav/estimators/giant.relative_opnav.estimators.limb_matching", "relative_opnav/estimators/giant.relative_opnav.estimators.moment_algorithm", "relative_opnav/estimators/giant.relative_opnav.estimators.sfn", "relative_opnav/estimators/giant.relative_opnav.estimators.unresolved", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.compute_jacobian", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.estimate", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.extract_and_pair_limbs", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.reset", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.target_generator", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.compute_line_of_sight_sun_image", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.compute_phase_correction", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.estimate", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.rastered_phase_correction", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.reset", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.simple_phase_correction", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.target_generator", "relative_opnav/estimators/sfn/giant.relative_opnav.estimators.sfn.sfn_class", "relative_opnav/estimators/sfn/giant.relative_opnav.estimators.sfn.sfn_correlators", "relative_opnav/estimators/sfn/giant.relative_opnav.estimators.sfn.surface_features", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.apply_options", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.compute_rays", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.estimate", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.pnp_solver", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.render", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.reset", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.target_generator", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.peak_finder", "relative_opnav/estimators/sfn/sfn_correlators/giant.relative_opnav.estimators.sfn.sfn_correlators.sfn_correlator", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.get_first", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.rotate", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.trace", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.translate", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.update_feature_paths", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.found", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.load", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.not_found", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.trace", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.update_file", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.update_path", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.VisibleFeatureFinder", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.VisibleFeatureFinder.apply_options", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.VisibleFeatureFinderOptions", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrectionType", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.compute_line_of_sight_sun_image", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.compute_phase_correction", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.estimate", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.rastered_phase_correction", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.reset", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.simple_phase_correction", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.target_generator", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.compute_line_of_sight_sun_image", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.compute_phase_correction", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.estimate", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.rastered_phase_correction", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.reset", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.simple_phase_correction", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.target_generator", "relative_opnav/giant.relative_opnav.estimators", "relative_opnav/giant.relative_opnav.relnav_class", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RESULTS_DTYPE", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.add_images", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.auto_estimate", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.cross_correlation_estimate", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.default_estimator", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.ellipse_matching_estimate", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.limb_matching_estimate", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.moment_algorithm_estimate", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.process_image", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.register", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.reset_image_processing", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.unresolved_estimate", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.update_image_processing", "rotations/giant.rotations.Rotation", "rotations/giant.rotations.Rotation.copy", "rotations/giant.rotations.Rotation.interp_attitude", "rotations/giant.rotations.Rotation.inv", "rotations/giant.rotations.Rotation.rotate", "rotations/giant.rotations.euler_to_rotmat", "rotations/giant.rotations.nlerp", "rotations/giant.rotations.quaternion_inverse", "rotations/giant.rotations.quaternion_multiplication", "rotations/giant.rotations.quaternion_to_euler", "rotations/giant.rotations.quaternion_to_rotmat", "rotations/giant.rotations.quaternion_to_rotvec", "rotations/giant.rotations.rot_x", "rotations/giant.rotations.rot_y", "rotations/giant.rotations.rot_z", "rotations/giant.rotations.rotmat_to_euler", "rotations/giant.rotations.rotmat_to_quaternion", "rotations/giant.rotations.rotvec_to_quaternion", "rotations/giant.rotations.rotvec_to_rotmat", "rotations/giant.rotations.skew", "rotations/giant.rotations.slerp", "scripts/generate_sample_data/giant.scripts.generate_sample_data.MODEL", "scripts/generate_sample_data/giant.scripts.generate_sample_data.PSF", "scripts/generate_sample_data/giant.scripts.generate_sample_data.camera_orientation", "scripts/generate_sample_data/giant.scripts.generate_sample_data.camera_position", "scripts/generate_sample_data/giant.scripts.generate_sample_data.sun_orientation", "scripts/generate_sample_data/giant.scripts.generate_sample_data.sun_position", "scripts/generate_sample_data/giant.scripts.generate_sample_data.target_orientation", "scripts/generate_sample_data/giant.scripts.generate_sample_data.target_position", "scripts/giant.scripts.build_catalogue", "scripts/giant.scripts.generate_sample_data", "scripts/giant.scripts.ingest_shape", "scripts/giant.scripts.merge_cameras", "scripts/giant.scripts.mosaic_images", "scripts/giant.scripts.shape_stats", "scripts/giant.scripts.spc_to_feature_catalogue", "scripts/giant.scripts.spc_to_results", "scripts/giant.scripts.tile_shape", "stellar_opnav/estimators/giant.stellar_opnav.estimators.AttitudeEstimator", "stellar_opnav/estimators/giant.stellar_opnav.estimators.AttitudeEstimator.estimate", "stellar_opnav/estimators/giant.stellar_opnav.estimators.DavenportQMethod", "stellar_opnav/estimators/giant.stellar_opnav.estimators.DavenportQMethod.compute_residuals", "stellar_opnav/estimators/giant.stellar_opnav.estimators.DavenportQMethod.estimate", "stellar_opnav/giant.stellar_opnav.estimators", "stellar_opnav/giant.stellar_opnav.star_identification", "stellar_opnav/giant.stellar_opnav.stellar_class", "stellar_opnav/giant.stellar_opnav.visualizer", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.compute_pointing", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.id_stars", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.project_stars", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.query_catalogue", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.ransac", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.ransac_iter_test", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.add_images", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.estimate_attitude", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.id_stars", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.matched_star_residuals", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.remove_matched_stars", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.remove_outliers", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.reproject_stars", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.reset_attitude_estimator", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.reset_image_processing", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.reset_star_id", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.review_outliers", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.sid_summary", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.update_attitude_estimator", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.update_image_processing", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.update_star_id", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.OutlierCallback", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.plot_residuals_vs_magnitude", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.plot_residuals_vs_temperature", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.residual_histograms", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.show_id_results", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.show_outlier", "tutorial/camera_calibration", "tutorial/data_prep", "tutorial/initial_set_up", "tutorial/opnav", "tutorial/organization", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.cancel_join_thread", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.clear", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.close", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.empty", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.full", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.get", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.get_nowait", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.join_thread", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.put", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.put_nowait", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.qsize", "ufo/clearable_queue/giant.ufo.clearable_queue.SharedCounter", "ufo/clearable_queue/giant.ufo.clearable_queue.SharedCounter.increment", "ufo/detector/giant.ufo.detector.Detector", "ufo/detector/giant.ufo.detector.Detector.add_images", "ufo/detector/giant.ufo.detector.Detector.clear_results", "ufo/detector/giant.ufo.detector.Detector.find_ufos", "ufo/detector/giant.ufo.detector.Detector.identify_hot_pixels_and_unmatched_stars", "ufo/detector/giant.ufo.detector.Detector.package_results", "ufo/detector/giant.ufo.detector.Detector.remove_duplicates", "ufo/detector/giant.ufo.detector.Detector.save_results", "ufo/detector/giant.ufo.detector.Detector.update_attitude", "ufo/detector/giant.ufo.detector.unit_to_radec_jacobian", "ufo/dynamics/giant.ufo.dynamics.Dynamics", "ufo/dynamics/giant.ufo.dynamics.Dynamics.compute_dynamics", "ufo/dynamics/giant.ufo.dynamics.Dynamics.propagate", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.compute_covariance_dynamics", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.compute_dynamics", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.compute_solar_radiation_acceleration", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.compute_state_dynamics", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.get_gm", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.propagate", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.compute_covariance_dynamics", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.compute_dynamics", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.compute_state_dynamics", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.get_gm", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.propagate", "ufo/dynamics/giant.ufo.dynamics.zero3", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.filter_ekfs", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.find_initial_pairs", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.save_results", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.track", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.compute_residual_statistics", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.initialize", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.process_measurement", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.propagate_and_predict", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.smooth", "ufo/giant.ufo.clearable_queue", "ufo/giant.ufo.detector", "ufo/giant.ufo.dynamics", "ufo/giant.ufo.ekf_tracker", "ufo/giant.ufo.extended_kalman_filter", "ufo/giant.ufo.measurements", "ufo/giant.ufo.state_initializer", "ufo/giant.ufo.ufo_class", "ufo/giant.ufo.visualizer", "ufo/measurements/giant.ufo.measurements.Measurement", "ufo/measurements/giant.ufo.measurements.Measurement.compare_residuals", "ufo/measurements/giant.ufo.measurements.Measurement.compute_jacobian", "ufo/measurements/giant.ufo.measurements.Measurement.predict", "ufo/measurements/giant.ufo.measurements.OpticalBearingMeasurement", "ufo/measurements/giant.ufo.measurements.OpticalBearingMeasurement.compare_residuals", "ufo/measurements/giant.ufo.measurements.OpticalBearingMeasurement.compute_jacobian", "ufo/measurements/giant.ufo.measurements.OpticalBearingMeasurement.predict", "ufo/state_initializer/giant.ufo.state_initializer.ORExInitializer", "ufo/ufo_class/giant.ufo.ufo_class.UFO", "ufo/ufo_class/giant.ufo.ufo_class.UFO.detect", "ufo/ufo_class/giant.ufo.ufo_class.UFO.save_results", "ufo/ufo_class/giant.ufo.ufo_class.UFO.track", "ufo/ufo_class/giant.ufo.ufo_class.UFO.visualize_detection_results", "ufo/visualizer/giant.ufo.visualizer.show_detections", "utilities/giant.utilities.outlier_identifier", "utilities/giant.utilities.random_combination", "utilities/giant.utilities.spice_interface", "utilities/giant.utilities.stereophotoclinometry", "utilities/giant.utilities.tee", "utilities/outlier_identifier/giant.utilities.outlier_identifier.get_outliers", "utilities/random_combination/giant.utilities.random_combination.RandomCombinations", "utilities/spice_interface/giant.utilities.spice_interface.HAS_SPICE", "utilities/spice_interface/giant.utilities.spice_interface.J2000_EPOCH", "utilities/spice_interface/giant.utilities.spice_interface.LEAP_SECONDS_LIST", "utilities/spice_interface/giant.utilities.spice_interface.SpiceOrientation", "utilities/spice_interface/giant.utilities.spice_interface.SpicePosition", "utilities/spice_interface/giant.utilities.spice_interface.SpicePosition.light_time", "utilities/spice_interface/giant.utilities.spice_interface.SpicePosition.position_light_time", "utilities/spice_interface/giant.utilities.spice_interface.SpiceState", "utilities/spice_interface/giant.utilities.spice_interface.SpiceState.light_time", "utilities/spice_interface/giant.utilities.spice_interface.SpiceState.position_light_time", "utilities/spice_interface/giant.utilities.spice_interface.create_callable_orientation", "utilities/spice_interface/giant.utilities.spice_interface.create_callable_position", "utilities/spice_interface/giant.utilities.spice_interface.create_callable_state", "utilities/spice_interface/giant.utilities.spice_interface.datetime_to_et", "utilities/spice_interface/giant.utilities.spice_interface.et_callable_to_datetime_callable", "utilities/spice_interface/giant.utilities.spice_interface.leap_seconds", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.DATE_FMT", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Image", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Image.read", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Image.write", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Landmark", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Landmark.read", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Landmark.write", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Maplet", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Maplet.get_triangles", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Maplet.read", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Maplet.write", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Nominal", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Nominal.read", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Nominal.write", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Regress", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Regress.read", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.ShapeModel", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.ShapeModel.get_triangles", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.ShapeModel.read", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.ShapeModel.write", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Summary", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Summary.read", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Summary.write", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.get_distortion", "utilities/tee/giant.utilities.tee.DoubleTee", "utilities/tee/giant.utilities.tee.DoubleTee.close", "utilities/tee/giant.utilities.tee.REDIRECT", "utilities/tee/giant.utilities.tee.Tee", "utilities/tee/giant.utilities.tee.Tee.close", "utilities/tee/giant.utilities.tee.Tee.flush", "utilities/tee/giant.utilities.tee.Tee.write"], "filenames": ["brown_model/giant.camera_models.brown_model.BrownModel.rst", "brown_model/giant.camera_models.brown_model.BrownModel.adjust_temperature.rst", "brown_model/giant.camera_models.brown_model.BrownModel.apply_distortion.rst", "brown_model/giant.camera_models.brown_model.BrownModel.apply_update.rst", "brown_model/giant.camera_models.brown_model.BrownModel.compute_jacobian.rst", "brown_model/giant.camera_models.brown_model.BrownModel.compute_pixel_jacobian.rst", "brown_model/giant.camera_models.brown_model.BrownModel.compute_unit_vector_jacobian.rst", "brown_model/giant.camera_models.brown_model.BrownModel.copy.rst", "brown_model/giant.camera_models.brown_model.BrownModel.distort_pixels.rst", "brown_model/giant.camera_models.brown_model.BrownModel.distortion_map.rst", "brown_model/giant.camera_models.brown_model.BrownModel.from_elem.rst", "brown_model/giant.camera_models.brown_model.BrownModel.get_misalignment.rst", "brown_model/giant.camera_models.brown_model.BrownModel.get_projections.rst", "brown_model/giant.camera_models.brown_model.BrownModel.get_state_labels.rst", "brown_model/giant.camera_models.brown_model.BrownModel.get_temperature_scale.rst", "brown_model/giant.camera_models.brown_model.BrownModel.overwrite.rst", "brown_model/giant.camera_models.brown_model.BrownModel.pixels_to_gnomic.rst", "brown_model/giant.camera_models.brown_model.BrownModel.pixels_to_gnomic_interp.rst", "brown_model/giant.camera_models.brown_model.BrownModel.pixels_to_unit.rst", "brown_model/giant.camera_models.brown_model.BrownModel.prepare_interp.rst", "brown_model/giant.camera_models.brown_model.BrownModel.project_directions.rst", "brown_model/giant.camera_models.brown_model.BrownModel.project_onto_image.rst", "brown_model/giant.camera_models.brown_model.BrownModel.reset_misalignment.rst", "brown_model/giant.camera_models.brown_model.BrownModel.to_elem.rst", "brown_model/giant.camera_models.brown_model.BrownModel.undistort_image.rst", "brown_model/giant.camera_models.brown_model.BrownModel.undistort_pixels.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.add_images.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.calib_summary.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.estimate_attitude.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.estimate_calibration.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.estimate_static_alignment.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.estimate_temperature_dependent_alignment.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.id_stars.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.limit_magnitude.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.matched_star_residuals.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.remove_matched_stars.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.remove_outliers.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reproject_stars.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_attitude_estimator.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_calibration_estimator.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_image_processing.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_settings.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_star_id.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_static_alignment_estimator.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.reset_temperature_dependent_alignment_estimator.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.review_outliers.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.sid_summary.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_attitude_estimator.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_calibration_estimator.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_image_processing.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_settings.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_star_id.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_static_alignment_estimator.rst", "calibration/calibration_class/giant.calibration.calibration_class.Calibration.update_temperature_dependent_alignment_estimator.rst", "calibration/estimators/giant.calibration.estimators.CalibrationEstimator.rst", "calibration/estimators/giant.calibration.estimators.CalibrationEstimator.estimate.rst", "calibration/estimators/giant.calibration.estimators.CalibrationEstimator.reset.rst", "calibration/estimators/giant.calibration.estimators.IterativeNonlinearLSTSQ.rst", "calibration/estimators/giant.calibration.estimators.IterativeNonlinearLSTSQ.compute_residuals.rst", "calibration/estimators/giant.calibration.estimators.IterativeNonlinearLSTSQ.estimate.rst", "calibration/estimators/giant.calibration.estimators.IterativeNonlinearLSTSQ.reset.rst", "calibration/estimators/giant.calibration.estimators.LMAEstimator.rst", "calibration/estimators/giant.calibration.estimators.LMAEstimator.compute_residuals.rst", "calibration/estimators/giant.calibration.estimators.LMAEstimator.estimate.rst", "calibration/estimators/giant.calibration.estimators.LMAEstimator.reset.rst", "calibration/estimators/giant.calibration.estimators.StaticAlignmentEstimator.rst", "calibration/estimators/giant.calibration.estimators.StaticAlignmentEstimator.estimate.rst", "calibration/estimators/giant.calibration.estimators.TemperatureDependentAlignmentEstimator.rst", "calibration/estimators/giant.calibration.estimators.TemperatureDependentAlignmentEstimator.estimate.rst", "calibration/giant.calibration.calibration_class.rst", "calibration/giant.calibration.estimators.rst", "calibration/giant.calibration.visualizer.rst", "calibration/visualizer/giant.calibration.visualizer.plot_alignment_residuals.rst", "calibration/visualizer/giant.calibration.visualizer.plot_distortion_map.rst", "calibration/visualizer/giant.calibration.visualizer.plot_focal_length_temperature_dependence.rst", "camera/giant.camera.AttitudeUpdateMethods.rst", "camera/giant.camera.Camera.rst", "camera/giant.camera.Camera.add_images.rst", "camera/giant.camera.Camera.all_off.rst", "camera/giant.camera.Camera.all_on.rst", "camera/giant.camera.Camera.apply_date_range.rst", "camera/giant.camera.Camera.image_check.rst", "camera/giant.camera.Camera.long_off.rst", "camera/giant.camera.Camera.long_on.rst", "camera/giant.camera.Camera.only_long_on.rst", "camera/giant.camera.Camera.only_short_on.rst", "camera/giant.camera.Camera.preprocessor.rst", "camera/giant.camera.Camera.remove_images.rst", "camera/giant.camera.Camera.short_off.rst", "camera/giant.camera.Camera.short_on.rst", "camera/giant.camera.Camera.sort_by_date.rst", "camera/giant.camera.Camera.update_attitude_from_function.rst", "camera/giant.camera.Camera.update_short_attitude.rst", "camera_model/giant.camera_models.camera_model.CameraModel.rst", "camera_model/giant.camera_models.camera_model.CameraModel.apply_update.rst", "camera_model/giant.camera_models.camera_model.CameraModel.compute_jacobian.rst", "camera_model/giant.camera_models.camera_model.CameraModel.compute_pixel_jacobian.rst", "camera_model/giant.camera_models.camera_model.CameraModel.compute_unit_vector_jacobian.rst", "camera_model/giant.camera_models.camera_model.CameraModel.copy.rst", "camera_model/giant.camera_models.camera_model.CameraModel.distort_pixels.rst", "camera_model/giant.camera_models.camera_model.CameraModel.distortion_map.rst", "camera_model/giant.camera_models.camera_model.CameraModel.from_elem.rst", "camera_model/giant.camera_models.camera_model.CameraModel.get_state_labels.rst", "camera_model/giant.camera_models.camera_model.CameraModel.overwrite.rst", "camera_model/giant.camera_models.camera_model.CameraModel.pixels_to_unit.rst", "camera_model/giant.camera_models.camera_model.CameraModel.project_directions.rst", "camera_model/giant.camera_models.camera_model.CameraModel.project_onto_image.rst", "camera_model/giant.camera_models.camera_model.CameraModel.to_elem.rst", "camera_model/giant.camera_models.camera_model.CameraModel.undistort_image.rst", "camera_model/giant.camera_models.camera_model.CameraModel.undistort_pixels.rst", "camera_model/giant.camera_models.camera_model.ReturnShape.rst", "camera_model/giant.camera_models.camera_model.load.rst", "camera_model/giant.camera_models.camera_model.save.rst", "catalogues/giant.catalogues.giant_catalogue.rst", "catalogues/giant.catalogues.meta_catalogue.rst", "catalogues/giant.catalogues.tycho.rst", "catalogues/giant.catalogues.ucac.rst", "catalogues/giant.catalogues.utilities.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.get_all_with_criteria.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.get_from_ids.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.get_tycho2_record.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.get_ucac4_record.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.GIANTCatalogue.query_catalogue.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.blend_stars.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.build_catalogue.rst", "catalogues/giant_catalogue/giant.catalogues.giant_catalogue.find_star_pairs.rst", "catalogues/meta_catalogue/giant.catalogues.meta_catalogue.Catalogue.rst", "catalogues/meta_catalogue/giant.catalogues.meta_catalogue.Catalogue.query_catalogue.rst", "catalogues/meta_catalogue/giant.catalogues.meta_catalogue.GIANT_COLUMNS.rst", "catalogues/meta_catalogue/giant.catalogues.meta_catalogue.GIANT_TYPES.rst", "catalogues/tycho/giant.catalogues.tycho.Tycho2.rst", "catalogues/tycho/giant.catalogues.tycho.Tycho2.convert_to_giant_format.rst", "catalogues/tycho/giant.catalogues.tycho.Tycho2.empty_frame.rst", "catalogues/tycho/giant.catalogues.tycho.Tycho2.nan_frame.rst", "catalogues/tycho/giant.catalogues.tycho.Tycho2.query_catalogue.rst", "catalogues/tycho/giant.catalogues.tycho.Tycho2.query_catalogue_raw.rst", "catalogues/tycho/giant.catalogues.tycho.Tycho2.retrieve_record.rst", "catalogues/tycho/giant.catalogues.tycho.download_tycho.rst", "catalogues/ucac/giant.catalogues.ucac.ColumnOrder.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.build_index.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.convert_to_giant_catalogue.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.cross_ref_tycho.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.dump_to_sqlite.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.get_from_ids.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.get_index_ind.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.get_zone_block.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.query_catalogue.rst", "catalogues/ucac/giant.catalogues.ucac.UCAC4.query_catalogue_raw.rst", "catalogues/ucac/giant.catalogues.ucac.binary_search.rst", "catalogues/ucac/giant.catalogues.ucac.check_file.rst", "catalogues/ucac/giant.catalogues.ucac.download_ucac.rst", "catalogues/utilities/giant.catalogues.utilities.DEG2MAS.rst", "catalogues/utilities/giant.catalogues.utilities.DEG2RAD.rst", "catalogues/utilities/giant.catalogues.utilities.MAS2DEG.rst", "catalogues/utilities/giant.catalogues.utilities.MAS2RAD.rst", "catalogues/utilities/giant.catalogues.utilities.MJD_EPOCH.rst", "catalogues/utilities/giant.catalogues.utilities.PARSEC2KM.rst", "catalogues/utilities/giant.catalogues.utilities.RAD2DEG.rst", "catalogues/utilities/giant.catalogues.utilities.RAD2MAS.rst", "catalogues/utilities/giant.catalogues.utilities.SI_DAYS_PER_YEAR.rst", "catalogues/utilities/giant.catalogues.utilities.SI_SECONDS_PER_DAY.rst", "catalogues/utilities/giant.catalogues.utilities.STAR_DIST.rst", "catalogues/utilities/giant.catalogues.utilities.apply_proper_motion.rst", "catalogues/utilities/giant.catalogues.utilities.datetime_to_mjd_years.rst", "catalogues/utilities/giant.catalogues.utilities.radec_distance.rst", "catalogues/utilities/giant.catalogues.utilities.radec_to_unit.rst", "catalogues/utilities/giant.catalogues.utilities.timedelta_to_si_years.rst", "catalogues/utilities/giant.catalogues.utilities.unit_to_radec.rst", "copyright.rst", "getting_started.rst", "giant.rst", "giant.calibration.rst", "giant.camera.rst", "giant.camera_models.rst", "giant.camera_models.brown_model.rst", "giant.camera_models.camera_model.rst", "giant.camera_models.opencv_model.rst", "giant.camera_models.owen_model.rst", "giant.camera_models.pinhole_model.rst", "giant.catalogues.rst", "giant.image.rst", "giant.image_processing.rst", "giant.opnav_class.rst", "giant.point_spread_functions.rst", "giant.ray_tracer.rst", "giant.relative_opnav.rst", "giant.rotations.rst", "giant.scripts.rst", "giant.stellar_opnav.rst", "giant.ufo.rst", "giant.utilities.rst", "image/giant.image.ExposureType.rst", "image/giant.image.OpNavImage.rst", "image/giant.image.OpNavImage.load_image.rst", "image/giant.image.OpNavImage.parse_data.rst", "image_processing/giant.image_processing.FIRST_ORDER_IMAGINARY_MOMENTS.rst", "image_processing/giant.image_processing.FIRST_ORDER_REAL_MOMENTS.rst", "image_processing/giant.image_processing.HORIZONTAL_KERNEL.rst", "image_processing/giant.image_processing.ImageFlatteningNoiseApprox.rst", "image_processing/giant.image_processing.ImageProcessing.rst", "image_processing/giant.image_processing.ImageProcessing.corners_to_roi.rst", "image_processing/giant.image_processing.ImageProcessing.correlate.rst", "image_processing/giant.image_processing.ImageProcessing.denoise_image.rst", "image_processing/giant.image_processing.ImageProcessing.find_poi_in_roi.rst", "image_processing/giant.image_processing.ImageProcessing.flatten_image_and_get_noise_level.rst", "image_processing/giant.image_processing.ImageProcessing.identify_pixel_edges.rst", "image_processing/giant.image_processing.ImageProcessing.identify_subpixel_limbs.rst", "image_processing/giant.image_processing.ImageProcessing.locate_subpixel_poi_in_roi.rst", "image_processing/giant.image_processing.ImageProcessing.pae_edges.rst", "image_processing/giant.image_processing.ImageProcessing.refine_edges_pae.rst", "image_processing/giant.image_processing.ImageProcessing.refine_edges_zernike_ramp.rst", "image_processing/giant.image_processing.ImageProcessing.refine_locations.rst", "image_processing/giant.image_processing.PAE_A01.rst", "image_processing/giant.image_processing.PAE_A11.rst", "image_processing/giant.image_processing.SECOND_ORDER_MOMENTS.rst", "image_processing/giant.image_processing.SubpixelEdgeMethods.rst", "image_processing/giant.image_processing.VERTICAL_KERNEL.rst", "image_processing/giant.image_processing.cv2_correlator_2d.rst", "image_processing/giant.image_processing.fft_correlator_1d.rst", "image_processing/giant.image_processing.fft_correlator_2d.rst", "image_processing/giant.image_processing.local_maxima.rst", "image_processing/giant.image_processing.otsu.rst", "image_processing/giant.image_processing.parabolic_peak_finder_1d.rst", "image_processing/giant.image_processing.pixel_level_peak_finder_1d.rst", "image_processing/giant.image_processing.pixel_level_peak_finder_2d.rst", "image_processing/giant.image_processing.quadric_peak_finder_2d.rst", "image_processing/giant.image_processing.spatial_correlator_2d.rst", "index.rst", "installation.rst", "license.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.adjust_temperature.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.apply_distortion.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.apply_update.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.compute_jacobian.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.compute_pixel_jacobian.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.compute_unit_vector_jacobian.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.copy.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.distort_pixels.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.distortion_map.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.from_elem.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.get_misalignment.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.get_projections.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.get_state_labels.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.get_temperature_scale.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.overwrite.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.pixels_to_gnomic.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.pixels_to_gnomic_interp.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.pixels_to_unit.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.prepare_interp.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.project_directions.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.project_onto_image.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.reset_misalignment.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.to_elem.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.undistort_image.rst", "opencv_model/giant.camera_models.opencv_model.OpenCVModel.undistort_pixels.rst", "opnav_class/giant.opnav_class.OpNav.rst", "opnav_class/giant.opnav_class.OpNav.add_images.rst", "opnav_class/giant.opnav_class.OpNav.reset_image_processing.rst", "opnav_class/giant.opnav_class.OpNav.update_image_processing.rst", "owen_model/giant.camera_models.owen_model.OwenModel.rst", "owen_model/giant.camera_models.owen_model.OwenModel.adjust_temperature.rst", "owen_model/giant.camera_models.owen_model.OwenModel.apply_distortion.rst", "owen_model/giant.camera_models.owen_model.OwenModel.apply_update.rst", "owen_model/giant.camera_models.owen_model.OwenModel.compute_jacobian.rst", "owen_model/giant.camera_models.owen_model.OwenModel.compute_pixel_jacobian.rst", "owen_model/giant.camera_models.owen_model.OwenModel.compute_unit_vector_jacobian.rst", "owen_model/giant.camera_models.owen_model.OwenModel.copy.rst", "owen_model/giant.camera_models.owen_model.OwenModel.distort_pixels.rst", "owen_model/giant.camera_models.owen_model.OwenModel.distortion_map.rst", "owen_model/giant.camera_models.owen_model.OwenModel.from_elem.rst", "owen_model/giant.camera_models.owen_model.OwenModel.get_misalignment.rst", "owen_model/giant.camera_models.owen_model.OwenModel.get_projections.rst", "owen_model/giant.camera_models.owen_model.OwenModel.get_state_labels.rst", "owen_model/giant.camera_models.owen_model.OwenModel.get_temperature_scale.rst", "owen_model/giant.camera_models.owen_model.OwenModel.overwrite.rst", "owen_model/giant.camera_models.owen_model.OwenModel.pixels_to_gnomic.rst", "owen_model/giant.camera_models.owen_model.OwenModel.pixels_to_gnomic_interp.rst", "owen_model/giant.camera_models.owen_model.OwenModel.pixels_to_unit.rst", "owen_model/giant.camera_models.owen_model.OwenModel.prepare_interp.rst", "owen_model/giant.camera_models.owen_model.OwenModel.project_directions.rst", "owen_model/giant.camera_models.owen_model.OwenModel.project_onto_image.rst", "owen_model/giant.camera_models.owen_model.OwenModel.reset_misalignment.rst", "owen_model/giant.camera_models.owen_model.OwenModel.to_elem.rst", "owen_model/giant.camera_models.owen_model.OwenModel.undistort_image.rst", "owen_model/giant.camera_models.owen_model.OwenModel.undistort_pixels.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.adjust_temperature.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.apply_update.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.compute_jacobian.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.compute_pixel_jacobian.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.compute_unit_vector_jacobian.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.copy.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.distort_pixels.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.distortion_map.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.from_elem.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.get_misalignment.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.get_projections.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.get_state_labels.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.get_temperature_scale.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.overwrite.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.pixels_to_gnomic.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.pixels_to_gnomic_interp.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.pixels_to_unit.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.prepare_interp.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.project_directions.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.project_onto_image.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.reset_misalignment.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.to_elem.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.undistort_image.rst", "pinhole_model/giant.camera_models.pinhole_model.PinholeModel.undistort_pixels.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.__call__.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.apply_1d.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.apply_1d_sized.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.compute_jacobian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.determine_size.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.evaluate.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.fit.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.generate_kernel.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.normalize_amplitude.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.Gaussian.update_state.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.__call__.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.apply_1d.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.apply_1d_sized.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.compute_jacobian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.determine_size.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.evaluate.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.fit.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.generate_kernel.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.normalize_amplitude.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.GeneralizedGaussian.update_state.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.__call__.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.apply_1d.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.apply_1d_sized.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.compute_jacobian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.converge.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.determine_size.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.evaluate.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.fit.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.fit_lstsq.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.generate_kernel.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.normalize_amplitude.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussian.update_state.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.__call__.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.apply_1d.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.apply_1d_sized.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.apply_update_bg.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.compute_jacobian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.compute_jacobian_all.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.compute_jacobian_bg.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.converge.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.determine_size.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.evaluate.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.evaluate_bg.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.fit.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.fit_bg.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.fit_lstsq.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.generate_kernel.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.normalize_amplitude.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGaussianWBackground.update_state.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.__call__.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.apply_1d.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.apply_1d_sized.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.compute_jacobian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.converge.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.determine_size.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.evaluate.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.fit.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.fit_lstsq.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.generate_kernel.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.normalize_amplitude.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian.update_state.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.__call__.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.apply_1d.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.apply_1d_sized.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.apply_update_bg.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.compute_jacobian.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.compute_jacobian_all.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.compute_jacobian_bg.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.converge.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.determine_size.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.evaluate.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.evaluate_bg.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.fit.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.fit_bg.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.fit_lstsq.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.generate_kernel.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.normalize_amplitude.rst", "point_spread_functions/gaussians/giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground.update_state.rst", "point_spread_functions/giant.point_spread_functions.gaussians.rst", "point_spread_functions/giant.point_spread_functions.moments.rst", "point_spread_functions/giant.point_spread_functions.psf_meta.rst", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.rst", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.__call__.rst", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.apply_1d.rst", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.evaluate.rst", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.fit.rst", "point_spread_functions/moments/giant.point_spread_functions.moments.Moment.generate_kernel.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSF.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSF.fit_lstsq.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground.compute_jacobian_all.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground.evaluate.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground.fit_lstsq.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF.compute_jacobian.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF.converge.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF.update_state.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.apply_update_bg.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.compute_jacobian_bg.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.evaluate_bg.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground.fit_bg.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.KernelBasedApply1DPSF.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.KernelBasedApply1DPSF.apply_1d_sized.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.KernelBasedCallPSF.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.KernelBasedCallPSF.__call__.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.__call__.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.apply_1d.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.evaluate.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.fit.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.PointSpreadFunction.generate_kernel.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.SizedPSF.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.SizedPSF.determine_size.rst", "point_spread_functions/psf_meta/giant.point_spread_functions.psf_meta.SizedPSF.generate_kernel.rst", "ray_tracer/giant.ray_tracer.illumination.rst", "ray_tracer/giant.ray_tracer.kdtree.rst", "ray_tracer/giant.ray_tracer.rays.rst", "ray_tracer/giant.ray_tracer.scene.rst", "ray_tracer/giant.ray_tracer.shapes.rst", "ray_tracer/giant.ray_tracer.utilities.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.AshikhminShirleyDiffuseIllumination.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.GaskellIllumination.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.ILLUM_DTYPE.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.IlluminationModel.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.LambertianIllumination.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.LommelSeeligerIllumination.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.McEwenIllumination.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.McEwenIllumination.compute_photoclinometry_jacobian.rst", "ray_tracer/illumination/giant.ray_tracer.illumination.McEwenIllumination.numeric_derivative.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.compute_bounding_box.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.rotate.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.split.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDNode.translate.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.build.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.compute_intersect.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.compute_limb_jacobian.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.find_limbs.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.load.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.rotate.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.save.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.trace.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.KDTree.translate.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.describe_tree.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.get_facet_vertices.rst", "ray_tracer/kdtree/giant.ray_tracer.kdtree.get_ignore_inds.rst", "ray_tracer/rays/giant.ray_tracer.rays.INTERSECT_DTYPE.rst", "ray_tracer/rays/giant.ray_tracer.rays.Rays.rst", "ray_tracer/rays/giant.ray_tracer.rays.Rays.rotate.rst", "ray_tracer/rays/giant.ray_tracer.rays.Rays.translate.rst", "ray_tracer/rays/giant.ray_tracer.rays.compute_rays.rst", "ray_tracer/scene/giant.ray_tracer.scene.CorrectionsType.rst", "ray_tracer/scene/giant.ray_tracer.scene.SPEED_OF_LIGHT.rst", "ray_tracer/scene/giant.ray_tracer.scene.Scene.rst", "ray_tracer/scene/giant.ray_tracer.scene.Scene.calculate_apparent_position.rst", "ray_tracer/scene/giant.ray_tracer.scene.Scene.get_first.rst", "ray_tracer/scene/giant.ray_tracer.scene.Scene.get_illumination_inputs.rst", "ray_tracer/scene/giant.ray_tracer.scene.Scene.phase_angle.rst", "ray_tracer/scene/giant.ray_tracer.scene.Scene.raster_render.rst", "ray_tracer/scene/giant.ray_tracer.scene.Scene.trace.rst", "ray_tracer/scene/giant.ray_tracer.scene.Scene.update.rst", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.rst", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.change_orientation.rst", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.change_position.rst", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.get_apparent_diameter.rst", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.get_bounding_pixels.rst", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.place.rst", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.rotate.rst", "ray_tracer/scene/giant.ray_tracer.scene.SceneObject.translate.rst", "ray_tracer/scene/giant.ray_tracer.scene.correct_light_time.rst", "ray_tracer/scene/giant.ray_tracer.scene.correct_stellar_aberration.rst", "ray_tracer/scene/giant.ray_tracer.scene.correct_stellar_aberration_fsp.rst", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.rst", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.compute_intersect.rst", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.rotate.rst", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.trace.rst", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox.translate.rst", "ray_tracer/shapes/axis_aligned_bounding_box/giant.ray_tracer.shapes.axis_aligned_bounding_box.min_max_to_bounding_box.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_albedos.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_bounding_box.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_intersect.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_limb_jacobian.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.compute_normals.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.find_limbs.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.intersect.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.rotate.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.trace.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.Ellipsoid.translate.rst", "ray_tracer/shapes/ellipsoid/giant.ray_tracer.shapes.ellipsoid.quadratic_equation.rst", "ray_tracer/shapes/giant.ray_tracer.shapes.axis_aligned_bounding_box.rst", "ray_tracer/shapes/giant.ray_tracer.shapes.ellipsoid.rst", "ray_tracer/shapes/giant.ray_tracer.shapes.point.rst", "ray_tracer/shapes/giant.ray_tracer.shapes.shape.rst", "ray_tracer/shapes/giant.ray_tracer.shapes.solid.rst", "ray_tracer/shapes/giant.ray_tracer.shapes.surface.rst", "ray_tracer/shapes/giant.ray_tracer.shapes.triangle.rst", "ray_tracer/shapes/point/giant.ray_tracer.shapes.point.Point.rst", "ray_tracer/shapes/point/giant.ray_tracer.shapes.point.Point.rotate.rst", "ray_tracer/shapes/point/giant.ray_tracer.shapes.point.Point.translate.rst", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.rst", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.compute_intersect.rst", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.compute_limb_jacobian.rst", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.find_limbs.rst", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.rotate.rst", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.trace.rst", "ray_tracer/shapes/shape/giant.ray_tracer.shapes.shape.Shape.translate.rst", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.rst", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.compute_intersect.rst", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.compute_limb_jacobian.rst", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.find_limbs.rst", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.rotate.rst", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.trace.rst", "ray_tracer/shapes/solid/giant.ray_tracer.shapes.solid.Solid.translate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.compute_bounding_box.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.compute_intersect.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.compute_limb_jacobian.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.compute_reference_ellipsoid.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.find_limbs.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.merge.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.rotate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.trace.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.RawSurface.translate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.compute_intersect.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.compute_limb_jacobian.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.find_limbs.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.rotate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.trace.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface.translate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.compute_bounding_box.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.compute_intersect.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.compute_limb_jacobian.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.compute_reference_ellipsoid.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.find_limbs.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.merge.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.rotate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.trace.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface32.translate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_bounding_box.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_intersect.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_limb_jacobian.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_normals.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.compute_reference_ellipsoid.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.find_limbs.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.merge.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.rotate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.trace.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.Surface64.translate.rst", "ray_tracer/shapes/surface/giant.ray_tracer.shapes.surface.find_limbs_surface.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_bounding_box.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_intersect.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_limb_jacobian.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_normals.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.compute_reference_ellipsoid.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.find_limbs.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.get_albedo.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.merge.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.rotate.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.trace.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle32.translate.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_bounding_box.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_intersect.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_limb_jacobian.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_normals.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.compute_reference_ellipsoid.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.find_limbs.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.get_albedo.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.merge.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.rotate.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.trace.rst", "ray_tracer/shapes/triangle/giant.ray_tracer.shapes.triangle.Triangle64.translate.rst", "ray_tracer/utilities/giant.ray_tracer.utilities.compute_com.rst", "ray_tracer/utilities/giant.ray_tracer.utilities.compute_stats.rst", "ray_tracer/utilities/giant.ray_tracer.utilities.find_limbs.rst", "ray_tracer/utilities/giant.ray_tracer.utilities.ref_ellipse.rst", "ray_tracer/utilities/giant.ray_tracer.utilities.to_block.rst", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.rst", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.compute_rays.rst", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.estimate.rst", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.render.rst", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.reset.rst", "relative_opnav/estimators/cross_correlation/giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.target_generator.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.estimate.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.extract_and_pair_limbs.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.reset.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.target_generator.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.LimbExtractionMethods.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.LimbScanner.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.LimbScanner.extract_limbs.rst", "relative_opnav/estimators/ellipse_matching/giant.relative_opnav.estimators.ellipse_matching.LimbScanner.predict_limbs.rst", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator.rst", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator.estimate.rst", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator.reset.rst", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator.target_generator.rst", "relative_opnav/estimators/estimator_interface_abc/giant.relative_opnav.estimators.estimator_interface_abc.RelNavObservablesType.rst", "relative_opnav/estimators/giant.relative_opnav.estimators.cross_correlation.rst", "relative_opnav/estimators/giant.relative_opnav.estimators.ellipse_matching.rst", "relative_opnav/estimators/giant.relative_opnav.estimators.estimator_interface_abc.rst", "relative_opnav/estimators/giant.relative_opnav.estimators.limb_matching.rst", "relative_opnav/estimators/giant.relative_opnav.estimators.moment_algorithm.rst", "relative_opnav/estimators/giant.relative_opnav.estimators.sfn.rst", "relative_opnav/estimators/giant.relative_opnav.estimators.unresolved.rst", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.rst", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.compute_jacobian.rst", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.estimate.rst", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.extract_and_pair_limbs.rst", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.reset.rst", "relative_opnav/estimators/limb_matching/giant.relative_opnav.estimators.limb_matching.LimbMatching.target_generator.rst", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.rst", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.compute_line_of_sight_sun_image.rst", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.compute_phase_correction.rst", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.estimate.rst", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.rastered_phase_correction.rst", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.reset.rst", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.simple_phase_correction.rst", "relative_opnav/estimators/moment_algorithm/giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.target_generator.rst", "relative_opnav/estimators/sfn/giant.relative_opnav.estimators.sfn.sfn_class.rst", "relative_opnav/estimators/sfn/giant.relative_opnav.estimators.sfn.sfn_correlators.rst", "relative_opnav/estimators/sfn/giant.relative_opnav.estimators.sfn.surface_features.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.apply_options.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.compute_rays.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.estimate.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.pnp_solver.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.render.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.reset.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.target_generator.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.rst", "relative_opnav/estimators/sfn/sfn_class/giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.peak_finder.rst", "relative_opnav/estimators/sfn/sfn_correlators/giant.relative_opnav.estimators.sfn.sfn_correlators.sfn_correlator.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.get_first.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.rotate.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.trace.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.translate.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue.update_feature_paths.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.found.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.load.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.not_found.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.trace.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.update_file.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature.update_path.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.VisibleFeatureFinder.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.VisibleFeatureFinder.apply_options.rst", "relative_opnav/estimators/sfn/surface_features/giant.relative_opnav.estimators.sfn.surface_features.VisibleFeatureFinderOptions.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrectionType.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.compute_line_of_sight_sun_image.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.compute_phase_correction.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.estimate.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.rastered_phase_correction.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.reset.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.simple_phase_correction.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.PhaseCorrector.target_generator.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.compute_line_of_sight_sun_image.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.compute_phase_correction.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.estimate.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.rastered_phase_correction.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.reset.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.simple_phase_correction.rst", "relative_opnav/estimators/unresolved/giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.target_generator.rst", "relative_opnav/giant.relative_opnav.estimators.rst", "relative_opnav/giant.relative_opnav.relnav_class.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RESULTS_DTYPE.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.add_images.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.auto_estimate.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.cross_correlation_estimate.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.default_estimator.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.ellipse_matching_estimate.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.limb_matching_estimate.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.moment_algorithm_estimate.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.process_image.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.register.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.reset_image_processing.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.unresolved_estimate.rst", "relative_opnav/relnav_class/giant.relative_opnav.relnav_class.RelativeOpNav.update_image_processing.rst", "rotations/giant.rotations.Rotation.rst", "rotations/giant.rotations.Rotation.copy.rst", "rotations/giant.rotations.Rotation.interp_attitude.rst", "rotations/giant.rotations.Rotation.inv.rst", "rotations/giant.rotations.Rotation.rotate.rst", "rotations/giant.rotations.euler_to_rotmat.rst", "rotations/giant.rotations.nlerp.rst", "rotations/giant.rotations.quaternion_inverse.rst", "rotations/giant.rotations.quaternion_multiplication.rst", "rotations/giant.rotations.quaternion_to_euler.rst", "rotations/giant.rotations.quaternion_to_rotmat.rst", "rotations/giant.rotations.quaternion_to_rotvec.rst", "rotations/giant.rotations.rot_x.rst", "rotations/giant.rotations.rot_y.rst", "rotations/giant.rotations.rot_z.rst", "rotations/giant.rotations.rotmat_to_euler.rst", "rotations/giant.rotations.rotmat_to_quaternion.rst", "rotations/giant.rotations.rotvec_to_quaternion.rst", "rotations/giant.rotations.rotvec_to_rotmat.rst", "rotations/giant.rotations.skew.rst", "rotations/giant.rotations.slerp.rst", "scripts/generate_sample_data/giant.scripts.generate_sample_data.MODEL.rst", "scripts/generate_sample_data/giant.scripts.generate_sample_data.PSF.rst", "scripts/generate_sample_data/giant.scripts.generate_sample_data.camera_orientation.rst", "scripts/generate_sample_data/giant.scripts.generate_sample_data.camera_position.rst", "scripts/generate_sample_data/giant.scripts.generate_sample_data.sun_orientation.rst", "scripts/generate_sample_data/giant.scripts.generate_sample_data.sun_position.rst", "scripts/generate_sample_data/giant.scripts.generate_sample_data.target_orientation.rst", "scripts/generate_sample_data/giant.scripts.generate_sample_data.target_position.rst", "scripts/giant.scripts.build_catalogue.rst", "scripts/giant.scripts.generate_sample_data.rst", "scripts/giant.scripts.ingest_shape.rst", "scripts/giant.scripts.merge_cameras.rst", "scripts/giant.scripts.mosaic_images.rst", "scripts/giant.scripts.shape_stats.rst", "scripts/giant.scripts.spc_to_feature_catalogue.rst", "scripts/giant.scripts.spc_to_results.rst", "scripts/giant.scripts.tile_shape.rst", "stellar_opnav/estimators/giant.stellar_opnav.estimators.AttitudeEstimator.rst", "stellar_opnav/estimators/giant.stellar_opnav.estimators.AttitudeEstimator.estimate.rst", "stellar_opnav/estimators/giant.stellar_opnav.estimators.DavenportQMethod.rst", "stellar_opnav/estimators/giant.stellar_opnav.estimators.DavenportQMethod.compute_residuals.rst", "stellar_opnav/estimators/giant.stellar_opnav.estimators.DavenportQMethod.estimate.rst", "stellar_opnav/giant.stellar_opnav.estimators.rst", "stellar_opnav/giant.stellar_opnav.star_identification.rst", "stellar_opnav/giant.stellar_opnav.stellar_class.rst", "stellar_opnav/giant.stellar_opnav.visualizer.rst", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.rst", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.compute_pointing.rst", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.id_stars.rst", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.project_stars.rst", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.query_catalogue.rst", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.ransac.rst", "stellar_opnav/star_identification/giant.stellar_opnav.star_identification.StarID.ransac_iter_test.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.add_images.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.estimate_attitude.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.id_stars.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.matched_star_residuals.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.remove_matched_stars.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.remove_outliers.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.reproject_stars.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.reset_attitude_estimator.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.reset_image_processing.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.reset_star_id.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.review_outliers.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.sid_summary.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.update_attitude_estimator.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.update_image_processing.rst", "stellar_opnav/stellar_class/giant.stellar_opnav.stellar_class.StellarOpNav.update_star_id.rst", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.OutlierCallback.rst", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.plot_residuals_vs_magnitude.rst", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.plot_residuals_vs_temperature.rst", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.residual_histograms.rst", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.show_id_results.rst", "stellar_opnav/visualizer/giant.stellar_opnav.visualizer.show_outlier.rst", "tutorial/camera_calibration.rst", "tutorial/data_prep.rst", "tutorial/initial_set_up.rst", "tutorial/opnav.rst", "tutorial/organization.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.cancel_join_thread.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.clear.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.close.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.empty.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.full.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.get.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.get_nowait.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.join_thread.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.put.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.put_nowait.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.ClearableQueue.qsize.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.SharedCounter.rst", "ufo/clearable_queue/giant.ufo.clearable_queue.SharedCounter.increment.rst", "ufo/detector/giant.ufo.detector.Detector.rst", "ufo/detector/giant.ufo.detector.Detector.add_images.rst", "ufo/detector/giant.ufo.detector.Detector.clear_results.rst", "ufo/detector/giant.ufo.detector.Detector.find_ufos.rst", "ufo/detector/giant.ufo.detector.Detector.identify_hot_pixels_and_unmatched_stars.rst", "ufo/detector/giant.ufo.detector.Detector.package_results.rst", "ufo/detector/giant.ufo.detector.Detector.remove_duplicates.rst", "ufo/detector/giant.ufo.detector.Detector.save_results.rst", "ufo/detector/giant.ufo.detector.Detector.update_attitude.rst", "ufo/detector/giant.ufo.detector.unit_to_radec_jacobian.rst", "ufo/dynamics/giant.ufo.dynamics.Dynamics.rst", "ufo/dynamics/giant.ufo.dynamics.Dynamics.compute_dynamics.rst", "ufo/dynamics/giant.ufo.dynamics.Dynamics.propagate.rst", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.rst", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.compute_covariance_dynamics.rst", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.compute_dynamics.rst", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.compute_solar_radiation_acceleration.rst", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.compute_state_dynamics.rst", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.get_gm.rst", "ufo/dynamics/giant.ufo.dynamics.SolRadAndGravityDynamics.propagate.rst", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.rst", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.compute_covariance_dynamics.rst", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.compute_dynamics.rst", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.compute_state_dynamics.rst", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.get_gm.rst", "ufo/dynamics/giant.ufo.dynamics.SpiceGravityDynamics.propagate.rst", "ufo/dynamics/giant.ufo.dynamics.zero3.rst", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.rst", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.filter_ekfs.rst", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.find_initial_pairs.rst", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.save_results.rst", "ufo/ekf_tracker/giant.ufo.ekf_tracker.Tracker.track.rst", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.rst", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.compute_residual_statistics.rst", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.initialize.rst", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.process_measurement.rst", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.propagate_and_predict.rst", "ufo/extended_kalman_filter/giant.ufo.extended_kalman_filter.ExtendedKalmanFilter.smooth.rst", "ufo/giant.ufo.clearable_queue.rst", "ufo/giant.ufo.detector.rst", "ufo/giant.ufo.dynamics.rst", "ufo/giant.ufo.ekf_tracker.rst", "ufo/giant.ufo.extended_kalman_filter.rst", "ufo/giant.ufo.measurements.rst", "ufo/giant.ufo.state_initializer.rst", "ufo/giant.ufo.ufo_class.rst", "ufo/giant.ufo.visualizer.rst", "ufo/measurements/giant.ufo.measurements.Measurement.rst", "ufo/measurements/giant.ufo.measurements.Measurement.compare_residuals.rst", "ufo/measurements/giant.ufo.measurements.Measurement.compute_jacobian.rst", "ufo/measurements/giant.ufo.measurements.Measurement.predict.rst", "ufo/measurements/giant.ufo.measurements.OpticalBearingMeasurement.rst", "ufo/measurements/giant.ufo.measurements.OpticalBearingMeasurement.compare_residuals.rst", "ufo/measurements/giant.ufo.measurements.OpticalBearingMeasurement.compute_jacobian.rst", "ufo/measurements/giant.ufo.measurements.OpticalBearingMeasurement.predict.rst", "ufo/state_initializer/giant.ufo.state_initializer.ORExInitializer.rst", "ufo/ufo_class/giant.ufo.ufo_class.UFO.rst", "ufo/ufo_class/giant.ufo.ufo_class.UFO.detect.rst", "ufo/ufo_class/giant.ufo.ufo_class.UFO.save_results.rst", "ufo/ufo_class/giant.ufo.ufo_class.UFO.track.rst", "ufo/ufo_class/giant.ufo.ufo_class.UFO.visualize_detection_results.rst", "ufo/visualizer/giant.ufo.visualizer.show_detections.rst", "utilities/giant.utilities.outlier_identifier.rst", "utilities/giant.utilities.random_combination.rst", "utilities/giant.utilities.spice_interface.rst", "utilities/giant.utilities.stereophotoclinometry.rst", "utilities/giant.utilities.tee.rst", "utilities/outlier_identifier/giant.utilities.outlier_identifier.get_outliers.rst", "utilities/random_combination/giant.utilities.random_combination.RandomCombinations.rst", "utilities/spice_interface/giant.utilities.spice_interface.HAS_SPICE.rst", "utilities/spice_interface/giant.utilities.spice_interface.J2000_EPOCH.rst", "utilities/spice_interface/giant.utilities.spice_interface.LEAP_SECONDS_LIST.rst", "utilities/spice_interface/giant.utilities.spice_interface.SpiceOrientation.rst", "utilities/spice_interface/giant.utilities.spice_interface.SpicePosition.rst", "utilities/spice_interface/giant.utilities.spice_interface.SpicePosition.light_time.rst", "utilities/spice_interface/giant.utilities.spice_interface.SpicePosition.position_light_time.rst", "utilities/spice_interface/giant.utilities.spice_interface.SpiceState.rst", "utilities/spice_interface/giant.utilities.spice_interface.SpiceState.light_time.rst", "utilities/spice_interface/giant.utilities.spice_interface.SpiceState.position_light_time.rst", "utilities/spice_interface/giant.utilities.spice_interface.create_callable_orientation.rst", "utilities/spice_interface/giant.utilities.spice_interface.create_callable_position.rst", "utilities/spice_interface/giant.utilities.spice_interface.create_callable_state.rst", "utilities/spice_interface/giant.utilities.spice_interface.datetime_to_et.rst", "utilities/spice_interface/giant.utilities.spice_interface.et_callable_to_datetime_callable.rst", "utilities/spice_interface/giant.utilities.spice_interface.leap_seconds.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.DATE_FMT.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Image.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Image.read.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Image.write.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Landmark.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Landmark.read.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Landmark.write.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Maplet.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Maplet.get_triangles.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Maplet.read.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Maplet.write.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Nominal.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Nominal.read.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Nominal.write.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Regress.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Regress.read.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.ShapeModel.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.ShapeModel.get_triangles.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.ShapeModel.read.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.ShapeModel.write.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Summary.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Summary.read.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.Summary.write.rst", "utilities/stereophotoclinometry/giant.utilities.stereophotoclinometry.get_distortion.rst", "utilities/tee/giant.utilities.tee.DoubleTee.rst", "utilities/tee/giant.utilities.tee.DoubleTee.close.rst", "utilities/tee/giant.utilities.tee.REDIRECT.rst", "utilities/tee/giant.utilities.tee.Tee.rst", "utilities/tee/giant.utilities.tee.Tee.close.rst", "utilities/tee/giant.utilities.tee.Tee.flush.rst", "utilities/tee/giant.utilities.tee.Tee.write.rst"], "titles": ["BrownModel", "BrownModel.adjust_temperature", "BrownModel.apply_distortion", "BrownModel.apply_update", "BrownModel.compute_jacobian", "BrownModel.compute_pixel_jacobian", "BrownModel.compute_unit_vector_jacobian", "BrownModel.copy", "BrownModel.distort_pixels", "BrownModel.distortion_map", "BrownModel.from_elem", "BrownModel.get_misalignment", "BrownModel.get_projections", "BrownModel.get_state_labels", "BrownModel.get_temperature_scale", "BrownModel.overwrite", "BrownModel.pixels_to_gnomic", "BrownModel.pixels_to_gnomic_interp", "BrownModel.pixels_to_unit", "BrownModel.prepare_interp", "BrownModel.project_directions", "BrownModel.project_onto_image", "BrownModel.reset_misalignment", "BrownModel.to_elem", "BrownModel.undistort_image", "BrownModel.undistort_pixels", "giant.calibration.calibration_class.Calibration", "Calibration.add_images", "Calibration.calib_summary", "Calibration.estimate_attitude", "Calibration.estimate_calibration", "Calibration.estimate_static_alignment", "Calibration.estimate_temperature_dependent_alignment", "Calibration.id_stars", "Calibration.limit_magnitude", "Calibration.matched_star_residuals", "Calibration.remove_matched_stars", "Calibration.remove_outliers", "Calibration.reproject_stars", "Calibration.reset_attitude_estimator", "Calibration.reset_calibration_estimator", "Calibration.reset_image_processing", "Calibration.reset_settings", "Calibration.reset_star_id", "Calibration.reset_static_alignment_estimator", "Calibration.reset_temperature_dependent_alignment_estimator", "Calibration.review_outliers", "Calibration.sid_summary", "Calibration.update_attitude_estimator", "Calibration.update_calibration_estimator", "Calibration.update_image_processing", "Calibration.update_settings", "Calibration.update_star_id", "Calibration.update_static_alignment_estimator", "Calibration.update_temperature_dependent_alignment_estimator", "giant.calibration.estimators.CalibrationEstimator", "CalibrationEstimator.estimate", "CalibrationEstimator.reset", "giant.calibration.estimators.IterativeNonlinearLSTSQ", "IterativeNonlinearLSTSQ.compute_residuals", "IterativeNonlinearLSTSQ.estimate", "IterativeNonlinearLSTSQ.reset", "giant.calibration.estimators.LMAEstimator", "LMAEstimator.compute_residuals", "LMAEstimator.estimate", "LMAEstimator.reset", "giant.calibration.estimators.StaticAlignmentEstimator", "StaticAlignmentEstimator.estimate", "giant.calibration.estimators.TemperatureDependentAlignmentEstimator", "TemperatureDependentAlignmentEstimator.estimate", "giant.calibration.calibration_class", "giant.calibration.estimators", "giant.calibration.visualizer", "plot_alignment_residuals", "plot_distortion_map", "plot_focal_length_temperature_dependence", "AttitudeUpdateMethods", "Camera", "Camera.add_images", "Camera.all_off", "Camera.all_on", "Camera.apply_date_range", "Camera.image_check", "Camera.long_off", "Camera.long_on", "Camera.only_long_on", "Camera.only_short_on", "Camera.preprocessor", "Camera.remove_images", "Camera.short_off", "Camera.short_on", "Camera.sort_by_date", "Camera.update_attitude_from_function", "Camera.update_short_attitude", "CameraModel", "CameraModel.apply_update", "CameraModel.compute_jacobian", "CameraModel.compute_pixel_jacobian", "CameraModel.compute_unit_vector_jacobian", "CameraModel.copy", "CameraModel.distort_pixels", "CameraModel.distortion_map", "CameraModel.from_elem", "CameraModel.get_state_labels", "CameraModel.overwrite", "CameraModel.pixels_to_unit", "CameraModel.project_directions", "CameraModel.project_onto_image", "CameraModel.to_elem", "CameraModel.undistort_image", "CameraModel.undistort_pixels", "ReturnShape", "load", "save", "giant_catalogue", "meta_catalogue", "tycho", "ucac", "utilities", "GIANTCatalogue", "GIANTCatalogue.get_all_with_criteria", "GIANTCatalogue.get_from_ids", "GIANTCatalogue.get_tycho2_record", "GIANTCatalogue.get_ucac4_record", "GIANTCatalogue.query_catalogue", "blend_stars", "build_catalogue", "find_star_pairs", "Catalogue", "Catalogue.query_catalogue", "giant.catalogues.meta_catalogue.GIANT_COLUMNS", "giant.catalogues.meta_catalogue.GIANT_TYPES", "Tycho2", "Tycho2.convert_to_giant_format", "Tycho2.empty_frame", "Tycho2.nan_frame", "Tycho2.query_catalogue", "Tycho2.query_catalogue_raw", "Tycho2.retrieve_record", "download_tycho", "ColumnOrder", "UCAC4", "UCAC4.build_index", "UCAC4.convert_to_giant_catalogue", "UCAC4.cross_ref_tycho", "UCAC4.dump_to_sqlite", "UCAC4.get_from_ids", "UCAC4.get_index_ind", "UCAC4.get_zone_block", "UCAC4.query_catalogue", "UCAC4.query_catalogue_raw", "binary_search", "check_file", "download_ucac", "giant.catalogues.utilities.DEG2MAS", "giant.catalogues.utilities.DEG2RAD", "giant.catalogues.utilities.MAS2DEG", "giant.catalogues.utilities.MAS2RAD", "giant.catalogues.utilities.MJD_EPOCH", "giant.catalogues.utilities.PARSEC2KM", "giant.catalogues.utilities.RAD2DEG", "giant.catalogues.utilities.RAD2MAS", "giant.catalogues.utilities.SI_DAYS_PER_YEAR", "giant.catalogues.utilities.SI_SECONDS_PER_DAY", "giant.catalogues.utilities.STAR_DIST", "apply_proper_motion", "datetime_to_mjd_years", "radec_distance", "radec_to_unit", "timedelta_to_si_years", "unit_to_radec", "Copyright", "Getting Started", "API Reference", "giant.calibration", "giant.camera", "giant.camera_models", "giant.camera_models.brown_model", "giant.camera_models.camera_model", "giant.camera_models.opencv_model", "giant.camera_models.owen_model", "giant.camera_models.pinhole_model", "catalogues", "giant.image", "giant.image_processing", "giant.opnav_class", "giant.point_spread_functions", "ray_tracer", "giant.relative_opnav", "giant.rotations", "giant.scripts", "giant.stellar_opnav", "giant.ufo", "giant.utilities", "ExposureType", "OpNavImage", "OpNavImage.load_image", "OpNavImage.parse_data", "giant.image_processing.FIRST_ORDER_IMAGINARY_MOMENTS", "giant.image_processing.FIRST_ORDER_REAL_MOMENTS", "giant.image_processing.HORIZONTAL_KERNEL", "ImageFlatteningNoiseApprox", "ImageProcessing", "ImageProcessing.corners_to_roi", "ImageProcessing.correlate", "ImageProcessing.denoise_image", "ImageProcessing.find_poi_in_roi", "ImageProcessing.flatten_image_and_get_noise_level", "ImageProcessing.identify_pixel_edges", "ImageProcessing.identify_subpixel_limbs", "ImageProcessing.locate_subpixel_poi_in_roi", "ImageProcessing.pae_edges", "ImageProcessing.refine_edges_pae", "ImageProcessing.refine_edges_zernike_ramp", "ImageProcessing.refine_locations", "giant.image_processing.PAE_A01", "giant.image_processing.PAE_A11", "giant.image_processing.SECOND_ORDER_MOMENTS", "SubpixelEdgeMethods", "giant.image_processing.VERTICAL_KERNEL", "cv2_correlator_2d", "fft_correlator_1d", "fft_correlator_2d", "giant.image_processing.local_maxima", "giant.image_processing.otsu", "parabolic_peak_finder_1d", "pixel_level_peak_finder_1d", "giant.image_processing.pixel_level_peak_finder_2d", "giant.image_processing.quadric_peak_finder_2d", "spatial_correlator_2d", "Goddard Image Analysis and Navigation Tool", "Installing GIANT", "License", "OpenCVModel", "OpenCVModel.adjust_temperature", "OpenCVModel.apply_distortion", "OpenCVModel.apply_update", "OpenCVModel.compute_jacobian", "OpenCVModel.compute_pixel_jacobian", "OpenCVModel.compute_unit_vector_jacobian", "OpenCVModel.copy", "OpenCVModel.distort_pixels", "OpenCVModel.distortion_map", "OpenCVModel.from_elem", "OpenCVModel.get_misalignment", "OpenCVModel.get_projections", "OpenCVModel.get_state_labels", "OpenCVModel.get_temperature_scale", "OpenCVModel.overwrite", "OpenCVModel.pixels_to_gnomic", "OpenCVModel.pixels_to_gnomic_interp", "OpenCVModel.pixels_to_unit", "OpenCVModel.prepare_interp", "OpenCVModel.project_directions", "OpenCVModel.project_onto_image", "OpenCVModel.reset_misalignment", "OpenCVModel.to_elem", "OpenCVModel.undistort_image", "OpenCVModel.undistort_pixels", "OpNav", "OpNav.add_images", "OpNav.reset_image_processing", "OpNav.update_image_processing", "OwenModel", "OwenModel.adjust_temperature", "OwenModel.apply_distortion", "OwenModel.apply_update", "OwenModel.compute_jacobian", "OwenModel.compute_pixel_jacobian", "OwenModel.compute_unit_vector_jacobian", "OwenModel.copy", "OwenModel.distort_pixels", "OwenModel.distortion_map", "OwenModel.from_elem", "OwenModel.get_misalignment", "OwenModel.get_projections", "OwenModel.get_state_labels", "OwenModel.get_temperature_scale", "OwenModel.overwrite", "OwenModel.pixels_to_gnomic", "OwenModel.pixels_to_gnomic_interp", "OwenModel.pixels_to_unit", "OwenModel.prepare_interp", "OwenModel.project_directions", "OwenModel.project_onto_image", "OwenModel.reset_misalignment", "OwenModel.to_elem", "OwenModel.undistort_image", "OwenModel.undistort_pixels", "PinholeModel", "PinholeModel.adjust_temperature", "PinholeModel.apply_update", "PinholeModel.compute_jacobian", "PinholeModel.compute_pixel_jacobian", "PinholeModel.compute_unit_vector_jacobian", "PinholeModel.copy", "PinholeModel.distort_pixels", "PinholeModel.distortion_map", "PinholeModel.from_elem", "PinholeModel.get_misalignment", "PinholeModel.get_projections", "PinholeModel.get_state_labels", "PinholeModel.get_temperature_scale", "PinholeModel.overwrite", "PinholeModel.pixels_to_gnomic", "PinholeModel.pixels_to_gnomic_interp", "PinholeModel.pixels_to_unit", "PinholeModel.prepare_interp", "PinholeModel.project_directions", "PinholeModel.project_onto_image", "PinholeModel.reset_misalignment", "PinholeModel.to_elem", "PinholeModel.undistort_image", "PinholeModel.undistort_pixels", "Gaussian", "Gaussian.__call__", "Gaussian.apply_1d", "Gaussian.apply_1d_sized", "Gaussian.compute_jacobian", "Gaussian.determine_size", "Gaussian.evaluate", "Gaussian.fit", "Gaussian.generate_kernel", "Gaussian.normalize_amplitude", "Gaussian.update_state", "GeneralizedGaussian", "GeneralizedGaussian.__call__", "GeneralizedGaussian.apply_1d", "GeneralizedGaussian.apply_1d_sized", "GeneralizedGaussian.compute_jacobian", "GeneralizedGaussian.determine_size", "GeneralizedGaussian.evaluate", "GeneralizedGaussian.fit", "GeneralizedGaussian.generate_kernel", "GeneralizedGaussian.normalize_amplitude", "GeneralizedGaussian.update_state", "IterativeGaussian", "IterativeGaussian.__call__", "IterativeGaussian.apply_1d", "IterativeGaussian.apply_1d_sized", "IterativeGaussian.compute_jacobian", "IterativeGaussian.converge", "IterativeGaussian.determine_size", "IterativeGaussian.evaluate", "IterativeGaussian.fit", "IterativeGaussian.fit_lstsq", "IterativeGaussian.generate_kernel", "IterativeGaussian.normalize_amplitude", "IterativeGaussian.update_state", "IterativeGaussianWBackground", "IterativeGaussianWBackground.__call__", "IterativeGaussianWBackground.apply_1d", "IterativeGaussianWBackground.apply_1d_sized", "IterativeGaussianWBackground.apply_update_bg", "IterativeGaussianWBackground.compute_jacobian", "IterativeGaussianWBackground.compute_jacobian_all", "IterativeGaussianWBackground.compute_jacobian_bg", "IterativeGaussianWBackground.converge", "IterativeGaussianWBackground.determine_size", "IterativeGaussianWBackground.evaluate", "IterativeGaussianWBackground.evaluate_bg", "IterativeGaussianWBackground.fit", "IterativeGaussianWBackground.fit_bg", "IterativeGaussianWBackground.fit_lstsq", "IterativeGaussianWBackground.generate_kernel", "IterativeGaussianWBackground.normalize_amplitude", "IterativeGaussianWBackground.update_state", "IterativeGeneralizedGaussian", "IterativeGeneralizedGaussian.__call__", "IterativeGeneralizedGaussian.apply_1d", "IterativeGeneralizedGaussian.apply_1d_sized", "IterativeGeneralizedGaussian.compute_jacobian", "IterativeGeneralizedGaussian.converge", "IterativeGeneralizedGaussian.determine_size", "IterativeGeneralizedGaussian.evaluate", "IterativeGeneralizedGaussian.fit", "IterativeGeneralizedGaussian.fit_lstsq", "IterativeGeneralizedGaussian.generate_kernel", "IterativeGeneralizedGaussian.normalize_amplitude", "IterativeGeneralizedGaussian.update_state", "IterativeGeneralizedGaussianWBackground", "IterativeGeneralizedGaussianWBackground.__call__", "IterativeGeneralizedGaussianWBackground.apply_1d", "IterativeGeneralizedGaussianWBackground.apply_1d_sized", "IterativeGeneralizedGaussianWBackground.apply_update_bg", "IterativeGeneralizedGaussianWBackground.compute_jacobian", "IterativeGeneralizedGaussianWBackground.compute_jacobian_all", "IterativeGeneralizedGaussianWBackground.compute_jacobian_bg", "IterativeGeneralizedGaussianWBackground.converge", "IterativeGeneralizedGaussianWBackground.determine_size", "IterativeGeneralizedGaussianWBackground.evaluate", "IterativeGeneralizedGaussianWBackground.evaluate_bg", "IterativeGeneralizedGaussianWBackground.fit", "IterativeGeneralizedGaussianWBackground.fit_bg", "IterativeGeneralizedGaussianWBackground.fit_lstsq", "IterativeGeneralizedGaussianWBackground.generate_kernel", "IterativeGeneralizedGaussianWBackground.normalize_amplitude", "IterativeGeneralizedGaussianWBackground.update_state", "giant.point_spread_functions.gaussians", "giant.point_spread_functions.moments", "giant.point_spread_functions.psf_meta", "Moment", "Moment.__call__", "Moment.apply_1d", "Moment.evaluate", "Moment.fit", "Moment.generate_kernel", "InitialGuessIterativeNonlinearLSTSQPSF", "InitialGuessIterativeNonlinearLSTSQPSF.fit_lstsq", "InitialGuessIterativeNonlinearLSTSQPSFwBackground", "InitialGuessIterativeNonlinearLSTSQPSFwBackground.compute_jacobian_all", "InitialGuessIterativeNonlinearLSTSQPSFwBackground.evaluate", "InitialGuessIterativeNonlinearLSTSQPSFwBackground.fit_lstsq", "IterativeNonlinearLSTSQPSF", "IterativeNonlinearLSTSQPSF.compute_jacobian", "IterativeNonlinearLSTSQPSF.converge", "IterativeNonlinearLSTSQPSF.update_state", "IterativeNonlinearLSTSQwBackground", "IterativeNonlinearLSTSQwBackground.apply_update_bg", "IterativeNonlinearLSTSQwBackground.compute_jacobian_bg", "IterativeNonlinearLSTSQwBackground.evaluate_bg", "IterativeNonlinearLSTSQwBackground.fit_bg", "KernelBasedApply1DPSF", "KernelBasedApply1DPSF.apply_1d_sized", "KernelBasedCallPSF", "KernelBasedCallPSF.__call__", "PointSpreadFunction", "PointSpreadFunction.__call__", "PointSpreadFunction.apply_1d", "PointSpreadFunction.evaluate", "PointSpreadFunction.fit", "PointSpreadFunction.generate_kernel", "SizedPSF", "SizedPSF.determine_size", "SizedPSF.generate_kernel", "illumination", "kdtree", "rays", "scene", "shapes", "utilities", "AshikhminShirleyDiffuseIllumination", "GaskellIllumination", "giant.ray_tracer.illumination.ILLUM_DTYPE", "IlluminationModel", "LambertianIllumination", "LommelSeeligerIllumination", "McEwenIllumination", "McEwenIllumination.compute_photoclinometry_jacobian", "McEwenIllumination.numeric_derivative", "KDNode", "KDNode.compute_bounding_box", "KDNode.rotate", "KDNode.split", "KDNode.translate", "KDTree", "KDTree.build", "KDTree.compute_intersect", "KDTree.compute_limb_jacobian", "KDTree.find_limbs", "KDTree.load", "KDTree.rotate", "KDTree.save", "KDTree.trace", "KDTree.translate", "describe_tree", "get_facet_vertices", "get_ignore_inds", "giant.ray_tracer.rays.INTERSECT_DTYPE", "Rays", "Rays.rotate", "Rays.translate", "compute_rays", "CorrectionsType", "giant.ray_tracer.scene.SPEED_OF_LIGHT", "Scene", "Scene.calculate_apparent_position", "Scene.get_first", "Scene.get_illumination_inputs", "Scene.phase_angle", "Scene.raster_render", "Scene.trace", "Scene.update", "SceneObject", "SceneObject.change_orientation", "SceneObject.change_position", "SceneObject.get_apparent_diameter", "SceneObject.get_bounding_pixels", "SceneObject.place", "SceneObject.rotate", "SceneObject.translate", "correct_light_time", "correct_stellar_aberration", "correct_stellar_aberration_fsp", "AxisAlignedBoundingBox", "AxisAlignedBoundingBox.compute_intersect", "AxisAlignedBoundingBox.rotate", "AxisAlignedBoundingBox.trace", "AxisAlignedBoundingBox.translate", "min_max_to_bounding_box", "Ellipsoid", "Ellipsoid.compute_albedos", "Ellipsoid.compute_bounding_box", "Ellipsoid.compute_intersect", "Ellipsoid.compute_limb_jacobian", "Ellipsoid.compute_normals", "Ellipsoid.find_limbs", "Ellipsoid.intersect", "Ellipsoid.rotate", "Ellipsoid.trace", "Ellipsoid.translate", "quadratic_equation", "axis_aligned_bounding_box", "ellipsoid", "point", "shape", "solid", "surface", "triangle", "Point", "Point.rotate", "Point.translate", "Shape", "Shape.compute_intersect", "Shape.compute_limb_jacobian", "Shape.find_limbs", "Shape.rotate", "Shape.trace", "Shape.translate", "Solid", "Solid.compute_intersect", "Solid.compute_limb_jacobian", "Solid.find_limbs", "Solid.rotate", "Solid.trace", "Solid.translate", "RawSurface", "RawSurface.compute_bounding_box", "RawSurface.compute_intersect", "RawSurface.compute_limb_jacobian", "RawSurface.compute_reference_ellipsoid", "RawSurface.find_limbs", "RawSurface.merge", "RawSurface.rotate", "RawSurface.trace", "RawSurface.translate", "Surface", "Surface.compute_intersect", "Surface.compute_limb_jacobian", "Surface.find_limbs", "Surface.rotate", "Surface.trace", "Surface.translate", "Surface32", "Surface32.compute_bounding_box", "Surface32.compute_intersect", "Surface32.compute_limb_jacobian", "Surface32.compute_reference_ellipsoid", "Surface32.find_limbs", "Surface32.merge", "Surface32.rotate", "Surface32.trace", "Surface32.translate", "Surface64", "Surface64.compute_bounding_box", "Surface64.compute_intersect", "Surface64.compute_limb_jacobian", "Surface64.compute_normals", "Surface64.compute_reference_ellipsoid", "Surface64.find_limbs", "Surface64.merge", "Surface64.rotate", "Surface64.trace", "Surface64.translate", "find_limbs_surface", "Triangle32", "Triangle32.compute_bounding_box", "Triangle32.compute_intersect", "Triangle32.compute_limb_jacobian", "Triangle32.compute_normals", "Triangle32.compute_reference_ellipsoid", "Triangle32.find_limbs", "Triangle32.get_albedo", "Triangle32.merge", "Triangle32.rotate", "Triangle32.trace", "Triangle32.translate", "Triangle64", "Triangle64.compute_bounding_box", "Triangle64.compute_intersect", "Triangle64.compute_limb_jacobian", "Triangle64.compute_normals", "Triangle64.compute_reference_ellipsoid", "Triangle64.find_limbs", "Triangle64.get_albedo", "Triangle64.merge", "Triangle64.rotate", "Triangle64.trace", "Triangle64.translate", "compute_com", "compute_stats", "find_limbs", "ref_ellipse", "to_block", "XCorrCenterFinding", "XCorrCenterFinding.compute_rays", "XCorrCenterFinding.estimate", "XCorrCenterFinding.render", "XCorrCenterFinding.reset", "XCorrCenterFinding.target_generator", "EllipseMatching", "EllipseMatching.estimate", "EllipseMatching.extract_and_pair_limbs", "EllipseMatching.reset", "EllipseMatching.target_generator", "LimbExtractionMethods", "LimbScanner", "LimbScanner.extract_limbs", "LimbScanner.predict_limbs", "RelNavEstimator", "RelNavEstimator.estimate", "RelNavEstimator.reset", "RelNavEstimator.target_generator", "RelNavObservablesType", "cross_correlation", "ellipse_matching", "estimator_interface_abc", "limb_matching", "moment_algorithm", "sfn", "unresolved", "LimbMatching", "LimbMatching.compute_jacobian", "LimbMatching.estimate", "LimbMatching.extract_and_pair_limbs", "LimbMatching.reset", "LimbMatching.target_generator", "MomentAlgorithm", "MomentAlgorithm.compute_line_of_sight_sun_image", "MomentAlgorithm.compute_phase_correction", "MomentAlgorithm.estimate", "MomentAlgorithm.rastered_phase_correction", "MomentAlgorithm.reset", "MomentAlgorithm.simple_phase_correction", "MomentAlgorithm.target_generator", "sfn_class", "sfn_correlators", "surface_features", "SurfaceFeatureNavigation", "SurfaceFeatureNavigation.apply_options", "SurfaceFeatureNavigation.compute_rays", "SurfaceFeatureNavigation.estimate", "SurfaceFeatureNavigation.pnp_solver", "SurfaceFeatureNavigation.render", "SurfaceFeatureNavigation.reset", "SurfaceFeatureNavigation.target_generator", "SurfaceFeatureNavigationOptions", "SurfaceFeatureNavigationOptions.peak_finder", "sfn_correlator", "FeatureCatalogue", "FeatureCatalogue.get_first", "FeatureCatalogue.rotate", "FeatureCatalogue.trace", "FeatureCatalogue.translate", "FeatureCatalogue.update_feature_paths", "SurfaceFeature", "SurfaceFeature.found", "SurfaceFeature.load", "SurfaceFeature.not_found", "SurfaceFeature.trace", "SurfaceFeature.update_file", "SurfaceFeature.update_path", "VisibleFeatureFinder", "VisibleFeatureFinder.apply_options", "VisibleFeatureFinderOptions", "PhaseCorrectionType", "PhaseCorrector", "PhaseCorrector.compute_line_of_sight_sun_image", "PhaseCorrector.compute_phase_correction", "PhaseCorrector.estimate", "PhaseCorrector.rastered_phase_correction", "PhaseCorrector.reset", "PhaseCorrector.simple_phase_correction", "PhaseCorrector.target_generator", "UnresolvedCenterFinding", "UnresolvedCenterFinding.compute_line_of_sight_sun_image", "UnresolvedCenterFinding.compute_phase_correction", "UnresolvedCenterFinding.estimate", "UnresolvedCenterFinding.rastered_phase_correction", "UnresolvedCenterFinding.reset", "UnresolvedCenterFinding.simple_phase_correction", "UnresolvedCenterFinding.target_generator", "estimators", "relnav_class", "giant.relative_opnav.relnav_class.RESULTS_DTYPE", "RelativeOpNav", "RelativeOpNav.add_images", "RelativeOpNav.auto_estimate", "RelativeOpNav.cross_correlation_estimate", "RelativeOpNav.default_estimator", "RelativeOpNav.ellipse_matching_estimate", "RelativeOpNav.limb_matching_estimate", "RelativeOpNav.moment_algorithm_estimate", "RelativeOpNav.process_image", "RelativeOpNav.register", "RelativeOpNav.reset_image_processing", "RelativeOpNav.unresolved_estimate", "RelativeOpNav.update_image_processing", "Rotation", "Rotation.copy", "Rotation.interp_attitude", "Rotation.inv", "Rotation.rotate", "euler_to_rotmat", "nlerp", "quaternion_inverse", "quaternion_multiplication", "quaternion_to_euler", "quaternion_to_rotmat", "quaternion_to_rotvec", "rot_x", "rot_y", "rot_z", "rotmat_to_euler", "rotmat_to_quaternion", "rotvec_to_quaternion", "rotvec_to_rotmat", "skew", "slerp", "MODEL", "PSF", "giant.scripts.generate_sample_data.camera_orientation", "giant.scripts.generate_sample_data.camera_position", "giant.scripts.generate_sample_data.sun_orientation", "giant.scripts.generate_sample_data.sun_position", "giant.scripts.generate_sample_data.target_orientation", "giant.scripts.generate_sample_data.target_position", "build_catalogue", "generate_sample_data", "ingest_shape", "merge_cameras", "mosaic_images", "shape_stats", "spc_to_feature_catalogue", "spc_to_results", "tile_shape", "AttitudeEstimator", "AttitudeEstimator.estimate", "DavenportQMethod", "DavenportQMethod.compute_residuals", "DavenportQMethod.estimate", "giant.stellar_opnav.estimators", "giant.stellar_opnav.star_identification", "giant.stellar_opnav.stellar_class", "giant.stellar_opnav.visualizer", "StarID", "StarID.compute_pointing", "StarID.id_stars", "StarID.project_stars", "StarID.query_catalogue", "StarID.ransac", "StarID.ransac_iter_test", "StellarOpNav", "StellarOpNav.add_images", "StellarOpNav.estimate_attitude", "StellarOpNav.id_stars", "StellarOpNav.matched_star_residuals", "StellarOpNav.remove_matched_stars", "StellarOpNav.remove_outliers", "StellarOpNav.reproject_stars", "StellarOpNav.reset_attitude_estimator", "StellarOpNav.reset_image_processing", "StellarOpNav.reset_star_id", "StellarOpNav.review_outliers", "StellarOpNav.sid_summary", "StellarOpNav.update_attitude_estimator", "StellarOpNav.update_image_processing", "StellarOpNav.update_star_id", "OutlierCallback", "giant.stellar_opnav.visualizer.plot_residuals_vs_magnitude", "giant.stellar_opnav.visualizer.plot_residuals_vs_temperature", "giant.stellar_opnav.visualizer.residual_histograms", "show_id_results", "show_outlier", "Performing Camera Calibration", "Acquiring Data for the Tutorial", "Initial Set-up", "Performing Optical Navigation", "Organization", "ClearableQueue", "ClearableQueue.cancel_join_thread", "ClearableQueue.clear", "ClearableQueue.close", "ClearableQueue.empty", "ClearableQueue.full", "ClearableQueue.get", "ClearableQueue.get_nowait", "ClearableQueue.join_thread", "ClearableQueue.put", "ClearableQueue.put_nowait", "ClearableQueue.qsize", "SharedCounter", "SharedCounter.increment", "Detector", "Detector.add_images", "Detector.clear_results", "Detector.find_ufos", "Detector.identify_hot_pixels_and_unmatched_stars", "Detector.package_results", "Detector.remove_duplicates", "Detector.save_results", "Detector.update_attitude", "unit_to_radec_jacobian", "Dynamics", "Dynamics.compute_dynamics", "Dynamics.propagate", "SolRadAndGravityDynamics", "SolRadAndGravityDynamics.compute_covariance_dynamics", "SolRadAndGravityDynamics.compute_dynamics", "SolRadAndGravityDynamics.compute_solar_radiation_acceleration", "SolRadAndGravityDynamics.compute_state_dynamics", "SolRadAndGravityDynamics.get_gm", "SolRadAndGravityDynamics.propagate", "SpiceGravityDynamics", "SpiceGravityDynamics.compute_covariance_dynamics", "SpiceGravityDynamics.compute_dynamics", "SpiceGravityDynamics.compute_state_dynamics", "SpiceGravityDynamics.get_gm", "SpiceGravityDynamics.propagate", "zero3", "Tracker", "Tracker.filter_ekfs", "Tracker.find_initial_pairs", "Tracker.save_results", "Tracker.track", "ExtendedKalmanFilter", "ExtendedKalmanFilter.compute_residual_statistics", "ExtendedKalmanFilter.initialize", "ExtendedKalmanFilter.process_measurement", "ExtendedKalmanFilter.propagate_and_predict", "ExtendedKalmanFilter.smooth", "giant.ufo.clearable_queue", "giant.ufo.detector", "giant.ufo.dynamics", "giant.ufo.ekf_tracker", "extended_kalman_filter", "measurements", "giant.ufo.state_initializer", "giant.ufo.ufo_class", "giant.ufo.visualizer", "Measurement", "Measurement.compare_residuals", "Measurement.compute_jacobian", "Measurement.predict", "OpticalBearingMeasurement", "OpticalBearingMeasurement.compare_residuals", "OpticalBearingMeasurement.compute_jacobian", "OpticalBearingMeasurement.predict", "ORExInitializer", "UFO", "UFO.detect", "UFO.save_results", "UFO.track", "UFO.visualize_detection_results", "show_detections", "giant.utilities.outlier_identifier", "giant.utilities.random_combination", "giant.utilities.spice_interface", "giant.utilties.stereophotoclinometry", "giant.utilities.tee", "get_outliers", "RandomCombinations", "HAS_SPICE", "J2000_EPOCH", "LEAP_SECONDS_LIST", "SpiceOrientation", "SpicePosition", "SpicePosition.light_time", "SpicePosition.position_light_time", "SpiceState", "SpiceState.light_time", "SpiceState.position_light_time", "create_callable_orientation", "create_callable_position", "create_callable_state", "datetime_to_et", "et_callable_to_datetime_callable", "leap_seconds", "DATE_FMT", "Image", "Image.read", "Image.write", "Landmark", "Landmark.read", "Landmark.write", "Maplet", "Maplet.get_triangles", "Maplet.read", "Maplet.write", "Nominal", "Nominal.read", "Nominal.write", "Regress", "Regress.read", "ShapeModel", "ShapeModel.get_triangles", "ShapeModel.read", "ShapeModel.write", "Summary", "Summary.read", "Summary.write", "get_distortion", "DoubleTee", "DoubleTee.close", "REDIRECT", "Tee", "Tee.close", "Tee.flush", "Tee.write"], "terms": {"giant": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 172, 182, 187, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 220, 221, 222, 225, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918], "camera_model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 77, 94, 101, 111, 112, 113, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 435, 672, 674, 784, 787, 788, 854], "brown_model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 176], "class": [0, 10, 15, 23, 26, 27, 29, 33, 42, 50, 52, 55, 58, 60, 62, 66, 68, 70, 71, 76, 77, 78, 79, 80, 82, 94, 102, 104, 108, 111, 113, 114, 115, 116, 117, 119, 126, 128, 131, 132, 140, 141, 151, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 201, 202, 205, 218, 233, 243, 248, 256, 259, 260, 262, 263, 273, 278, 286, 289, 298, 303, 311, 314, 320, 325, 331, 336, 341, 343, 345, 349, 357, 359, 361, 363, 367, 372, 374, 376, 380, 388, 390, 392, 394, 398, 399, 400, 401, 407, 408, 409, 411, 412, 413, 415, 417, 422, 424, 426, 429, 430, 432, 435, 436, 437, 438, 441, 442, 444, 445, 446, 447, 450, 455, 469, 473, 475, 478, 483, 494, 500, 512, 513, 514, 515, 516, 517, 518, 519, 522, 523, 527, 529, 530, 534, 536, 546, 553, 563, 575, 587, 604, 610, 615, 616, 619, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 637, 640, 645, 646, 647, 648, 649, 656, 658, 659, 665, 666, 668, 672, 673, 674, 675, 676, 684, 687, 692, 693, 695, 696, 704, 707, 708, 740, 746, 748, 751, 752, 753, 754, 755, 757, 759, 762, 763, 764, 765, 776, 777, 778, 784, 787, 788, 789, 801, 803, 804, 808, 813, 816, 823, 830, 835, 841, 842, 843, 844, 845, 846, 847, 848, 850, 854, 858, 859, 866, 867, 868, 869, 871, 875, 876, 879, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 912, 914, 915, 916], "intrinsic_matrix": [0, 8, 25, 233, 241, 258, 263, 268, 271, 288, 289, 293, 296, 313, 908], "none": [0, 9, 19, 26, 28, 30, 31, 32, 35, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 86, 89, 90, 94, 101, 111, 112, 113, 120, 122, 123, 124, 126, 129, 135, 136, 137, 140, 144, 145, 149, 150, 151, 152, 174, 186, 194, 195, 201, 202, 206, 210, 212, 213, 214, 218, 233, 242, 252, 259, 262, 263, 272, 282, 289, 297, 307, 314, 316, 317, 319, 322, 323, 324, 325, 327, 328, 330, 333, 334, 335, 336, 338, 339, 341, 342, 346, 347, 348, 349, 351, 352, 353, 357, 358, 364, 365, 366, 367, 369, 370, 372, 373, 377, 378, 379, 380, 382, 383, 384, 388, 389, 395, 396, 397, 400, 401, 403, 407, 409, 415, 416, 417, 418, 423, 426, 428, 432, 433, 434, 450, 453, 455, 458, 459, 469, 473, 475, 476, 480, 482, 483, 486, 487, 488, 494, 500, 504, 506, 524, 525, 531, 532, 536, 539, 541, 548, 549, 553, 556, 558, 563, 566, 569, 574, 575, 578, 581, 587, 590, 593, 601, 604, 606, 608, 609, 610, 611, 613, 614, 615, 616, 619, 620, 621, 622, 623, 624, 628, 631, 633, 635, 636, 637, 639, 640, 642, 644, 648, 651, 652, 654, 655, 656, 658, 659, 662, 665, 672, 674, 675, 676, 678, 679, 681, 683, 684, 686, 687, 689, 691, 692, 693, 695, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 745, 748, 749, 750, 755, 757, 761, 762, 766, 776, 777, 779, 780, 781, 782, 786, 799, 803, 816, 823, 830, 834, 835, 838, 839, 854, 858, 859, 876, 879, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 913, 914, 915, 916, 917, 918], "fx": [0, 4, 12, 174, 177, 179, 233, 237, 245, 729, 784], "fy": [0, 4, 12, 174, 177, 179, 233, 237, 245, 729, 784], "px": [0, 4, 12, 21, 174, 177, 179, 180, 181, 233, 237, 245, 254, 263, 267, 275, 284, 289, 292, 300, 309, 435, 729, 784, 902, 908], "py": [0, 4, 12, 21, 166, 174, 177, 179, 180, 181, 233, 237, 245, 254, 263, 267, 275, 284, 289, 292, 300, 309, 435, 483, 488, 491, 729, 739, 784, 785, 786, 787, 902, 908], "alpha": [0, 4, 5, 168, 177, 179, 180, 233, 237, 238, 263, 442, 445, 446, 447, 448, 449, 729, 812, 892, 895, 908], "kx": [0, 21, 180, 181, 233, 254, 263, 267, 275, 284, 289, 292, 300, 309, 435, 902], "ky": [0, 21, 180, 181, 233, 254, 263, 267, 275, 284, 289, 292, 300, 309, 435, 902], "kxy": [0, 233, 263, 902], "field_of_view": [0, 9, 94, 101, 174, 177, 178, 179, 180, 181, 233, 242, 263, 272, 289, 297, 672, 674, 729, 759, 784], "use_a_priori": [0, 4, 55, 58, 62, 94, 174, 233, 237, 263, 267, 289, 292, 729], "fals": [0, 16, 23, 26, 29, 34, 55, 56, 58, 60, 62, 77, 78, 79, 81, 82, 83, 85, 86, 89, 92, 93, 94, 113, 126, 136, 145, 146, 149, 150, 174, 186, 191, 195, 202, 208, 223, 233, 249, 256, 263, 279, 286, 289, 304, 311, 314, 325, 336, 349, 367, 380, 401, 426, 441, 442, 445, 446, 447, 448, 450, 453, 463, 478, 495, 497, 544, 551, 561, 572, 585, 597, 610, 619, 624, 628, 631, 637, 648, 651, 653, 656, 658, 676, 684, 692, 693, 695, 729, 739, 741, 742, 743, 745, 748, 752, 755, 757, 758, 762, 764, 779, 781, 782, 784, 787, 816, 820, 823, 826, 838, 840, 851, 855, 863, 864, 870, 896], "distortion_coeffici": [0, 233, 263], "k1": [0, 174, 177, 179, 233, 729, 784], "k2": [0, 177, 179, 233, 729], "k3": [0, 177, 179, 233, 729], "p1": [0, 68, 174, 233, 729, 784], "p2": [0, 233, 729, 784], "radial2": [0, 180, 263, 275, 284], "radial4": [0, 263], "radial6": 0, "tiptilt_i": [0, 233], "tiptilt_x": [0, 233], "temperature_coeffici": [0, 19, 233, 252, 263, 282, 289, 307], "a1": [0, 4, 12, 14, 21, 233, 237, 245, 247, 254, 263, 267, 275, 277, 284, 289, 292, 300, 302, 309, 729], "a2": [0, 4, 12, 14, 21, 233, 237, 245, 247, 254, 263, 267, 275, 277, 284, 289, 292, 300, 302, 309, 729], "a3": [0, 14, 233, 247, 263, 277, 289, 302, 729], "misalign": [0, 3, 4, 5, 6, 11, 12, 13, 18, 20, 21, 22, 23, 28, 31, 32, 58, 62, 73, 96, 103, 105, 106, 107, 113, 174, 233, 236, 237, 238, 244, 245, 246, 251, 253, 254, 255, 256, 263, 266, 267, 268, 269, 274, 275, 276, 281, 283, 284, 285, 286, 289, 291, 292, 293, 294, 299, 300, 301, 306, 308, 309, 310, 311, 652, 729, 784], "estimation_paramet": [0, 3, 4, 12, 13, 21, 55, 58, 62, 94, 103, 113, 174, 233, 236, 237, 245, 246, 254, 263, 266, 267, 275, 276, 284, 289, 291, 292, 300, 301, 309, 729, 784], "basic": [0, 87, 172, 176, 177, 188, 191, 192, 233, 263, 289, 440, 443, 445, 446, 468, 495, 497, 514, 546, 623, 647, 692, 694, 729, 739, 785, 786, 787, 788, 843], "n_row": [0, 9, 19, 94, 101, 177, 178, 179, 180, 181, 233, 242, 252, 263, 272, 282, 289, 297, 307, 435, 692, 729, 784, 889, 892, 895, 902], "1": [0, 4, 5, 6, 9, 12, 14, 16, 19, 20, 21, 26, 32, 55, 58, 62, 66, 67, 68, 70, 73, 76, 77, 93, 94, 101, 106, 107, 111, 130, 132, 140, 150, 156, 165, 167, 170, 174, 177, 178, 179, 180, 181, 186, 191, 194, 200, 201, 202, 209, 211, 213, 215, 216, 218, 219, 221, 223, 224, 225, 228, 233, 235, 237, 238, 242, 245, 247, 249, 252, 253, 254, 263, 267, 268, 269, 272, 275, 277, 279, 282, 283, 284, 289, 292, 293, 294, 297, 300, 302, 304, 307, 308, 309, 314, 316, 317, 322, 323, 325, 327, 328, 333, 334, 336, 338, 339, 346, 347, 349, 351, 352, 354, 356, 364, 365, 369, 370, 377, 378, 382, 383, 385, 387, 395, 396, 400, 403, 419, 423, 428, 431, 434, 435, 437, 441, 442, 445, 446, 447, 448, 449, 453, 457, 469, 472, 473, 477, 483, 494, 497, 499, 500, 501, 506, 513, 523, 530, 536, 538, 546, 547, 553, 555, 563, 565, 575, 577, 579, 587, 589, 591, 601, 602, 603, 604, 615, 617, 623, 624, 625, 630, 637, 645, 648, 651, 656, 657, 658, 660, 668, 672, 674, 675, 684, 692, 713, 714, 715, 718, 719, 720, 721, 722, 724, 725, 726, 728, 730, 739, 741, 745, 748, 749, 751, 752, 757, 758, 759, 760, 762, 778, 782, 784, 786, 787, 801, 802, 807, 808, 810, 812, 816, 858, 859, 865, 869, 870, 873, 877, 880, 887, 889, 892, 895, 899, 902, 904, 906, 908, 912, 914, 915], "n_col": [0, 9, 19, 94, 101, 177, 178, 179, 180, 181, 233, 242, 252, 263, 272, 282, 289, 297, 307, 435, 692, 729, 784, 889, 902], "sourc": [0, 2, 3, 5, 12, 21, 26, 28, 30, 31, 32, 34, 40, 42, 44, 45, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 174, 182, 184, 186, 187, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 254, 259, 260, 261, 262, 263, 265, 266, 275, 284, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 320, 321, 324, 325, 329, 331, 332, 335, 336, 344, 349, 354, 361, 366, 367, 375, 380, 385, 392, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 441, 442, 443, 444, 445, 446, 447, 448, 449, 460, 462, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 514, 519, 520, 521, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 631, 632, 633, 635, 637, 640, 648, 649, 650, 651, 652, 653, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 684, 687, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 787, 789, 791, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 870, 871, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918], "base": [0, 16, 26, 29, 31, 32, 55, 58, 62, 64, 66, 68, 69, 70, 71, 77, 93, 94, 115, 116, 117, 120, 121, 125, 127, 128, 145, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 191, 192, 194, 195, 207, 211, 212, 221, 224, 230, 233, 249, 263, 279, 289, 304, 314, 319, 324, 325, 330, 335, 336, 341, 342, 348, 349, 357, 358, 366, 367, 372, 373, 379, 380, 388, 389, 397, 400, 401, 407, 409, 413, 415, 416, 417, 422, 424, 426, 430, 432, 433, 444, 451, 480, 483, 484, 486, 487, 500, 515, 516, 517, 522, 529, 574, 575, 582, 587, 594, 601, 605, 609, 610, 612, 614, 616, 619, 622, 624, 625, 626, 627, 628, 631, 633, 634, 636, 637, 641, 643, 644, 645, 646, 647, 648, 650, 651, 652, 655, 661, 662, 663, 672, 674, 676, 680, 682, 683, 684, 688, 690, 691, 692, 693, 694, 695, 697, 708, 710, 744, 746, 748, 752, 753, 762, 764, 784, 786, 788, 803, 808, 830, 839, 843, 845, 848, 850, 854, 863, 870, 908, 914], "pinholemodel": [0, 14, 75, 178, 181, 247, 263, 277, 284, 435, 908], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 875, 876, 879, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918], "provid": [0, 4, 26, 29, 30, 31, 32, 34, 42, 51, 55, 58, 62, 70, 71, 72, 73, 74, 76, 77, 94, 114, 116, 117, 118, 119, 125, 130, 132, 139, 141, 158, 162, 163, 168, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 203, 214, 218, 230, 231, 233, 237, 259, 263, 267, 289, 292, 316, 317, 324, 327, 328, 335, 338, 339, 348, 351, 352, 355, 366, 369, 370, 379, 382, 383, 386, 397, 398, 400, 405, 407, 409, 410, 414, 416, 417, 423, 428, 430, 435, 436, 437, 438, 440, 447, 451, 455, 456, 463, 473, 475, 478, 480, 483, 494, 498, 499, 500, 501, 505, 507, 518, 519, 521, 536, 544, 551, 553, 561, 563, 572, 575, 585, 587, 597, 604, 610, 615, 616, 617, 619, 623, 624, 625, 626, 627, 628, 629, 630, 631, 637, 645, 646, 647, 648, 649, 651, 652, 658, 659, 665, 668, 669, 672, 673, 675, 676, 684, 692, 693, 695, 698, 700, 701, 702, 704, 706, 708, 715, 739, 742, 743, 744, 751, 752, 753, 754, 755, 762, 764, 779, 780, 781, 784, 785, 786, 787, 788, 803, 816, 823, 830, 835, 842, 843, 844, 847, 848, 854, 859, 865, 866, 867, 868, 869, 875, 876, 879, 889, 892, 895, 902, 904, 912], "an": [0, 3, 4, 9, 10, 14, 16, 17, 19, 23, 24, 25, 26, 27, 29, 30, 34, 55, 56, 58, 59, 60, 62, 63, 68, 70, 71, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 101, 102, 108, 109, 110, 111, 113, 115, 116, 117, 121, 125, 126, 128, 134, 136, 139, 140, 144, 146, 149, 150, 151, 153, 165, 167, 168, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 219, 222, 225, 228, 230, 231, 233, 236, 237, 242, 243, 247, 249, 250, 252, 256, 257, 258, 259, 260, 263, 266, 267, 272, 273, 277, 279, 280, 282, 286, 287, 288, 289, 291, 292, 297, 298, 302, 304, 305, 307, 311, 312, 313, 314, 316, 317, 320, 325, 327, 328, 331, 336, 338, 339, 341, 343, 349, 351, 352, 357, 359, 362, 367, 369, 370, 372, 374, 380, 382, 383, 388, 390, 393, 400, 401, 402, 404, 405, 411, 413, 415, 421, 422, 423, 426, 428, 429, 430, 432, 435, 436, 437, 438, 443, 444, 448, 450, 455, 458, 459, 460, 462, 463, 468, 469, 470, 471, 472, 473, 475, 476, 478, 480, 482, 483, 486, 487, 491, 494, 499, 500, 503, 506, 509, 511, 512, 513, 515, 517, 518, 521, 522, 525, 529, 532, 536, 539, 541, 542, 543, 544, 545, 546, 548, 549, 551, 553, 556, 558, 559, 560, 561, 562, 563, 566, 569, 570, 571, 572, 573, 574, 575, 578, 581, 583, 584, 585, 586, 587, 590, 593, 595, 596, 597, 598, 601, 602, 603, 604, 606, 610, 611, 612, 616, 617, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 637, 640, 645, 646, 647, 648, 649, 651, 652, 656, 657, 658, 659, 665, 666, 668, 672, 673, 674, 676, 679, 684, 687, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 710, 715, 716, 718, 723, 727, 729, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 750, 751, 752, 753, 755, 756, 757, 760, 762, 763, 764, 778, 782, 786, 787, 788, 803, 804, 806, 807, 808, 813, 815, 822, 828, 830, 835, 837, 838, 843, 845, 847, 848, 854, 857, 859, 863, 866, 867, 869, 870, 871, 876, 882, 886, 889, 892, 895, 899, 902, 904, 908, 912, 914, 916], "implement": [0, 55, 57, 58, 62, 75, 77, 94, 95, 114, 115, 119, 128, 132, 141, 151, 165, 174, 177, 178, 179, 180, 181, 186, 195, 197, 233, 260, 263, 289, 355, 386, 400, 401, 407, 409, 410, 413, 417, 422, 424, 426, 432, 436, 455, 457, 483, 494, 514, 518, 538, 546, 547, 553, 555, 563, 565, 577, 589, 604, 610, 619, 623, 624, 625, 626, 627, 628, 630, 631, 637, 645, 647, 648, 652, 676, 684, 692, 695, 704, 746, 751, 784, 786, 789, 793, 800, 823, 835, 843, 845, 847, 849, 850, 854, 882, 883, 884], "brown": [0, 2, 177, 263, 784], "camera": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 46, 47, 55, 56, 58, 60, 62, 66, 68, 70, 71, 73, 74, 75, 76, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 125, 172, 174, 176, 178, 183, 185, 186, 187, 188, 191, 194, 195, 202, 213, 230, 233, 234, 236, 237, 238, 239, 241, 243, 244, 245, 246, 248, 251, 252, 253, 254, 256, 257, 259, 260, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 276, 278, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 303, 306, 307, 308, 309, 311, 312, 426, 435, 437, 438, 443, 472, 476, 477, 480, 482, 483, 486, 487, 491, 492, 493, 604, 605, 606, 607, 610, 611, 612, 616, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 639, 641, 643, 645, 647, 648, 650, 651, 652, 653, 656, 659, 660, 672, 674, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 693, 694, 695, 696, 703, 704, 729, 730, 731, 732, 738, 740, 741, 744, 746, 747, 748, 749, 752, 753, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 773, 774, 778, 783, 785, 788, 806, 808, 811, 830, 849, 854, 857, 858, 859, 860, 864, 899, 902, 908], "model": [0, 2, 3, 4, 8, 9, 10, 12, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 29, 30, 31, 32, 38, 55, 56, 58, 59, 60, 62, 63, 64, 70, 71, 73, 74, 75, 77, 78, 94, 95, 96, 101, 102, 104, 105, 108, 109, 110, 112, 113, 114, 165, 172, 174, 176, 178, 186, 191, 192, 195, 233, 235, 236, 237, 241, 242, 243, 245, 247, 248, 249, 251, 252, 254, 256, 257, 258, 259, 263, 265, 266, 267, 271, 272, 273, 275, 277, 278, 279, 281, 282, 284, 286, 287, 288, 289, 291, 292, 296, 297, 298, 300, 302, 303, 304, 306, 307, 309, 311, 312, 313, 314, 325, 336, 341, 349, 357, 360, 367, 372, 380, 388, 391, 398, 401, 415, 420, 426, 435, 437, 439, 441, 442, 444, 445, 446, 447, 472, 480, 486, 487, 500, 513, 517, 518, 604, 610, 616, 619, 624, 625, 626, 627, 628, 631, 632, 637, 639, 641, 645, 647, 648, 652, 653, 656, 659, 665, 676, 678, 680, 684, 686, 688, 692, 695, 739, 742, 745, 752, 754, 755, 758, 762, 764, 769, 785, 786, 787, 816, 819, 823, 830, 835, 843, 851, 854, 855, 859, 868, 904, 908, 911], "project": [0, 5, 6, 11, 12, 20, 21, 26, 71, 77, 96, 97, 98, 106, 107, 170, 174, 177, 178, 179, 180, 181, 182, 183, 191, 195, 233, 238, 239, 244, 245, 253, 254, 263, 268, 269, 274, 275, 283, 284, 289, 293, 294, 299, 300, 308, 309, 486, 487, 616, 639, 641, 645, 653, 678, 680, 686, 688, 692, 752, 755, 758, 760, 762, 782, 783, 784, 857], "3d": [0, 12, 20, 21, 70, 77, 94, 106, 107, 176, 177, 179, 180, 181, 233, 245, 253, 254, 263, 275, 283, 284, 289, 300, 308, 309, 436, 486, 487, 495, 497, 516, 529, 582, 594, 625, 788], "point": [0, 2, 4, 5, 6, 12, 16, 17, 18, 20, 21, 24, 25, 26, 29, 31, 32, 33, 47, 70, 77, 94, 105, 106, 107, 109, 110, 116, 117, 119, 132, 141, 167, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 188, 191, 192, 195, 201, 202, 206, 207, 209, 210, 213, 214, 215, 216, 220, 222, 229, 233, 235, 237, 238, 245, 249, 250, 251, 253, 254, 257, 258, 263, 265, 267, 268, 269, 275, 279, 280, 281, 283, 284, 287, 288, 289, 292, 293, 294, 300, 304, 305, 306, 308, 309, 312, 313, 314, 325, 336, 349, 367, 380, 398, 400, 401, 413, 426, 427, 435, 436, 443, 458, 459, 468, 475, 478, 486, 487, 500, 501, 503, 504, 505, 506, 507, 509, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 575, 578, 581, 582, 587, 590, 593, 594, 601, 602, 610, 612, 616, 617, 625, 626, 627, 630, 631, 632, 634, 639, 645, 647, 648, 652, 658, 659, 661, 663, 665, 678, 684, 686, 692, 693, 694, 704, 729, 730, 752, 755, 756, 757, 758, 760, 762, 764, 765, 774, 782, 783, 784, 785, 786, 787, 788, 803, 808, 809, 830, 842, 843, 899, 902, 908], "onto": [0, 5, 12, 20, 21, 71, 77, 106, 107, 170, 174, 178, 181, 233, 238, 245, 253, 254, 263, 268, 275, 283, 284, 289, 293, 300, 308, 309, 486, 487, 616, 641, 653, 680, 688, 692, 752, 755, 758, 760, 784], "imag": [0, 1, 2, 4, 5, 6, 9, 11, 12, 18, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 46, 47, 55, 58, 59, 62, 63, 66, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 105, 106, 107, 109, 110, 111, 116, 117, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 222, 224, 227, 228, 229, 233, 234, 235, 237, 238, 239, 242, 244, 245, 251, 253, 254, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 272, 274, 275, 281, 283, 284, 287, 288, 289, 290, 292, 293, 294, 297, 299, 300, 306, 308, 309, 312, 313, 314, 315, 316, 317, 320, 325, 326, 327, 328, 331, 336, 337, 338, 339, 343, 349, 350, 351, 352, 359, 367, 368, 369, 370, 374, 380, 381, 382, 383, 390, 400, 401, 402, 411, 423, 424, 425, 426, 427, 428, 429, 435, 438, 472, 476, 482, 483, 486, 487, 491, 512, 604, 605, 606, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 654, 656, 657, 658, 659, 662, 665, 666, 668, 672, 676, 678, 679, 680, 681, 682, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 729, 730, 738, 740, 741, 744, 752, 753, 755, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 773, 774, 778, 779, 780, 781, 782, 783, 785, 786, 788, 803, 804, 806, 807, 808, 810, 811, 830, 832, 834, 835, 842, 844, 848, 854, 857, 859, 860, 862, 863, 864, 899, 902, 908, 911], "perform": [0, 8, 12, 16, 17, 21, 26, 31, 32, 33, 58, 62, 68, 69, 70, 73, 76, 94, 151, 168, 172, 174, 177, 179, 180, 181, 184, 186, 188, 189, 191, 192, 202, 214, 220, 221, 222, 224, 225, 228, 229, 230, 233, 241, 245, 249, 250, 254, 259, 263, 271, 275, 279, 280, 284, 289, 296, 300, 304, 305, 309, 314, 321, 325, 332, 336, 341, 344, 345, 349, 357, 361, 363, 367, 372, 375, 376, 380, 388, 392, 394, 401, 408, 412, 413, 415, 426, 436, 455, 456, 473, 478, 483, 503, 509, 518, 575, 587, 604, 607, 610, 612, 615, 619, 624, 627, 629, 631, 634, 637, 639, 645, 648, 653, 656, 657, 658, 659, 676, 678, 684, 686, 693, 695, 708, 711, 712, 714, 716, 720, 721, 722, 728, 748, 752, 753, 754, 755, 757, 760, 761, 762, 765, 785, 786, 788, 801, 816, 835, 840, 866, 868, 869, 902], "calibr": [0, 3, 12, 13, 15, 21, 56, 57, 59, 60, 61, 63, 64, 65, 67, 69, 73, 74, 75, 94, 95, 96, 103, 104, 115, 172, 177, 179, 180, 181, 182, 186, 194, 230, 233, 236, 245, 246, 248, 254, 263, 266, 275, 276, 278, 284, 289, 291, 300, 301, 303, 309, 426, 752, 757, 785, 787, 788], "The": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 47, 51, 55, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 164, 165, 167, 168, 169, 170, 172, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 518, 519, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 672, 673, 674, 676, 678, 679, 680, 682, 683, 684, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 735, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 773, 774, 778, 779, 780, 781, 782, 783, 788, 801, 803, 804, 806, 808, 812, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 828, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 843, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 867, 869, 870, 871, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 892, 893, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 908, 909, 911, 912, 915, 918], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 472, 473, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 529, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 744, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 795, 801, 803, 804, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 822, 823, 824, 826, 828, 829, 830, 832, 833, 835, 838, 840, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 872, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 912, 915, 916], "subclass": [0, 26, 55, 58, 62, 70, 75, 77, 78, 82, 87, 113, 115, 128, 172, 174, 177, 178, 179, 180, 181, 183, 185, 186, 187, 195, 214, 233, 259, 263, 289, 398, 400, 407, 409, 413, 417, 455, 483, 529, 546, 574, 608, 619, 621, 626, 642, 654, 665, 676, 681, 689, 692, 693, 695, 746, 751, 753, 755, 762, 789, 843, 850, 908], "mean": [0, 24, 31, 32, 47, 72, 77, 93, 109, 174, 186, 188, 191, 192, 202, 222, 229, 233, 257, 263, 287, 289, 312, 314, 325, 336, 341, 349, 357, 367, 372, 380, 388, 415, 450, 465, 483, 486, 626, 645, 647, 665, 692, 695, 708, 715, 718, 719, 724, 725, 726, 774, 784, 786, 788, 823, 836, 869, 899], "includ": [0, 4, 18, 19, 23, 26, 55, 58, 62, 77, 87, 94, 105, 113, 114, 116, 117, 122, 123, 125, 126, 145, 174, 175, 176, 182, 183, 186, 187, 191, 195, 202, 225, 230, 231, 233, 237, 251, 252, 256, 263, 267, 281, 282, 286, 289, 292, 306, 307, 311, 362, 393, 409, 417, 421, 436, 442, 451, 483, 491, 502, 536, 600, 604, 609, 614, 619, 622, 628, 636, 637, 644, 645, 646, 647, 648, 655, 658, 659, 662, 676, 683, 691, 692, 693, 694, 695, 737, 738, 742, 752, 755, 762, 784, 785, 786, 787, 803, 816, 823, 830, 838, 848, 863, 895, 904], "all": [0, 4, 7, 10, 22, 26, 28, 30, 37, 41, 42, 46, 50, 51, 55, 57, 58, 61, 62, 65, 70, 72, 75, 77, 80, 81, 87, 91, 92, 93, 94, 99, 102, 111, 113, 114, 115, 122, 123, 125, 127, 131, 135, 145, 150, 167, 171, 174, 175, 176, 178, 183, 186, 188, 191, 193, 201, 202, 203, 206, 211, 223, 230, 233, 237, 240, 243, 255, 263, 267, 270, 273, 285, 289, 292, 295, 298, 310, 400, 422, 426, 435, 436, 438, 439, 442, 445, 446, 447, 448, 450, 451, 452, 454, 455, 463, 465, 467, 469, 472, 475, 478, 483, 491, 492, 493, 496, 500, 507, 515, 516, 522, 536, 537, 544, 546, 551, 553, 554, 561, 563, 564, 572, 575, 576, 585, 587, 588, 597, 603, 604, 606, 609, 610, 611, 612, 614, 616, 617, 619, 620, 622, 625, 626, 627, 630, 631, 633, 634, 636, 637, 640, 644, 645, 647, 648, 651, 655, 658, 659, 665, 672, 676, 679, 683, 684, 687, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 709, 714, 723, 728, 748, 752, 753, 755, 757, 762, 768, 771, 773, 776, 779, 781, 782, 784, 785, 786, 787, 803, 805, 811, 830, 832, 834, 835, 837, 840, 842, 844, 858, 859, 860, 863, 864, 867, 892, 899, 902, 908, 915, 916, 917], "abstract": [0, 55, 56, 57, 94, 95, 96, 97, 98, 100, 103, 105, 106, 107, 110, 115, 128, 129, 174, 176, 178, 186, 191, 192, 233, 263, 289, 400, 413, 414, 416, 426, 427, 428, 429, 430, 431, 432, 433, 444, 458, 513, 515, 522, 529, 539, 548, 556, 566, 578, 590, 619, 620, 626, 679, 692, 746, 747, 788, 813, 814, 843, 850, 851, 852, 853], "method": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 128, 129, 132, 136, 137, 138, 141, 142, 143, 149, 150, 165, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 191, 192, 195, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 222, 224, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 317, 318, 320, 325, 326, 328, 329, 331, 336, 339, 340, 341, 343, 344, 345, 349, 352, 354, 355, 357, 359, 361, 362, 363, 367, 368, 370, 371, 372, 374, 375, 376, 380, 381, 383, 385, 386, 388, 390, 392, 393, 394, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 429, 432, 435, 436, 438, 441, 442, 444, 445, 446, 447, 450, 451, 453, 455, 456, 457, 458, 459, 460, 462, 463, 469, 471, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 488, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 714, 728, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 784, 786, 787, 789, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 822, 823, 824, 825, 828, 830, 831, 832, 833, 834, 835, 836, 837, 840, 842, 843, 844, 847, 848, 850, 854, 858, 859, 860, 861, 862, 863, 875, 876, 879, 882, 883, 884, 889, 890, 892, 893, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 908, 909, 912, 915, 916, 917, 918], "defin": [0, 2, 4, 5, 6, 10, 14, 15, 34, 55, 58, 62, 71, 94, 102, 104, 112, 113, 114, 115, 116, 117, 128, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 189, 195, 206, 207, 211, 223, 233, 235, 237, 238, 243, 247, 248, 263, 265, 267, 268, 269, 273, 277, 278, 289, 292, 293, 294, 298, 302, 303, 316, 317, 318, 319, 323, 327, 328, 329, 330, 334, 336, 338, 339, 340, 342, 347, 349, 351, 352, 354, 358, 360, 365, 367, 369, 370, 371, 373, 378, 380, 382, 383, 385, 389, 391, 396, 398, 399, 400, 407, 409, 413, 420, 423, 426, 428, 430, 435, 437, 438, 439, 448, 469, 475, 476, 479, 483, 494, 500, 502, 504, 505, 512, 513, 515, 516, 517, 518, 522, 523, 527, 529, 530, 534, 546, 604, 605, 610, 619, 625, 626, 627, 629, 631, 632, 637, 646, 648, 650, 665, 676, 684, 692, 704, 715, 716, 720, 721, 722, 727, 739, 742, 762, 788, 803, 813, 830, 839, 843, 845, 850, 852, 853, 854, 856, 876, 912, 915], "cameramodel": [0, 7, 9, 10, 15, 26, 55, 58, 59, 62, 63, 71, 74, 77, 112, 113, 174, 175, 177, 178, 179, 180, 181, 233, 240, 242, 243, 248, 259, 263, 270, 272, 273, 278, 289, 295, 297, 298, 303, 472, 486, 487, 605, 650, 652, 659, 695, 755, 759, 762, 854, 857], "also": [0, 4, 18, 26, 27, 41, 47, 50, 57, 61, 65, 71, 77, 78, 88, 91, 94, 105, 113, 114, 116, 117, 128, 145, 151, 165, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 191, 192, 195, 202, 206, 212, 231, 233, 237, 251, 263, 267, 281, 289, 292, 306, 325, 401, 407, 409, 413, 435, 437, 447, 453, 455, 457, 462, 463, 469, 475, 478, 479, 483, 484, 500, 513, 514, 518, 519, 616, 619, 624, 626, 633, 637, 641, 645, 647, 648, 651, 653, 658, 659, 665, 675, 676, 680, 688, 692, 693, 695, 696, 698, 704, 708, 714, 715, 719, 724, 725, 726, 728, 739, 744, 745, 748, 752, 755, 757, 762, 763, 771, 774, 776, 784, 785, 786, 787, 788, 789, 804, 813, 820, 826, 834, 838, 842, 843, 844, 848, 852, 856, 867, 889, 899, 908, 915], "can": [0, 4, 9, 12, 13, 14, 21, 26, 28, 31, 32, 34, 55, 56, 58, 62, 66, 70, 72, 77, 78, 82, 93, 101, 103, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 128, 129, 131, 132, 136, 137, 138, 139, 141, 145, 149, 150, 151, 152, 153, 165, 167, 168, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 194, 195, 202, 203, 212, 214, 220, 222, 227, 229, 230, 231, 232, 233, 237, 242, 245, 246, 247, 254, 263, 267, 272, 275, 276, 277, 284, 289, 292, 297, 300, 301, 302, 309, 314, 316, 317, 322, 325, 327, 328, 333, 336, 338, 339, 341, 344, 346, 349, 351, 352, 355, 357, 364, 367, 369, 370, 372, 375, 377, 380, 382, 383, 386, 388, 395, 400, 401, 407, 409, 410, 414, 415, 422, 423, 426, 428, 431, 432, 434, 435, 436, 437, 438, 439, 442, 445, 446, 447, 453, 455, 456, 459, 460, 461, 462, 463, 464, 466, 467, 469, 472, 473, 475, 476, 478, 480, 483, 486, 487, 494, 500, 503, 506, 511, 512, 513, 516, 517, 518, 519, 525, 529, 532, 536, 541, 544, 549, 551, 553, 558, 561, 563, 569, 572, 574, 575, 581, 585, 587, 593, 597, 601, 604, 608, 610, 615, 616, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 637, 642, 645, 647, 648, 651, 652, 654, 656, 658, 659, 665, 671, 672, 674, 676, 679, 681, 684, 689, 692, 693, 695, 699, 704, 708, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 752, 753, 755, 757, 762, 782, 784, 785, 786, 787, 788, 808, 810, 812, 815, 820, 822, 823, 826, 828, 830, 835, 839, 840, 842, 843, 844, 845, 847, 848, 849, 858, 859, 860, 862, 863, 864, 868, 869, 870, 876, 882, 883, 884, 889, 892, 895, 899, 902, 904, 906, 908, 912, 915], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 144, 145, 149, 150, 151, 152, 153, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 220, 221, 224, 227, 228, 231, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 261, 263, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 287, 288, 289, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 316, 317, 320, 321, 322, 325, 326, 327, 328, 329, 331, 332, 333, 336, 338, 339, 341, 343, 344, 345, 346, 349, 351, 352, 356, 357, 359, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 380, 381, 382, 383, 387, 388, 390, 392, 393, 394, 395, 399, 401, 405, 407, 408, 409, 411, 412, 413, 415, 417, 419, 421, 422, 423, 424, 425, 426, 428, 429, 431, 434, 435, 439, 441, 442, 445, 446, 447, 449, 450, 453, 455, 456, 457, 458, 459, 460, 462, 463, 466, 467, 468, 469, 472, 473, 475, 478, 480, 481, 482, 483, 486, 487, 488, 492, 493, 494, 495, 496, 497, 500, 501, 505, 506, 513, 514, 517, 519, 522, 529, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548, 549, 551, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 572, 574, 575, 576, 577, 578, 580, 581, 582, 583, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 599, 600, 601, 603, 604, 605, 606, 607, 610, 611, 612, 615, 616, 617, 618, 619, 623, 631, 633, 634, 637, 639, 640, 641, 643, 646, 648, 649, 650, 651, 652, 653, 656, 657, 658, 659, 660, 662, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 712, 713, 714, 717, 718, 728, 729, 730, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 768, 769, 770, 771, 772, 773, 774, 778, 779, 780, 781, 782, 784, 785, 786, 788, 789, 801, 803, 804, 806, 807, 811, 813, 815, 816, 820, 822, 823, 826, 828, 829, 830, 834, 835, 837, 838, 840, 850, 851, 854, 855, 857, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 876, 879, 882, 883, 884, 885, 888, 889, 890, 892, 893, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 908, 909, 912, 915], "throughout": [0, 72, 77, 91, 175, 176, 177, 179, 180, 181, 184, 185, 186, 191, 192, 195, 202, 233, 263, 289, 400, 439, 440, 518, 738, 786, 876], "primari": [0, 114, 125, 127, 174, 183, 184, 187, 189, 191, 233, 263, 289, 398, 439, 575, 587, 619, 630, 692, 693, 708, 757, 788, 823, 859], "within": [0, 17, 34, 37, 46, 47, 77, 81, 174, 186, 191, 233, 250, 263, 280, 289, 305, 336, 349, 367, 380, 398, 413, 450, 600, 606, 637, 647, 651, 692, 752, 755, 758, 759, 768, 773, 774, 785, 807, 809, 830, 832], "subpackag": [0, 3, 95, 187, 190, 233, 236, 263, 266, 289, 291, 439, 629, 788], "If": [0, 4, 9, 10, 19, 24, 26, 29, 30, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 73, 74, 75, 78, 81, 82, 85, 86, 88, 93, 94, 96, 101, 102, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 126, 128, 129, 132, 136, 137, 141, 144, 145, 149, 150, 151, 168, 170, 174, 176, 177, 179, 180, 181, 182, 185, 186, 188, 191, 195, 202, 206, 211, 213, 215, 216, 228, 230, 231, 233, 237, 242, 243, 252, 257, 259, 262, 263, 267, 272, 273, 282, 287, 289, 292, 297, 298, 307, 312, 314, 316, 317, 321, 324, 325, 327, 328, 332, 335, 336, 338, 339, 341, 344, 345, 348, 349, 351, 352, 355, 357, 361, 363, 366, 367, 369, 370, 372, 375, 376, 379, 380, 382, 383, 386, 388, 392, 394, 397, 400, 407, 408, 409, 410, 412, 414, 415, 416, 423, 426, 428, 430, 436, 450, 453, 455, 458, 459, 469, 472, 478, 480, 483, 486, 487, 488, 491, 492, 493, 495, 497, 504, 506, 507, 512, 518, 519, 524, 525, 531, 532, 536, 539, 541, 542, 546, 548, 549, 553, 556, 558, 559, 563, 566, 569, 570, 574, 575, 578, 581, 582, 583, 587, 590, 593, 594, 595, 601, 604, 605, 606, 609, 610, 611, 612, 614, 616, 619, 620, 622, 623, 624, 626, 627, 628, 629, 631, 633, 634, 636, 637, 639, 640, 644, 645, 647, 648, 650, 651, 655, 656, 657, 658, 659, 662, 665, 667, 668, 670, 671, 672, 676, 678, 679, 683, 684, 686, 687, 691, 692, 695, 697, 698, 700, 701, 702, 703, 704, 706, 707, 708, 710, 714, 720, 721, 722, 739, 748, 749, 752, 755, 757, 758, 762, 764, 775, 776, 777, 779, 780, 781, 782, 785, 786, 787, 803, 807, 810, 816, 823, 830, 835, 838, 840, 843, 845, 847, 851, 854, 855, 858, 859, 861, 867, 871, 885, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 912, 915, 917, 918], "go": [0, 18, 75, 78, 105, 174, 177, 179, 180, 181, 188, 191, 192, 195, 230, 233, 251, 263, 281, 289, 306, 439, 453, 501, 579, 591, 628, 648, 652, 692, 739, 746, 748, 755, 782, 784, 785, 787, 812, 843, 844, 845, 882], "user": [0, 2, 3, 8, 10, 12, 26, 46, 55, 58, 62, 66, 68, 70, 71, 74, 78, 82, 83, 84, 85, 86, 88, 89, 90, 95, 96, 102, 108, 119, 124, 125, 126, 127, 128, 129, 132, 136, 141, 149, 166, 172, 174, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 191, 192, 195, 197, 202, 207, 214, 233, 235, 236, 241, 243, 245, 259, 263, 265, 266, 271, 273, 275, 289, 291, 296, 298, 300, 314, 325, 336, 349, 367, 380, 400, 413, 417, 439, 443, 450, 453, 455, 468, 475, 483, 488, 491, 494, 500, 505, 512, 515, 516, 517, 518, 522, 529, 536, 607, 619, 624, 625, 626, 627, 628, 630, 637, 645, 646, 647, 653, 659, 660, 665, 666, 667, 668, 672, 676, 692, 693, 694, 695, 699, 746, 752, 753, 754, 755, 756, 758, 759, 760, 762, 773, 778, 786, 788, 848, 849, 859, 861, 869, 870], "set": [0, 4, 9, 10, 12, 24, 26, 29, 31, 42, 47, 51, 55, 56, 58, 60, 62, 66, 71, 72, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 89, 90, 92, 93, 94, 101, 102, 109, 113, 114, 121, 122, 123, 125, 126, 127, 128, 130, 151, 164, 172, 174, 175, 177, 178, 179, 180, 181, 182, 186, 188, 191, 192, 195, 201, 202, 203, 206, 208, 210, 213, 214, 215, 216, 218, 233, 237, 242, 243, 245, 257, 263, 267, 272, 273, 275, 287, 289, 292, 297, 298, 300, 312, 314, 319, 321, 324, 325, 330, 332, 335, 336, 341, 342, 344, 345, 348, 349, 357, 358, 361, 363, 366, 367, 372, 373, 375, 376, 379, 380, 388, 389, 392, 394, 397, 401, 408, 412, 415, 416, 426, 430, 433, 435, 441, 442, 445, 446, 447, 453, 455, 456, 463, 469, 472, 475, 483, 507, 529, 544, 551, 561, 572, 585, 597, 602, 604, 610, 615, 616, 619, 620, 623, 624, 625, 626, 627, 628, 629, 631, 633, 637, 639, 645, 648, 649, 651, 652, 653, 656, 658, 659, 662, 665, 672, 673, 674, 676, 678, 679, 684, 686, 692, 693, 695, 698, 704, 708, 737, 743, 746, 748, 750, 751, 752, 755, 760, 762, 764, 774, 778, 782, 784, 785, 787, 803, 806, 811, 823, 830, 835, 837, 859, 860, 863, 864, 865, 866, 867, 870, 877, 878, 880, 881, 883, 884, 889, 899, 908, 915], "which": [0, 2, 3, 5, 6, 12, 13, 26, 32, 47, 55, 58, 62, 66, 68, 77, 81, 82, 93, 94, 97, 98, 103, 111, 112, 113, 114, 115, 116, 117, 119, 122, 123, 132, 141, 145, 146, 150, 151, 152, 153, 164, 165, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 191, 192, 195, 202, 208, 212, 213, 214, 224, 228, 231, 233, 235, 236, 238, 239, 245, 246, 263, 265, 266, 268, 269, 275, 276, 289, 291, 293, 294, 300, 301, 314, 316, 317, 319, 321, 325, 327, 328, 330, 332, 336, 338, 339, 341, 342, 345, 349, 351, 352, 357, 358, 363, 367, 369, 370, 372, 373, 376, 380, 382, 383, 388, 389, 394, 398, 400, 401, 406, 407, 408, 409, 412, 413, 415, 417, 422, 423, 428, 432, 435, 436, 442, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 461, 464, 466, 469, 470, 472, 475, 477, 478, 479, 482, 483, 487, 491, 493, 494, 496, 500, 504, 506, 508, 513, 515, 517, 518, 522, 524, 525, 528, 529, 531, 532, 535, 536, 538, 539, 541, 546, 547, 548, 549, 552, 553, 555, 556, 558, 563, 565, 566, 569, 574, 575, 577, 578, 581, 587, 589, 590, 593, 599, 601, 604, 605, 609, 610, 614, 616, 617, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 639, 640, 644, 645, 647, 648, 650, 651, 652, 653, 655, 657, 658, 659, 660, 662, 664, 665, 672, 676, 678, 679, 683, 684, 686, 687, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 706, 713, 714, 715, 723, 739, 744, 751, 752, 754, 755, 757, 774, 778, 782, 784, 785, 786, 787, 788, 808, 813, 814, 816, 818, 823, 825, 830, 831, 835, 838, 839, 842, 843, 844, 845, 847, 848, 858, 859, 862, 863, 864, 867, 870, 882, 883, 884, 886, 899, 904, 908, 912, 915], "paramet": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 66, 68, 73, 74, 75, 77, 78, 82, 87, 88, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 174, 178, 186, 188, 191, 192, 195, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 432, 434, 442, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 519, 520, 521, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 538, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 560, 561, 562, 563, 565, 566, 569, 570, 571, 572, 573, 574, 575, 577, 578, 581, 582, 583, 584, 585, 586, 587, 589, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 622, 624, 625, 627, 628, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 643, 644, 645, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 741, 748, 752, 755, 757, 758, 759, 760, 761, 762, 763, 766, 767, 768, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 789, 799, 801, 802, 803, 804, 808, 810, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 835, 837, 838, 839, 840, 847, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 863, 864, 870, 871, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 917, 918], "ar": [0, 4, 5, 6, 9, 12, 16, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 65, 68, 69, 71, 73, 76, 77, 78, 79, 80, 81, 82, 88, 91, 92, 93, 94, 101, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 136, 137, 141, 145, 146, 149, 150, 151, 152, 153, 165, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 191, 192, 195, 202, 206, 207, 208, 209, 211, 212, 213, 214, 220, 221, 223, 224, 225, 228, 231, 233, 235, 237, 238, 239, 242, 245, 249, 251, 252, 253, 254, 257, 259, 262, 263, 265, 267, 268, 269, 272, 275, 279, 281, 282, 283, 284, 287, 289, 292, 293, 294, 297, 300, 304, 306, 307, 308, 309, 312, 314, 317, 321, 322, 325, 328, 332, 333, 336, 339, 341, 346, 349, 352, 357, 362, 364, 367, 370, 372, 377, 380, 383, 388, 393, 395, 398, 400, 401, 413, 415, 417, 421, 423, 426, 427, 431, 434, 435, 436, 437, 439, 440, 443, 448, 449, 450, 452, 453, 454, 455, 456, 457, 459, 465, 466, 467, 468, 469, 471, 472, 475, 477, 478, 479, 480, 481, 483, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 505, 506, 507, 511, 512, 514, 515, 516, 518, 519, 522, 525, 529, 532, 536, 537, 538, 540, 541, 542, 546, 547, 549, 553, 554, 555, 557, 558, 559, 563, 564, 565, 567, 568, 569, 570, 574, 575, 576, 577, 579, 580, 581, 582, 583, 587, 588, 589, 591, 592, 593, 594, 595, 599, 600, 601, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 644, 645, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 670, 672, 674, 675, 676, 678, 679, 680, 683, 684, 686, 687, 688, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 714, 715, 718, 719, 724, 725, 726, 728, 738, 739, 740, 741, 742, 744, 745, 746, 748, 749, 751, 752, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 768, 769, 773, 775, 776, 777, 781, 782, 784, 785, 786, 787, 788, 789, 803, 804, 806, 807, 808, 809, 811, 813, 814, 816, 817, 818, 823, 824, 825, 830, 831, 832, 833, 838, 842, 843, 844, 845, 848, 854, 855, 858, 861, 862, 863, 864, 866, 867, 868, 870, 871, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 892, 895, 899, 904, 908, 912], "estim": [0, 3, 4, 13, 26, 28, 29, 30, 31, 32, 39, 40, 44, 45, 48, 49, 53, 54, 57, 59, 61, 63, 65, 70, 73, 75, 77, 83, 84, 85, 86, 89, 90, 94, 95, 96, 103, 172, 174, 175, 186, 188, 191, 192, 194, 195, 201, 202, 207, 214, 230, 233, 236, 237, 246, 263, 266, 267, 276, 289, 291, 292, 301, 314, 321, 325, 332, 336, 341, 344, 345, 349, 355, 357, 361, 362, 363, 367, 372, 375, 376, 380, 386, 388, 392, 393, 394, 398, 399, 401, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 421, 426, 438, 447, 574, 601, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 631, 632, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 693, 699, 703, 704, 746, 748, 749, 752, 753, 754, 757, 760, 762, 764, 770, 775, 784, 786, 788, 803, 811, 816, 817, 824, 835, 842, 843, 845, 857], "held": [0, 233, 263, 289], "fix": [0, 16, 31, 32, 47, 75, 151, 174, 233, 249, 263, 279, 289, 304, 483, 610, 631, 665, 694, 733, 774, 786, 787, 816, 892, 895, 899, 902, 908], "keyword": [0, 26, 70, 78, 82, 113, 151, 174, 191, 195, 202, 259, 289, 672, 695, 704, 713, 714, 728, 753, 755, 762, 787, 899, 908], "argument": [0, 20, 21, 26, 37, 39, 40, 41, 42, 43, 44, 45, 46, 70, 72, 77, 78, 82, 93, 106, 107, 113, 114, 126, 145, 151, 165, 174, 186, 191, 195, 202, 208, 233, 253, 254, 259, 261, 263, 283, 284, 289, 308, 309, 316, 317, 327, 328, 338, 339, 341, 351, 352, 357, 369, 370, 372, 382, 383, 388, 415, 423, 428, 456, 472, 604, 610, 619, 620, 623, 631, 633, 637, 640, 648, 665, 672, 676, 679, 684, 687, 692, 695, 699, 704, 705, 713, 714, 728, 746, 750, 753, 755, 762, 768, 770, 771, 772, 773, 784, 786, 787, 803, 823, 859, 889, 891, 892, 894, 895, 898, 899, 901, 902, 904, 906, 907, 908, 910], "when": [0, 12, 15, 16, 19, 21, 26, 27, 29, 31, 32, 34, 42, 58, 62, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 92, 94, 96, 104, 107, 112, 113, 115, 119, 125, 128, 132, 141, 151, 168, 174, 177, 179, 180, 181, 185, 186, 187, 188, 191, 192, 195, 200, 201, 202, 204, 218, 219, 220, 222, 224, 229, 233, 245, 248, 249, 252, 254, 259, 263, 275, 278, 279, 282, 284, 289, 300, 303, 304, 307, 309, 314, 317, 325, 328, 336, 339, 349, 352, 367, 370, 380, 383, 398, 401, 413, 417, 422, 423, 426, 435, 436, 437, 450, 455, 456, 460, 461, 464, 466, 467, 468, 469, 472, 473, 475, 476, 477, 483, 495, 497, 500, 514, 518, 519, 546, 553, 563, 574, 575, 582, 587, 594, 601, 603, 604, 610, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 637, 641, 643, 645, 646, 647, 648, 649, 651, 652, 656, 659, 660, 661, 662, 663, 665, 666, 667, 668, 673, 676, 679, 680, 682, 684, 688, 690, 692, 693, 694, 695, 696, 704, 708, 713, 714, 718, 719, 725, 728, 739, 745, 748, 752, 755, 762, 763, 764, 784, 786, 787, 788, 803, 804, 807, 823, 830, 842, 845, 854, 858, 867, 870, 876, 879, 889, 892, 895, 899, 902, 904, 908, 912, 915], "creat": [0, 9, 10, 39, 40, 41, 42, 43, 44, 45, 55, 58, 70, 72, 77, 78, 81, 83, 84, 85, 86, 89, 90, 94, 101, 102, 119, 127, 128, 131, 144, 151, 168, 172, 174, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 191, 231, 233, 242, 243, 261, 263, 272, 273, 289, 297, 298, 314, 325, 426, 435, 436, 437, 438, 469, 472, 483, 494, 518, 522, 603, 612, 617, 619, 633, 634, 645, 647, 659, 665, 672, 692, 693, 695, 699, 704, 705, 738, 741, 742, 746, 770, 771, 772, 781, 786, 810, 837, 843, 848, 859, 867, 875, 876, 879, 889, 892, 895, 899, 902, 904, 908, 912, 916], "instanc": [0, 3, 10, 15, 26, 34, 39, 40, 41, 42, 43, 44, 45, 51, 55, 58, 62, 70, 73, 77, 78, 87, 94, 95, 102, 104, 113, 115, 119, 128, 132, 141, 144, 151, 172, 174, 177, 178, 179, 180, 181, 185, 186, 233, 236, 243, 248, 259, 261, 262, 263, 266, 273, 278, 289, 291, 298, 303, 314, 325, 336, 341, 349, 357, 367, 372, 380, 388, 400, 405, 407, 409, 415, 417, 426, 430, 432, 433, 438, 444, 460, 469, 475, 500, 518, 529, 546, 553, 563, 603, 604, 606, 610, 619, 623, 626, 631, 637, 645, 648, 649, 651, 656, 659, 665, 668, 672, 673, 674, 676, 684, 692, 693, 695, 703, 704, 705, 707, 710, 711, 713, 753, 755, 762, 770, 771, 772, 778, 782, 783, 803, 805, 830, 835, 839, 847, 852, 856, 859, 867, 885, 889, 892, 894, 895, 898, 899, 901, 902, 904, 907, 908, 910, 912, 916], "adjust": [0, 1, 77, 113, 126, 165, 191, 233, 234, 263, 264, 289, 290, 455, 574, 601, 616, 625, 627, 684, 692, 784], "attribut": [0, 4, 10, 13, 26, 29, 30, 31, 32, 33, 34, 35, 36, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 69, 77, 81, 83, 84, 85, 86, 89, 90, 91, 92, 94, 102, 103, 108, 113, 115, 128, 142, 174, 178, 183, 185, 186, 191, 195, 201, 202, 204, 205, 206, 207, 213, 214, 218, 233, 237, 243, 246, 259, 262, 263, 267, 273, 276, 289, 292, 298, 301, 314, 322, 325, 333, 336, 341, 346, 349, 357, 364, 367, 372, 377, 380, 388, 395, 400, 401, 407, 409, 413, 415, 417, 422, 424, 426, 430, 432, 433, 434, 437, 451, 453, 455, 458, 467, 469, 475, 483, 488, 494, 500, 501, 502, 504, 512, 524, 529, 531, 539, 548, 556, 566, 578, 590, 604, 606, 608, 610, 613, 616, 619, 621, 623, 624, 626, 628, 630, 631, 635, 637, 639, 640, 642, 645, 648, 649, 651, 653, 654, 659, 662, 665, 669, 672, 673, 676, 678, 681, 684, 686, 687, 689, 692, 693, 694, 695, 696, 698, 700, 701, 702, 704, 706, 707, 746, 747, 748, 750, 755, 757, 758, 759, 762, 764, 765, 766, 767, 775, 776, 777, 778, 782, 783, 786, 787, 805, 806, 808, 811, 830, 835, 838, 848, 858, 862, 889, 890, 891, 893, 894, 897, 898, 899, 900, 901, 903, 906, 907, 908, 909, 910], "input": [0, 2, 4, 5, 6, 9, 12, 16, 17, 20, 21, 24, 25, 26, 27, 28, 47, 51, 55, 58, 59, 62, 63, 68, 77, 78, 82, 87, 96, 97, 98, 101, 106, 107, 109, 110, 111, 124, 125, 127, 129, 135, 136, 140, 141, 145, 146, 149, 150, 165, 166, 167, 168, 170, 174, 186, 195, 202, 208, 209, 212, 214, 220, 221, 224, 226, 233, 235, 237, 238, 239, 242, 245, 249, 250, 253, 254, 257, 258, 260, 263, 265, 267, 268, 269, 272, 275, 279, 280, 283, 284, 287, 288, 289, 292, 293, 294, 297, 300, 304, 305, 308, 309, 312, 313, 316, 317, 322, 326, 327, 328, 333, 338, 339, 346, 351, 352, 364, 368, 369, 370, 377, 381, 382, 383, 395, 401, 402, 403, 405, 416, 417, 423, 425, 428, 430, 434, 435, 437, 438, 443, 444, 458, 463, 469, 478, 480, 488, 491, 492, 493, 496, 501, 504, 505, 511, 520, 524, 531, 539, 543, 544, 548, 551, 556, 560, 561, 566, 571, 572, 578, 584, 585, 590, 596, 597, 603, 604, 609, 614, 616, 620, 622, 636, 644, 648, 649, 655, 656, 664, 672, 673, 676, 679, 683, 691, 695, 696, 703, 704, 708, 710, 713, 715, 716, 718, 719, 723, 724, 725, 727, 748, 752, 759, 760, 762, 763, 774, 786, 803, 804, 810, 812, 815, 822, 828, 832, 842, 864, 867, 869, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887], "string": [0, 47, 77, 78, 94, 114, 137, 138, 151, 195, 202, 233, 263, 289, 619, 626, 665, 676, 692, 694, 695, 704, 713, 774, 786, 808, 810, 830, 833, 864, 875, 876, 879, 892, 895, 912, 915], "list": [0, 4, 10, 13, 26, 27, 36, 55, 58, 62, 68, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 102, 103, 130, 131, 174, 175, 178, 202, 203, 206, 207, 209, 210, 214, 224, 233, 237, 243, 246, 260, 263, 267, 273, 276, 289, 292, 298, 301, 469, 472, 475, 479, 603, 604, 606, 607, 609, 610, 611, 614, 619, 620, 622, 623, 626, 629, 631, 633, 636, 637, 640, 641, 643, 644, 645, 647, 648, 651, 653, 655, 656, 659, 672, 674, 676, 679, 680, 682, 683, 684, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 743, 744, 762, 763, 767, 784, 786, 787, 789, 803, 804, 816, 817, 820, 823, 824, 826, 830, 831, 833, 837, 838, 844, 859, 871, 902, 908], "specifi": [0, 2, 4, 9, 10, 12, 19, 20, 21, 24, 25, 26, 27, 28, 34, 36, 47, 51, 55, 58, 62, 66, 75, 77, 78, 81, 82, 88, 94, 101, 102, 106, 107, 109, 110, 111, 112, 113, 115, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 141, 142, 145, 149, 150, 151, 152, 167, 168, 174, 177, 179, 180, 181, 183, 186, 191, 192, 195, 202, 204, 205, 207, 208, 211, 212, 213, 214, 231, 233, 235, 237, 242, 243, 245, 252, 253, 254, 257, 258, 260, 263, 265, 267, 272, 273, 275, 282, 283, 284, 287, 288, 289, 292, 297, 298, 300, 307, 308, 309, 312, 313, 314, 317, 322, 325, 328, 333, 336, 339, 346, 349, 352, 364, 367, 370, 377, 380, 383, 395, 401, 422, 423, 426, 434, 436, 438, 443, 444, 448, 449, 450, 453, 455, 456, 463, 466, 468, 472, 476, 478, 482, 483, 494, 497, 518, 536, 542, 544, 551, 553, 559, 561, 563, 570, 572, 574, 575, 583, 585, 587, 595, 597, 601, 604, 606, 607, 610, 611, 616, 619, 620, 623, 624, 625, 626, 627, 629, 630, 631, 633, 637, 640, 645, 646, 647, 648, 651, 653, 656, 658, 660, 662, 665, 669, 672, 676, 679, 684, 687, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 704, 706, 708, 713, 714, 715, 716, 717, 718, 719, 723, 724, 725, 726, 728, 739, 742, 745, 746, 748, 752, 755, 756, 757, 758, 762, 763, 767, 774, 778, 779, 781, 782, 783, 784, 786, 787, 803, 804, 808, 810, 816, 820, 823, 826, 830, 832, 835, 838, 843, 854, 858, 859, 861, 863, 864, 869, 870, 871, 872, 882, 883, 884, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 914, 915], "could": [0, 32, 70, 77, 128, 131, 168, 174, 177, 179, 180, 181, 233, 263, 289, 435, 468, 514, 604, 610, 631, 633, 637, 645, 648, 651, 665, 675, 684, 692, 693, 753, 784, 786, 787, 823, 835, 854, 867], "someth": [0, 26, 31, 32, 70, 77, 174, 195, 231, 233, 263, 289, 398, 435, 443, 478, 519, 522, 604, 610, 616, 619, 631, 637, 639, 645, 648, 656, 659, 665, 678, 684, 686, 692, 693, 698, 700, 701, 702, 706, 753, 784, 830, 867, 892], "like": [0, 9, 19, 26, 31, 32, 58, 62, 70, 75, 77, 87, 95, 96, 101, 114, 151, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186, 191, 195, 214, 231, 233, 242, 252, 263, 272, 282, 289, 297, 307, 345, 363, 376, 394, 400, 408, 412, 424, 435, 436, 437, 439, 444, 455, 469, 471, 472, 475, 500, 517, 519, 521, 543, 545, 560, 562, 571, 573, 584, 586, 596, 598, 604, 610, 616, 617, 624, 625, 626, 627, 628, 629, 631, 637, 639, 643, 645, 647, 648, 656, 659, 665, 678, 682, 684, 686, 690, 692, 693, 695, 704, 708, 752, 753, 784, 785, 786, 787, 789, 807, 813, 830, 847, 862, 867, 912, 915], "would": [0, 24, 109, 116, 117, 182, 192, 195, 204, 223, 233, 257, 263, 287, 289, 312, 435, 436, 459, 496, 506, 518, 525, 532, 541, 549, 558, 569, 574, 581, 593, 601, 604, 623, 639, 647, 648, 676, 678, 686, 692, 693, 704, 713, 745, 781, 785, 786, 813, 867, 886], "indic": [0, 16, 36, 55, 58, 62, 77, 88, 128, 165, 170, 174, 186, 202, 210, 220, 227, 228, 233, 249, 263, 279, 289, 304, 324, 335, 341, 348, 357, 366, 372, 379, 388, 397, 415, 416, 430, 467, 472, 536, 553, 563, 574, 575, 587, 601, 604, 610, 624, 631, 637, 645, 648, 657, 658, 659, 672, 684, 694, 695, 697, 698, 699, 700, 701, 702, 706, 712, 713, 715, 727, 745, 767, 782, 783, 803, 808, 838, 889], "just": [0, 26, 55, 75, 113, 114, 128, 174, 176, 177, 179, 180, 181, 182, 183, 186, 202, 211, 212, 230, 233, 263, 289, 314, 325, 336, 349, 367, 380, 401, 402, 403, 444, 455, 475, 483, 500, 514, 519, 625, 626, 627, 628, 637, 641, 645, 647, 658, 664, 665, 670, 680, 688, 692, 695, 698, 700, 701, 702, 706, 733, 734, 741, 752, 755, 781, 784, 785, 786, 787, 803, 808, 820, 826, 847, 854, 859, 867, 868, 870, 885, 908], "usual": [0, 14, 17, 174, 177, 179, 180, 181, 183, 184, 187, 188, 191, 195, 221, 233, 247, 250, 263, 277, 280, 289, 302, 305, 436, 438, 448, 449, 461, 462, 464, 483, 491, 599, 604, 619, 624, 625, 626, 627, 628, 645, 647, 651, 665, 692, 737, 784, 787, 811, 833, 842, 843, 875, 876, 879, 892, 899, 904], "term": [0, 3, 5, 18, 22, 105, 177, 179, 180, 186, 222, 233, 236, 238, 251, 255, 263, 266, 281, 285, 289, 291, 306, 310, 353, 355, 356, 384, 386, 387, 410, 417, 418, 419, 442, 786, 808, 895, 902], "In": [0, 2, 3, 8, 9, 12, 13, 16, 24, 26, 42, 51, 55, 58, 62, 66, 68, 70, 71, 73, 77, 78, 82, 93, 94, 95, 96, 101, 103, 109, 114, 115, 119, 126, 132, 141, 145, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 195, 201, 202, 207, 212, 224, 233, 235, 236, 241, 242, 245, 246, 249, 257, 260, 263, 265, 266, 271, 272, 275, 276, 279, 287, 289, 291, 296, 297, 300, 301, 304, 312, 314, 325, 336, 349, 367, 380, 398, 400, 407, 409, 413, 417, 422, 424, 426, 432, 435, 436, 437, 438, 439, 440, 455, 457, 458, 468, 469, 483, 496, 500, 516, 517, 518, 522, 529, 538, 539, 546, 547, 548, 555, 556, 565, 566, 575, 577, 578, 587, 589, 590, 604, 610, 616, 624, 625, 626, 627, 628, 629, 630, 631, 632, 637, 641, 645, 647, 648, 652, 658, 659, 665, 676, 680, 684, 688, 692, 693, 695, 708, 715, 739, 746, 748, 752, 753, 754, 755, 756, 758, 759, 760, 762, 782, 783, 784, 786, 787, 808, 810, 812, 830, 840, 848, 876, 879], "addit": [0, 2, 3, 26, 58, 70, 73, 78, 114, 115, 119, 126, 132, 141, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 189, 191, 195, 202, 233, 236, 263, 265, 266, 289, 291, 314, 324, 325, 335, 348, 366, 379, 397, 407, 409, 413, 416, 417, 422, 424, 432, 437, 458, 469, 483, 493, 500, 539, 548, 556, 566, 575, 578, 587, 590, 604, 606, 610, 616, 625, 627, 628, 630, 631, 632, 637, 641, 648, 652, 676, 680, 684, 688, 692, 693, 695, 708, 715, 739, 746, 748, 762, 779, 782, 783, 803, 808, 848, 876, 879, 889, 899], "standard": [0, 55, 62, 64, 158, 174, 186, 189, 195, 196, 207, 233, 263, 289, 314, 325, 336, 349, 367, 380, 400, 401, 426, 529, 692, 786, 787, 830, 833, 836, 869], "follow": [0, 26, 28, 29, 30, 33, 36, 38, 42, 47, 51, 70, 75, 77, 93, 114, 115, 118, 130, 172, 174, 178, 181, 184, 187, 189, 190, 191, 231, 233, 263, 289, 400, 407, 409, 413, 417, 422, 424, 432, 435, 439, 443, 450, 468, 483, 507, 513, 515, 604, 610, 624, 625, 626, 627, 628, 629, 630, 631, 637, 641, 645, 648, 680, 684, 688, 692, 693, 694, 697, 704, 723, 746, 752, 753, 762, 764, 765, 767, 769, 774, 784, 785, 786, 787, 788, 801, 830, 834, 844, 845, 859, 867, 902, 908, 915], "mai": [0, 55, 57, 58, 62, 77, 82, 112, 114, 116, 117, 119, 132, 141, 150, 174, 178, 181, 182, 186, 188, 191, 192, 195, 202, 215, 216, 231, 233, 263, 289, 341, 357, 372, 388, 413, 415, 424, 435, 444, 455, 475, 494, 518, 604, 610, 619, 624, 625, 626, 627, 628, 629, 631, 637, 645, 648, 665, 676, 684, 692, 694, 739, 740, 745, 752, 755, 762, 784, 789, 801, 808, 813, 823, 830, 842, 844, 889], "some": [0, 26, 34, 57, 61, 65, 77, 83, 84, 85, 86, 89, 90, 94, 112, 113, 114, 119, 132, 141, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 191, 192, 195, 206, 230, 231, 233, 260, 263, 289, 341, 357, 372, 388, 400, 415, 435, 438, 440, 460, 462, 483, 604, 610, 616, 619, 624, 626, 628, 631, 637, 641, 645, 647, 648, 651, 652, 659, 665, 680, 684, 688, 692, 704, 737, 738, 739, 740, 741, 742, 743, 744, 745, 752, 755, 760, 762, 782, 784, 785, 786, 787, 830, 842, 868, 904], "peopl": [0, 233, 263, 289, 647, 692], "get_project": [0, 233, 263, 289], "comput": [0, 4, 5, 6, 9, 12, 14, 16, 17, 19, 24, 25, 26, 32, 55, 58, 59, 62, 63, 64, 68, 73, 77, 93, 94, 96, 97, 98, 101, 109, 110, 118, 151, 166, 167, 170, 174, 177, 178, 179, 180, 181, 182, 186, 187, 191, 195, 200, 202, 206, 207, 208, 213, 218, 219, 221, 233, 237, 238, 239, 242, 245, 247, 249, 250, 252, 257, 258, 263, 267, 268, 269, 272, 275, 277, 279, 280, 282, 287, 288, 289, 292, 293, 294, 297, 300, 302, 304, 305, 307, 312, 313, 314, 318, 320, 325, 329, 331, 336, 340, 341, 343, 349, 354, 355, 356, 357, 359, 360, 367, 371, 372, 374, 380, 385, 386, 387, 388, 390, 391, 400, 410, 411, 414, 415, 419, 420, 429, 436, 441, 442, 445, 446, 447, 448, 449, 451, 457, 458, 463, 465, 469, 472, 478, 479, 480, 486, 487, 492, 501, 502, 503, 504, 505, 509, 523, 524, 527, 530, 531, 534, 536, 537, 538, 539, 540, 542, 544, 547, 548, 551, 553, 554, 555, 556, 557, 559, 561, 563, 564, 565, 566, 567, 568, 570, 572, 575, 576, 577, 578, 579, 580, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 599, 600, 604, 605, 606, 607, 608, 610, 613, 617, 619, 621, 624, 625, 626, 628, 630, 631, 632, 635, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 650, 652, 653, 654, 656, 658, 675, 676, 678, 680, 681, 682, 684, 686, 688, 689, 690, 692, 714, 726, 727, 728, 739, 742, 748, 749, 755, 756, 757, 758, 762, 781, 782, 786, 787, 803, 808, 812, 813, 814, 817, 818, 819, 820, 823, 824, 825, 826, 835, 836, 838, 842, 851, 852, 855, 856, 857, 858, 867, 870, 876, 879, 889, 892, 895, 908], "pinhol": [0, 2, 8, 12, 24, 25, 100, 109, 110, 177, 179, 180, 181, 233, 235, 241, 245, 257, 258, 263, 265, 271, 275, 287, 288, 289, 296, 300, 312, 313, 784, 908], "frame": [0, 1, 2, 4, 5, 6, 11, 12, 18, 20, 21, 26, 29, 31, 32, 55, 56, 58, 60, 62, 66, 67, 68, 69, 70, 71, 73, 77, 87, 94, 96, 97, 98, 105, 106, 107, 174, 176, 177, 178, 179, 180, 181, 182, 189, 192, 195, 233, 234, 235, 237, 238, 239, 244, 245, 251, 253, 254, 263, 264, 265, 267, 268, 269, 274, 275, 281, 283, 284, 289, 290, 292, 293, 294, 299, 300, 306, 308, 309, 435, 437, 438, 448, 449, 455, 457, 458, 459, 463, 468, 472, 476, 479, 480, 483, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 514, 519, 520, 524, 525, 531, 532, 539, 541, 543, 548, 549, 556, 558, 560, 566, 569, 571, 574, 575, 578, 581, 582, 584, 587, 590, 593, 594, 596, 599, 600, 601, 610, 611, 617, 618, 619, 625, 626, 627, 628, 631, 632, 633, 637, 641, 645, 647, 648, 652, 659, 661, 662, 663, 665, 672, 680, 688, 692, 694, 729, 731, 732, 733, 734, 735, 736, 742, 744, 746, 747, 748, 749, 751, 752, 755, 756, 757, 758, 759, 760, 762, 764, 784, 786, 787, 808, 816, 823, 850, 854, 857, 863, 864, 867, 875, 876, 879, 882, 883, 884, 892, 895, 899, 902, 908], "pixel": [0, 1, 4, 5, 6, 8, 9, 12, 16, 17, 18, 19, 21, 24, 25, 26, 31, 37, 46, 55, 56, 58, 59, 60, 62, 63, 71, 94, 96, 97, 98, 100, 101, 105, 107, 109, 110, 111, 174, 175, 177, 178, 179, 180, 181, 182, 186, 188, 191, 195, 198, 199, 202, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 226, 227, 228, 229, 233, 234, 237, 238, 239, 241, 242, 245, 249, 250, 251, 252, 254, 257, 258, 263, 264, 267, 268, 269, 271, 272, 275, 279, 280, 281, 282, 284, 287, 288, 289, 290, 292, 293, 294, 296, 297, 300, 304, 305, 306, 307, 309, 312, 313, 314, 325, 336, 349, 367, 380, 398, 401, 426, 437, 472, 483, 486, 487, 494, 500, 604, 605, 606, 607, 610, 612, 618, 619, 624, 625, 626, 627, 628, 630, 631, 632, 634, 637, 643, 645, 646, 648, 650, 651, 653, 656, 657, 658, 676, 682, 684, 687, 690, 692, 694, 695, 697, 752, 755, 757, 758, 762, 768, 773, 778, 784, 786, 787, 803, 807, 808, 809, 830, 832, 852, 854, 856, 857, 859, 862, 889, 902, 908], "locat": [0, 1, 2, 4, 5, 6, 8, 9, 12, 16, 17, 18, 19, 20, 21, 24, 25, 26, 31, 33, 47, 55, 56, 58, 60, 62, 66, 71, 96, 97, 98, 100, 101, 105, 106, 107, 109, 110, 115, 119, 120, 132, 141, 145, 147, 148, 174, 175, 177, 178, 179, 180, 181, 182, 186, 187, 191, 192, 195, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 218, 220, 222, 225, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 241, 242, 245, 249, 250, 251, 252, 253, 254, 257, 258, 263, 264, 265, 267, 268, 269, 271, 272, 275, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 292, 293, 294, 296, 297, 300, 304, 305, 306, 307, 308, 309, 312, 313, 314, 320, 322, 325, 331, 333, 336, 341, 343, 346, 349, 357, 359, 360, 364, 367, 372, 374, 377, 380, 388, 390, 391, 395, 400, 401, 411, 415, 420, 429, 431, 434, 438, 439, 455, 458, 459, 464, 468, 469, 470, 471, 472, 475, 476, 479, 483, 484, 485, 486, 487, 489, 490, 491, 500, 501, 502, 503, 504, 505, 506, 507, 509, 514, 519, 520, 521, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 604, 605, 606, 610, 611, 612, 616, 617, 618, 619, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 640, 645, 646, 647, 648, 650, 651, 652, 653, 656, 657, 658, 665, 672, 676, 684, 692, 694, 734, 736, 737, 741, 743, 744, 745, 752, 755, 757, 758, 760, 761, 762, 765, 774, 778, 782, 783, 784, 786, 787, 788, 803, 808, 823, 830, 844, 854, 857, 862, 863, 899, 902, 908], "pixels_to_gnom": [0, 17, 18, 25, 233, 250, 251, 258, 263, 280, 281, 288, 289, 305, 306, 313], "remov": [0, 4, 16, 24, 25, 34, 36, 37, 46, 77, 87, 88, 109, 110, 174, 175, 186, 191, 214, 227, 233, 237, 249, 257, 258, 263, 267, 279, 287, 288, 289, 292, 304, 312, 313, 344, 345, 361, 363, 375, 376, 392, 394, 408, 412, 453, 604, 606, 627, 647, 648, 656, 692, 752, 767, 768, 773, 778, 784, 786, 803, 809, 844], "distort": [0, 2, 4, 5, 6, 8, 9, 12, 16, 18, 24, 25, 58, 74, 96, 100, 101, 105, 109, 110, 174, 177, 178, 179, 180, 181, 233, 235, 237, 238, 241, 242, 245, 249, 251, 257, 258, 263, 265, 267, 269, 271, 272, 275, 279, 281, 287, 288, 289, 296, 297, 304, 306, 312, 313, 604, 648, 784, 908, 911], "from": [0, 2, 4, 9, 10, 12, 13, 14, 15, 20, 21, 24, 26, 31, 32, 33, 34, 36, 37, 46, 47, 55, 57, 58, 62, 66, 68, 69, 70, 71, 72, 73, 75, 77, 88, 92, 93, 94, 95, 101, 102, 103, 104, 106, 109, 111, 112, 113, 114, 116, 119, 120, 121, 124, 125, 126, 128, 129, 130, 132, 136, 137, 138, 139, 141, 143, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 164, 166, 168, 170, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 201, 202, 203, 204, 207, 208, 209, 211, 212, 214, 215, 216, 220, 222, 223, 224, 228, 229, 231, 233, 235, 237, 242, 243, 245, 246, 247, 248, 253, 254, 257, 259, 263, 265, 267, 272, 273, 275, 276, 277, 278, 283, 284, 287, 289, 292, 297, 298, 300, 301, 302, 303, 308, 309, 312, 314, 325, 336, 341, 349, 353, 356, 357, 367, 372, 380, 384, 387, 388, 400, 407, 409, 413, 415, 416, 417, 418, 419, 422, 424, 426, 432, 435, 436, 437, 439, 442, 443, 445, 446, 447, 453, 455, 456, 458, 459, 460, 462, 469, 475, 476, 478, 479, 481, 482, 483, 488, 491, 492, 493, 494, 495, 497, 500, 501, 504, 505, 506, 512, 518, 520, 522, 524, 525, 529, 531, 532, 539, 541, 542, 546, 548, 549, 556, 558, 559, 566, 569, 570, 574, 578, 579, 581, 583, 590, 591, 593, 595, 601, 604, 606, 608, 610, 611, 612, 613, 615, 616, 619, 620, 621, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 639, 640, 641, 642, 643, 645, 647, 648, 651, 652, 654, 656, 657, 658, 659, 665, 667, 668, 671, 676, 678, 679, 680, 681, 682, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 698, 699, 700, 701, 702, 703, 704, 706, 708, 710, 713, 718, 720, 721, 722, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 765, 767, 768, 773, 774, 778, 779, 780, 782, 784, 785, 786, 787, 788, 789, 791, 795, 801, 803, 805, 808, 809, 812, 815, 816, 817, 819, 820, 822, 823, 824, 826, 828, 830, 834, 836, 837, 843, 844, 845, 847, 848, 854, 858, 859, 862, 864, 865, 866, 867, 870, 871, 874, 875, 876, 879, 882, 883, 884, 885, 886, 889, 890, 892, 893, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 908, 909, 911, 912, 915], "get": [0, 11, 14, 20, 26, 34, 57, 70, 77, 78, 88, 106, 116, 117, 119, 132, 141, 174, 176, 182, 183, 184, 185, 186, 188, 191, 192, 195, 201, 204, 215, 216, 230, 233, 244, 247, 253, 263, 274, 277, 283, 289, 299, 302, 308, 407, 409, 435, 444, 453, 455, 469, 483, 484, 486, 487, 491, 492, 493, 495, 497, 499, 501, 505, 507, 518, 604, 610, 616, 618, 619, 624, 626, 631, 637, 645, 647, 684, 692, 708, 739, 752, 758, 762, 784, 785, 786, 787, 789, 806, 809, 816, 830, 835, 857, 867, 870, 877, 880, 911], "correspond": [0, 3, 4, 5, 6, 13, 15, 18, 20, 21, 24, 25, 26, 29, 42, 47, 55, 58, 62, 66, 68, 78, 81, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 109, 110, 116, 122, 123, 141, 147, 148, 165, 168, 174, 178, 186, 189, 191, 202, 204, 208, 209, 224, 228, 233, 236, 237, 238, 246, 248, 251, 253, 254, 257, 258, 263, 266, 267, 268, 269, 276, 278, 281, 283, 284, 287, 288, 289, 291, 292, 293, 294, 301, 303, 306, 308, 309, 312, 313, 319, 330, 342, 353, 358, 373, 384, 389, 418, 443, 458, 472, 497, 504, 505, 507, 524, 531, 536, 539, 548, 553, 556, 563, 566, 575, 578, 582, 587, 590, 594, 604, 606, 607, 609, 610, 611, 612, 614, 616, 619, 622, 626, 631, 633, 634, 636, 637, 640, 644, 648, 651, 655, 656, 657, 658, 659, 683, 684, 687, 691, 692, 695, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 733, 734, 746, 748, 749, 752, 755, 760, 762, 764, 774, 784, 786, 803, 830, 867, 885, 889, 892, 895, 899, 902, 904, 908], "unitless": [0, 2, 20, 106, 233, 235, 253, 263, 283, 289, 308], "properti": [0, 15, 26, 33, 55, 58, 62, 77, 94, 104, 113, 119, 174, 178, 185, 186, 189, 191, 195, 233, 248, 259, 263, 278, 289, 303, 314, 325, 336, 349, 367, 380, 400, 401, 413, 426, 469, 475, 481, 483, 494, 536, 553, 563, 575, 587, 604, 610, 619, 626, 631, 637, 648, 659, 665, 667, 676, 684, 692, 695, 704, 708, 746, 748, 762, 765, 778, 801, 850, 854], "easi": [0, 26, 77, 142, 174, 176, 177, 179, 180, 181, 184, 186, 188, 191, 192, 231, 233, 263, 289, 438, 463, 475, 483, 544, 551, 561, 572, 585, 597, 659, 692, 695, 708, 748, 762, 786, 803, 847, 848, 867, 868, 876], "descript": [0, 26, 27, 29, 30, 47, 94, 115, 122, 123, 130, 177, 179, 180, 189, 233, 260, 263, 289, 443, 450, 455, 468, 604, 610, 626, 631, 637, 640, 648, 656, 684, 694, 695, 696, 748, 755, 762, 763, 764, 774, 786, 804, 808, 833, 868], "diagon": [0, 94, 178, 233, 263, 289, 645, 784, 854, 858], "field": [0, 9, 17, 47, 94, 101, 112, 113, 174, 175, 177, 178, 179, 180, 181, 233, 242, 250, 263, 272, 280, 289, 297, 305, 443, 468, 604, 645, 647, 648, 672, 674, 694, 752, 758, 759, 774, 782, 784, 786, 787, 829], "view": [0, 17, 47, 94, 125, 172, 174, 177, 178, 179, 180, 181, 233, 250, 263, 280, 289, 305, 604, 641, 645, 647, 672, 674, 680, 688, 752, 758, 759, 774, 782, 787, 849, 864, 868], "unit": [0, 4, 6, 8, 9, 12, 14, 16, 17, 18, 20, 21, 25, 26, 29, 31, 37, 38, 46, 55, 58, 59, 62, 63, 66, 69, 71, 94, 96, 98, 100, 101, 105, 106, 107, 110, 114, 118, 127, 130, 143, 148, 154, 155, 156, 157, 159, 160, 161, 165, 167, 168, 169, 170, 171, 174, 177, 178, 179, 180, 181, 182, 186, 189, 233, 237, 239, 241, 242, 245, 247, 249, 250, 251, 253, 254, 258, 263, 265, 267, 269, 271, 272, 275, 277, 279, 280, 281, 283, 284, 288, 289, 292, 294, 296, 297, 300, 302, 304, 305, 306, 308, 309, 313, 400, 432, 441, 442, 443, 445, 446, 447, 458, 459, 468, 469, 479, 491, 492, 493, 504, 505, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 567, 569, 574, 578, 579, 581, 590, 591, 593, 601, 610, 616, 617, 619, 625, 631, 632, 643, 648, 682, 690, 694, 708, 714, 720, 721, 722, 746, 747, 748, 749, 750, 751, 752, 755, 756, 757, 758, 760, 762, 764, 768, 769, 773, 786, 808, 812, 816, 817, 830, 854, 858, 892, 895, 899, 902, 904, 906, 908], "degre": [0, 14, 94, 114, 120, 124, 126, 127, 129, 136, 137, 148, 149, 150, 154, 155, 156, 160, 165, 174, 178, 233, 247, 263, 277, 289, 302, 442, 447, 479, 617, 645, 648, 672, 674, 737, 748, 756, 784, 786, 808, 812], "f_x": [0, 4, 5, 177, 179, 233, 237, 238], "focal": [0, 4, 5, 12, 14, 21, 58, 62, 75, 96, 107, 174, 177, 178, 179, 180, 181, 195, 233, 237, 238, 245, 247, 254, 263, 267, 268, 275, 277, 284, 289, 293, 294, 300, 302, 309, 784, 786, 902, 908], "length": [0, 4, 5, 12, 14, 20, 21, 26, 47, 55, 58, 62, 75, 77, 94, 96, 106, 107, 146, 151, 169, 170, 174, 177, 178, 179, 180, 181, 186, 195, 213, 214, 233, 237, 238, 245, 247, 253, 254, 263, 267, 268, 275, 277, 283, 284, 289, 292, 293, 294, 300, 302, 308, 309, 316, 317, 318, 327, 328, 329, 338, 339, 340, 351, 352, 353, 354, 355, 369, 370, 371, 382, 383, 384, 385, 386, 400, 401, 407, 409, 410, 414, 418, 423, 426, 428, 448, 449, 450, 457, 458, 459, 463, 469, 483, 487, 494, 495, 499, 500, 501, 504, 506, 510, 519, 523, 524, 525, 527, 530, 531, 532, 534, 536, 538, 539, 541, 544, 547, 548, 549, 551, 553, 555, 556, 558, 561, 563, 565, 566, 569, 572, 574, 575, 577, 578, 581, 585, 587, 589, 590, 593, 597, 599, 601, 603, 610, 619, 626, 631, 639, 641, 643, 648, 652, 678, 680, 682, 686, 688, 690, 692, 695, 703, 708, 714, 715, 718, 719, 724, 725, 726, 746, 748, 749, 755, 762, 774, 784, 786, 787, 808, 814, 818, 825, 829, 830, 833, 838, 852, 854, 856, 857, 858, 871, 892, 895, 899, 902, 904, 908], "divid": [0, 177, 179, 233, 446, 455, 599, 637, 870], "pitch": [0, 58, 73, 96, 174, 177, 178, 179, 180, 181, 233, 263, 268, 289, 292, 293, 294, 398, 784, 899, 902, 908], "x": [0, 2, 4, 5, 6, 9, 16, 18, 20, 26, 37, 46, 96, 97, 98, 101, 106, 168, 170, 174, 177, 178, 179, 180, 181, 186, 189, 202, 209, 211, 212, 213, 214, 224, 225, 227, 228, 233, 235, 237, 238, 239, 242, 249, 251, 253, 263, 265, 267, 268, 269, 272, 279, 281, 283, 289, 292, 293, 294, 297, 304, 306, 308, 314, 316, 317, 318, 320, 321, 322, 325, 327, 328, 329, 331, 332, 333, 336, 338, 339, 340, 341, 343, 344, 345, 346, 349, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 367, 369, 370, 371, 372, 374, 375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 400, 401, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 417, 419, 420, 421, 423, 426, 428, 429, 430, 431, 434, 472, 494, 499, 504, 505, 602, 604, 610, 617, 618, 619, 626, 631, 632, 637, 648, 652, 657, 658, 684, 692, 694, 713, 715, 719, 720, 723, 725, 726, 755, 762, 768, 773, 779, 780, 784, 789, 808, 812, 817, 824, 833, 854, 870, 902, 908], "direct": [0, 4, 5, 12, 20, 21, 26, 56, 60, 70, 71, 106, 107, 174, 176, 177, 179, 180, 181, 186, 189, 209, 233, 237, 238, 245, 253, 254, 263, 267, 268, 275, 283, 284, 289, 292, 293, 294, 300, 308, 309, 314, 316, 317, 325, 327, 328, 336, 338, 339, 349, 351, 352, 367, 369, 370, 380, 382, 383, 403, 417, 423, 428, 437, 439, 443, 459, 469, 470, 471, 472, 479, 483, 493, 504, 506, 507, 525, 532, 541, 549, 558, 569, 574, 579, 581, 591, 593, 601, 612, 615, 616, 617, 618, 625, 627, 630, 634, 639, 643, 647, 649, 672, 673, 678, 682, 684, 686, 690, 693, 729, 745, 749, 753, 755, 760, 761, 762, 786, 807, 808, 817, 848, 902], "f_y": [0, 4, 5, 177, 179, 233, 237, 238], "y": [0, 2, 4, 5, 9, 20, 26, 37, 46, 101, 106, 170, 174, 177, 179, 180, 181, 186, 189, 202, 206, 209, 211, 212, 213, 214, 224, 225, 227, 228, 233, 237, 238, 242, 253, 263, 268, 272, 283, 289, 292, 293, 294, 297, 308, 314, 318, 320, 321, 322, 325, 329, 331, 332, 333, 336, 340, 341, 343, 344, 345, 346, 349, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 367, 371, 372, 374, 375, 376, 377, 380, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 400, 401, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 417, 419, 420, 421, 426, 429, 430, 431, 434, 494, 499, 602, 604, 610, 617, 619, 626, 631, 637, 648, 652, 657, 658, 684, 692, 694, 713, 721, 723, 755, 762, 768, 773, 779, 780, 784, 808, 812, 833, 854, 888, 902, 908], "A": [0, 4, 7, 8, 12, 16, 19, 20, 21, 23, 26, 27, 34, 39, 40, 41, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 58, 62, 68, 75, 77, 78, 82, 94, 96, 99, 100, 106, 107, 113, 114, 115, 119, 120, 124, 126, 127, 128, 129, 130, 132, 136, 137, 141, 145, 146, 149, 150, 152, 168, 174, 175, 182, 184, 186, 189, 191, 194, 195, 202, 206, 208, 209, 212, 213, 220, 222, 223, 224, 225, 227, 228, 229, 233, 237, 240, 241, 245, 249, 252, 253, 254, 256, 260, 261, 262, 263, 267, 270, 271, 275, 279, 282, 283, 284, 286, 289, 292, 295, 296, 300, 304, 307, 308, 309, 311, 314, 318, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 340, 343, 344, 346, 347, 348, 349, 354, 359, 361, 364, 365, 366, 367, 371, 374, 375, 377, 378, 379, 380, 385, 390, 392, 395, 396, 397, 400, 401, 411, 426, 429, 431, 434, 435, 436, 437, 443, 448, 450, 453, 455, 456, 459, 463, 464, 466, 467, 468, 469, 472, 475, 478, 482, 483, 491, 494, 500, 503, 504, 505, 506, 507, 508, 509, 516, 529, 536, 541, 542, 544, 549, 551, 553, 558, 559, 561, 563, 569, 570, 572, 574, 575, 581, 583, 585, 587, 593, 595, 597, 600, 601, 602, 603, 604, 606, 610, 611, 616, 617, 619, 623, 624, 625, 626, 627, 631, 637, 645, 647, 648, 651, 656, 657, 658, 660, 662, 669, 672, 674, 676, 684, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 744, 746, 748, 752, 755, 757, 758, 762, 763, 770, 771, 772, 775, 776, 777, 778, 779, 781, 782, 784, 786, 787, 789, 801, 803, 804, 808, 810, 816, 820, 823, 826, 830, 833, 835, 838, 847, 854, 859, 864, 869, 870, 874, 882, 883, 884, 889, 896, 902, 904, 905, 908, 911, 915], "non": [0, 19, 58, 62, 174, 177, 179, 180, 183, 186, 188, 233, 252, 263, 282, 307, 314, 316, 317, 327, 328, 336, 338, 339, 341, 344, 345, 349, 351, 352, 355, 357, 361, 363, 367, 369, 370, 372, 375, 376, 380, 382, 383, 386, 388, 392, 394, 407, 408, 409, 410, 412, 413, 414, 415, 423, 428, 440, 712, 716, 786, 803, 835, 845, 912, 915], "rectangular": [0, 177, 179, 180, 233, 263], "p_": [0, 5, 177, 179, 233, 235, 238, 263, 289], "axi": [0, 2, 9, 20, 21, 55, 58, 62, 68, 96, 101, 106, 107, 170, 174, 186, 189, 215, 216, 233, 235, 242, 253, 254, 263, 265, 272, 283, 284, 289, 297, 308, 309, 319, 325, 330, 342, 358, 367, 373, 380, 389, 435, 436, 450, 451, 453, 455, 469, 486, 487, 492, 494, 496, 499, 500, 508, 510, 536, 553, 563, 574, 575, 587, 618, 648, 659, 715, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 756, 759, 808, 908], "princip": [0, 16, 174, 177, 179, 180, 181, 186, 233, 249, 263, 279, 289, 304, 325, 367, 380, 486, 500, 501, 502, 574, 625, 627, 902, 908], "k_1": [0, 2, 4, 233, 237], "radial": [0, 2, 4, 5, 94, 165, 174, 177, 179, 180, 233, 235, 237, 238, 263, 265, 289, 648, 759, 784], "coeffici": [0, 2, 4, 5, 6, 12, 21, 28, 64, 96, 174, 177, 178, 179, 180, 181, 186, 215, 216, 220, 221, 222, 225, 228, 229, 233, 235, 237, 238, 245, 254, 263, 265, 267, 268, 269, 275, 284, 289, 292, 293, 294, 300, 309, 325, 367, 380, 511, 604, 648, 656, 657, 658, 784, 816, 908, 911], "r": [0, 2, 4, 58, 68, 174, 177, 179, 180, 189, 233, 235, 237, 263, 265, 267, 269, 504, 506, 602, 625, 652, 720, 721, 722, 741, 745, 784, 785, 786, 912, 915], "2": [0, 2, 4, 5, 6, 9, 12, 14, 16, 17, 18, 20, 21, 25, 26, 31, 37, 46, 55, 58, 62, 66, 67, 71, 76, 77, 93, 94, 96, 101, 105, 106, 107, 110, 114, 115, 116, 117, 118, 119, 122, 125, 132, 137, 138, 141, 144, 146, 151, 156, 165, 170, 174, 177, 179, 180, 181, 182, 185, 186, 187, 189, 191, 192, 200, 202, 203, 204, 207, 208, 210, 211, 219, 220, 222, 223, 224, 225, 228, 229, 233, 235, 237, 238, 242, 245, 247, 249, 250, 251, 253, 254, 258, 263, 265, 267, 268, 269, 272, 275, 277, 279, 280, 281, 283, 284, 288, 289, 292, 293, 294, 297, 300, 302, 304, 305, 306, 308, 309, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 342, 343, 344, 346, 347, 349, 351, 352, 354, 358, 359, 361, 364, 365, 367, 369, 370, 371, 373, 374, 375, 377, 378, 380, 382, 383, 385, 389, 390, 392, 395, 396, 400, 401, 407, 409, 423, 426, 428, 431, 434, 435, 439, 441, 442, 447, 448, 449, 455, 472, 483, 487, 494, 495, 497, 499, 500, 501, 504, 506, 507, 511, 518, 536, 546, 553, 563, 574, 575, 579, 587, 591, 602, 603, 604, 610, 612, 616, 618, 619, 624, 625, 627, 630, 631, 634, 637, 639, 641, 643, 645, 646, 647, 648, 652, 657, 658, 659, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 693, 694, 699, 708, 713, 715, 718, 719, 720, 721, 722, 724, 725, 729, 730, 742, 745, 749, 751, 752, 755, 760, 768, 773, 784, 786, 787, 807, 808, 809, 812, 816, 819, 823, 830, 842, 843, 852, 854, 855, 856, 857, 858, 859, 867, 869, 870, 889, 892, 895, 904, 908], "k_2": [0, 2, 4, 233, 237], "4": [0, 2, 4, 5, 6, 12, 21, 77, 117, 120, 124, 125, 129, 136, 137, 144, 149, 157, 174, 177, 179, 180, 189, 191, 203, 223, 233, 235, 237, 238, 245, 254, 263, 265, 267, 269, 275, 284, 289, 292, 300, 309, 319, 330, 342, 358, 373, 389, 483, 494, 499, 522, 603, 627, 631, 708, 710, 715, 718, 719, 737, 739, 752, 760, 784, 785, 830, 859, 870], "k_3": [0, 2, 4, 233, 237], "6": [0, 2, 4, 5, 6, 12, 21, 26, 77, 174, 177, 179, 203, 223, 233, 235, 237, 238, 245, 254, 263, 267, 275, 284, 289, 292, 300, 309, 483, 494, 499, 648, 818, 825, 892, 895, 904, 908], "p_1": [0, 2, 4, 177, 179, 233, 235, 237], "tip": [0, 174, 177, 179, 180, 191, 233, 263, 265], "tilt": [0, 177, 179, 180, 233, 263, 265], "prism": [0, 177, 179, 180, 233, 235, 263, 265], "y_i": [0, 4, 177, 179, 180, 233, 237, 238, 263, 265, 267, 269, 292], "p_2": [0, 2, 4, 177, 179, 233, 235, 237], "x_i": [0, 4, 177, 179, 180, 233, 237, 238, 263, 265, 267, 269, 292], "a_1": [0, 4, 14, 233, 237, 247, 263, 267, 277, 289, 292, 302, 727], "linear": [0, 17, 58, 62, 68, 69, 76, 165, 174, 186, 201, 202, 207, 211, 212, 233, 250, 263, 280, 289, 305, 321, 332, 336, 341, 344, 345, 349, 355, 357, 361, 362, 363, 367, 372, 375, 376, 380, 386, 388, 392, 393, 394, 408, 410, 412, 413, 414, 415, 417, 421, 435, 458, 493, 504, 524, 531, 539, 548, 556, 566, 575, 578, 582, 587, 590, 594, 627, 632, 645, 648, 714, 728, 752, 784, 835, 845], "depend": [0, 4, 12, 14, 21, 26, 31, 32, 51, 57, 58, 62, 68, 69, 70, 71, 75, 94, 107, 145, 165, 174, 177, 179, 180, 181, 186, 191, 192, 195, 231, 233, 237, 245, 247, 254, 263, 267, 275, 277, 284, 289, 292, 300, 302, 309, 341, 357, 372, 388, 407, 409, 415, 450, 469, 612, 620, 626, 627, 634, 679, 692, 693, 695, 703, 755, 786, 787, 833, 862, 917, 918], "a_2": [0, 4, 14, 233, 237, 247, 263, 267, 277, 289, 292, 302, 727], "quadrat": [0, 202, 211, 233, 263, 289, 506, 507, 511], "a_3": [0, 4, 14, 233, 237, 247, 263, 267, 277, 289, 292, 302, 727], "cubic": [0, 233, 263, 289], "intrinsic_matrix_inv": [0, 233, 263, 289], "invers": [0, 1, 6, 8, 16, 18, 93, 105, 120, 124, 129, 136, 137, 149, 150, 191, 222, 233, 234, 241, 249, 251, 263, 264, 268, 269, 271, 279, 281, 289, 290, 292, 293, 294, 296, 304, 306, 437, 455, 469, 483, 484, 496, 711, 715, 752], "intrins": [0, 4, 6, 16, 233, 237, 249, 263, 267, 269, 279, 289, 292, 294, 304, 908], "matrix": [0, 1, 4, 5, 6, 8, 16, 18, 26, 28, 55, 58, 62, 64, 66, 68, 94, 96, 97, 98, 174, 178, 186, 189, 191, 226, 233, 234, 237, 238, 239, 241, 249, 251, 263, 264, 267, 268, 269, 271, 279, 281, 289, 290, 292, 293, 294, 296, 304, 306, 314, 318, 321, 325, 329, 332, 336, 340, 341, 344, 345, 349, 353, 354, 355, 356, 357, 361, 363, 367, 371, 372, 375, 376, 380, 384, 385, 386, 387, 388, 392, 394, 408, 410, 412, 414, 415, 417, 418, 419, 448, 449, 458, 466, 483, 500, 504, 508, 513, 524, 531, 539, 548, 556, 566, 578, 590, 600, 602, 610, 625, 631, 632, 648, 652, 656, 708, 710, 713, 715, 717, 718, 720, 721, 722, 723, 724, 726, 727, 742, 747, 748, 749, 750, 751, 755, 762, 812, 814, 816, 817, 818, 823, 824, 825, 830, 852, 854, 856, 858, 892, 895, 899, 902, 908, 911], "alias": [0, 26, 94, 174, 185, 233, 259, 263, 289, 708, 762], "over": [0, 19, 31, 32, 66, 71, 75, 77, 117, 139, 153, 174, 181, 188, 192, 222, 229, 233, 252, 263, 282, 307, 453, 459, 541, 549, 558, 569, 581, 593, 604, 616, 647, 648, 658, 659, 665, 672, 692, 714, 755, 784, 864, 871, 875, 876, 879], "each": [0, 4, 8, 9, 10, 12, 15, 19, 20, 21, 24, 26, 29, 30, 31, 32, 33, 42, 47, 51, 55, 58, 59, 62, 63, 66, 68, 69, 70, 72, 73, 75, 77, 78, 81, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 100, 101, 102, 104, 106, 107, 109, 113, 115, 118, 125, 127, 130, 131, 138, 142, 145, 146, 151, 152, 168, 172, 174, 176, 177, 179, 180, 181, 182, 183, 186, 187, 191, 193, 201, 202, 204, 206, 207, 209, 210, 215, 216, 220, 221, 222, 224, 225, 226, 229, 231, 233, 237, 241, 242, 243, 245, 248, 252, 253, 254, 257, 263, 267, 271, 272, 273, 275, 278, 282, 283, 284, 287, 289, 292, 296, 297, 298, 300, 303, 307, 308, 309, 312, 316, 317, 327, 328, 338, 339, 341, 351, 352, 357, 369, 370, 372, 382, 383, 388, 398, 415, 423, 428, 436, 438, 439, 443, 450, 453, 455, 456, 458, 459, 465, 467, 468, 469, 472, 475, 477, 478, 480, 481, 482, 483, 494, 497, 499, 500, 501, 504, 505, 506, 507, 524, 525, 531, 532, 536, 539, 541, 548, 549, 553, 556, 558, 563, 566, 567, 569, 574, 575, 578, 579, 581, 587, 590, 591, 593, 599, 600, 601, 603, 604, 605, 606, 607, 608, 610, 611, 615, 616, 617, 619, 621, 623, 625, 626, 627, 628, 629, 631, 633, 637, 640, 641, 642, 645, 647, 648, 650, 651, 653, 654, 656, 658, 659, 660, 661, 662, 663, 664, 665, 672, 676, 680, 681, 684, 687, 688, 689, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 706, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 745, 746, 748, 749, 751, 752, 753, 755, 762, 764, 765, 774, 779, 781, 782, 784, 786, 787, 788, 803, 807, 809, 810, 811, 823, 830, 831, 834, 835, 840, 842, 843, 844, 859, 862, 864, 867, 871, 889, 892, 895, 899, 902, 904, 908], "other": [0, 2, 15, 26, 57, 75, 78, 81, 85, 86, 87, 104, 125, 171, 174, 175, 182, 183, 185, 186, 187, 191, 195, 202, 205, 231, 233, 235, 248, 263, 265, 278, 289, 303, 341, 357, 372, 388, 415, 435, 437, 438, 439, 444, 450, 455, 468, 483, 494, 500, 519, 542, 559, 570, 575, 583, 587, 595, 604, 610, 615, 616, 619, 625, 626, 627, 628, 629, 631, 637, 647, 648, 658, 659, 672, 674, 676, 684, 692, 695, 704, 712, 745, 748, 752, 754, 762, 784, 786, 787, 788, 807, 809, 814, 816, 817, 820, 823, 824, 826, 830, 835, 844, 847, 859, 867, 908], "refer": [0, 7, 34, 39, 40, 41, 43, 44, 45, 70, 77, 94, 99, 118, 122, 123, 125, 137, 150, 174, 176, 186, 187, 188, 191, 192, 195, 230, 233, 240, 261, 263, 270, 295, 400, 426, 443, 450, 455, 458, 468, 486, 513, 515, 517, 536, 539, 540, 542, 548, 553, 556, 557, 559, 563, 566, 568, 570, 574, 575, 578, 580, 583, 587, 590, 592, 595, 624, 625, 626, 627, 628, 629, 630, 637, 640, 645, 647, 672, 676, 687, 693, 694, 695, 699, 704, 705, 752, 753, 770, 771, 772, 842, 845, 848, 863, 869, 875, 876, 879, 882, 899, 908], "same": [0, 4, 15, 24, 25, 26, 34, 37, 46, 47, 55, 58, 62, 66, 71, 73, 74, 75, 78, 82, 87, 88, 96, 104, 109, 110, 111, 112, 113, 114, 168, 174, 177, 179, 180, 184, 186, 188, 189, 191, 192, 204, 231, 233, 237, 248, 257, 258, 263, 267, 278, 287, 288, 289, 292, 303, 312, 313, 314, 320, 325, 331, 336, 341, 343, 349, 357, 359, 367, 372, 374, 380, 388, 390, 404, 407, 409, 411, 415, 429, 450, 455, 458, 469, 484, 504, 524, 531, 536, 539, 542, 548, 553, 556, 559, 563, 566, 570, 575, 578, 583, 587, 590, 595, 604, 610, 619, 623, 630, 631, 637, 645, 647, 648, 651, 658, 659, 665, 684, 694, 695, 703, 704, 708, 715, 719, 724, 725, 739, 740, 752, 755, 760, 762, 768, 773, 774, 779, 780, 781, 782, 784, 787, 807, 814, 816, 838, 842, 858, 866, 867, 868, 869, 904], "data": [0, 24, 26, 27, 55, 57, 58, 61, 62, 65, 66, 70, 77, 78, 82, 109, 111, 114, 116, 117, 118, 119, 126, 130, 131, 132, 141, 145, 146, 172, 174, 175, 177, 179, 180, 181, 182, 183, 184, 186, 189, 191, 193, 195, 196, 202, 212, 213, 233, 257, 260, 263, 287, 312, 314, 321, 325, 332, 336, 344, 349, 356, 361, 362, 363, 367, 375, 380, 387, 392, 393, 394, 400, 401, 405, 412, 413, 417, 419, 421, 426, 430, 437, 443, 463, 468, 477, 478, 494, 499, 503, 509, 544, 551, 561, 572, 585, 597, 604, 608, 610, 613, 621, 631, 635, 637, 639, 642, 647, 648, 651, 654, 659, 661, 663, 665, 668, 670, 671, 672, 678, 681, 684, 686, 689, 692, 694, 695, 696, 708, 710, 712, 729, 730, 735, 738, 745, 753, 755, 757, 762, 763, 784, 786, 788, 791, 803, 804, 816, 823, 844, 848, 859, 862, 865, 867, 868, 870, 889, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 917], "therefor": [0, 20, 39, 40, 41, 43, 44, 45, 58, 62, 75, 106, 122, 123, 136, 146, 149, 150, 151, 167, 168, 174, 176, 177, 179, 180, 181, 186, 187, 188, 191, 192, 204, 206, 214, 233, 253, 261, 263, 283, 289, 308, 321, 332, 341, 357, 372, 388, 415, 422, 436, 439, 450, 459, 475, 480, 492, 493, 500, 506, 513, 518, 519, 525, 532, 541, 549, 558, 569, 574, 581, 593, 599, 601, 604, 615, 627, 628, 637, 647, 648, 651, 658, 664, 665, 671, 672, 684, 692, 693, 695, 704, 705, 714, 715, 716, 719, 723, 724, 725, 727, 739, 744, 745, 752, 770, 771, 772, 784, 786, 787, 823, 830, 845, 863, 889, 908], "valu": [0, 3, 4, 8, 9, 14, 15, 16, 17, 24, 26, 28, 42, 48, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 65, 68, 73, 76, 77, 78, 94, 100, 101, 104, 108, 109, 111, 113, 130, 131, 135, 140, 144, 151, 164, 165, 167, 170, 174, 177, 178, 179, 180, 181, 183, 186, 187, 191, 194, 195, 201, 202, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 236, 237, 241, 242, 247, 248, 249, 250, 257, 262, 263, 266, 267, 271, 272, 277, 278, 279, 280, 287, 289, 291, 292, 296, 297, 302, 303, 304, 305, 312, 318, 321, 322, 324, 329, 332, 333, 335, 336, 340, 341, 344, 345, 346, 348, 349, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367, 371, 372, 375, 376, 377, 379, 380, 385, 386, 387, 388, 391, 392, 393, 394, 395, 397, 404, 405, 408, 410, 412, 413, 414, 415, 416, 419, 420, 421, 430, 431, 434, 435, 441, 442, 443, 445, 446, 447, 448, 449, 453, 468, 469, 472, 473, 480, 483, 485, 494, 495, 499, 500, 501, 518, 536, 537, 553, 554, 563, 564, 575, 576, 587, 588, 604, 607, 609, 614, 615, 617, 619, 622, 623, 625, 626, 627, 628, 636, 637, 640, 644, 645, 648, 649, 653, 655, 656, 657, 658, 659, 673, 675, 676, 683, 684, 687, 691, 692, 695, 697, 703, 704, 707, 708, 720, 721, 722, 741, 748, 758, 759, 760, 762, 775, 776, 777, 782, 784, 786, 787, 789, 801, 803, 807, 808, 816, 823, 830, 843, 858, 867, 870, 889, 899, 902, 908, 911, 914, 916], "chang": [0, 1, 4, 5, 6, 26, 71, 85, 86, 97, 98, 131, 174, 181, 184, 186, 191, 195, 233, 234, 237, 238, 239, 263, 264, 267, 268, 269, 289, 290, 292, 293, 294, 318, 322, 329, 333, 336, 340, 346, 349, 354, 355, 364, 367, 371, 377, 380, 385, 386, 395, 410, 413, 414, 431, 434, 448, 449, 458, 473, 482, 483, 484, 485, 500, 504, 524, 531, 539, 548, 556, 566, 574, 578, 590, 601, 616, 624, 632, 633, 645, 648, 649, 659, 664, 671, 673, 762, 786, 838, 847, 852, 856, 885, 889, 899, 902, 906, 908], "option": [4, 12, 20, 21, 26, 28, 30, 34, 47, 58, 59, 62, 63, 70, 72, 75, 76, 77, 78, 82, 106, 107, 112, 113, 165, 174, 182, 186, 194, 195, 201, 202, 205, 206, 208, 210, 214, 218, 227, 231, 237, 245, 253, 254, 267, 275, 283, 284, 292, 300, 308, 309, 317, 328, 339, 352, 370, 383, 423, 450, 455, 458, 459, 469, 473, 476, 478, 481, 482, 483, 494, 495, 497, 500, 504, 506, 524, 525, 531, 532, 536, 539, 541, 548, 549, 553, 556, 558, 563, 566, 569, 574, 575, 578, 581, 587, 590, 593, 604, 610, 615, 616, 623, 624, 625, 627, 628, 631, 633, 645, 647, 648, 649, 651, 652, 656, 658, 662, 672, 673, 674, 692, 694, 695, 739, 742, 745, 748, 755, 762, 774, 781, 785, 803, 810, 820, 823, 826, 835, 860, 863, 864, 867, 870, 904, 914], "union": [453, 461, 495, 496, 497, 508, 511, 526, 533, 536, 543, 550, 553, 560, 563, 571, 575, 582, 584, 587, 594, 596], "sequenc": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 14, 16, 17, 18, 20, 21, 25, 27, 28, 35, 36, 55, 58, 62, 66, 77, 78, 82, 95, 96, 97, 98, 100, 101, 105, 106, 107, 110, 120, 121, 124, 129, 136, 137, 144, 146, 149, 150, 167, 168, 170, 174, 186, 189, 195, 209, 222, 223, 227, 228, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 247, 249, 250, 251, 253, 254, 258, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 277, 279, 280, 281, 283, 284, 288, 289, 290, 291, 292, 293, 294, 296, 297, 300, 302, 304, 305, 306, 308, 309, 313, 320, 321, 324, 331, 332, 335, 341, 343, 344, 345, 348, 353, 357, 359, 361, 362, 363, 366, 372, 374, 375, 376, 379, 384, 388, 390, 392, 393, 394, 397, 401, 403, 404, 405, 407, 408, 409, 411, 412, 415, 416, 418, 421, 424, 429, 430, 469, 470, 471, 472, 483, 484, 485, 489, 490, 513, 519, 520, 521, 601, 603, 610, 619, 648, 656, 657, 661, 663, 665, 695, 696, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 755, 761, 763, 766, 767, 786, 803, 804, 838, 839, 850, 851, 853, 857, 858, 870, 871, 889, 892, 895, 899, 902, 904, 908], "ndarrai": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 14, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 35, 36, 55, 58, 59, 62, 63, 66, 77, 78, 82, 95, 96, 97, 98, 100, 101, 105, 106, 107, 109, 110, 120, 121, 124, 129, 136, 137, 144, 146, 149, 150, 167, 168, 170, 174, 183, 186, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 247, 249, 250, 251, 253, 254, 257, 258, 260, 263, 264, 265, 267, 268, 269, 271, 272, 275, 277, 279, 280, 281, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 300, 302, 304, 305, 306, 308, 309, 312, 313, 314, 315, 316, 317, 318, 320, 321, 324, 325, 326, 327, 328, 329, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 448, 449, 450, 455, 457, 458, 459, 463, 469, 470, 471, 472, 477, 478, 480, 481, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 499, 500, 501, 503, 504, 505, 506, 507, 509, 510, 511, 519, 520, 521, 523, 524, 525, 527, 530, 531, 532, 534, 536, 538, 539, 541, 544, 547, 548, 549, 551, 553, 555, 556, 558, 561, 563, 565, 566, 569, 572, 574, 575, 577, 578, 581, 585, 587, 589, 590, 593, 594, 597, 599, 600, 601, 602, 603, 604, 605, 607, 610, 612, 617, 618, 619, 632, 634, 638, 639, 643, 648, 650, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 665, 669, 677, 678, 682, 685, 686, 690, 695, 696, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 732, 734, 736, 746, 748, 749, 755, 757, 760, 761, 762, 763, 766, 767, 778, 783, 803, 804, 812, 814, 816, 817, 818, 819, 820, 823, 824, 825, 826, 829, 830, 838, 839, 850, 851, 852, 853, 854, 855, 856, 857, 858, 870, 871, 878, 881, 889, 892, 895, 899, 902, 904, 908, 911], "numpi": [0, 12, 14, 20, 21, 26, 32, 55, 58, 59, 62, 63, 77, 78, 82, 106, 107, 131, 142, 168, 174, 183, 186, 195, 202, 203, 204, 205, 210, 211, 220, 221, 222, 224, 226, 227, 228, 229, 231, 233, 245, 247, 253, 254, 263, 275, 277, 283, 284, 289, 300, 302, 308, 309, 315, 318, 320, 329, 331, 337, 340, 341, 343, 350, 354, 355, 356, 357, 359, 371, 372, 374, 385, 386, 387, 388, 390, 400, 401, 410, 411, 414, 415, 419, 426, 429, 435, 437, 443, 448, 449, 455, 457, 458, 459, 463, 466, 467, 468, 469, 477, 478, 480, 481, 483, 487, 494, 495, 497, 500, 501, 503, 504, 507, 509, 514, 519, 523, 524, 526, 527, 530, 531, 533, 534, 538, 539, 541, 544, 547, 548, 549, 550, 551, 555, 556, 558, 561, 565, 566, 569, 572, 574, 577, 578, 581, 585, 589, 590, 593, 594, 597, 599, 601, 604, 610, 617, 619, 626, 631, 632, 637, 639, 641, 643, 645, 647, 648, 652, 656, 657, 658, 662, 669, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 695, 708, 715, 718, 719, 724, 725, 726, 727, 748, 755, 784, 786, 812, 816, 819, 823, 829, 838, 850, 852, 853, 854, 856, 858, 870, 874, 889, 892, 895, 899, 908, 911], "shape": [0, 2, 4, 9, 12, 16, 17, 18, 20, 21, 24, 25, 26, 58, 62, 96, 101, 105, 106, 107, 109, 110, 111, 167, 168, 174, 186, 188, 204, 220, 222, 229, 233, 235, 237, 242, 245, 249, 250, 251, 253, 254, 257, 258, 263, 265, 267, 272, 275, 279, 280, 281, 283, 284, 287, 288, 289, 292, 297, 300, 304, 305, 306, 308, 309, 312, 313, 316, 317, 320, 322, 327, 328, 331, 333, 338, 339, 343, 346, 351, 352, 359, 364, 369, 370, 374, 377, 382, 383, 390, 395, 404, 411, 423, 428, 429, 434, 435, 436, 437, 452, 454, 467, 468, 469, 477, 478, 481, 483, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 517, 519, 520, 521, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 612, 616, 618, 624, 625, 627, 628, 632, 634, 637, 639, 641, 645, 647, 648, 658, 665, 667, 668, 669, 671, 675, 676, 678, 680, 686, 688, 692, 693, 695, 708, 710, 739, 742, 743, 745, 762, 785, 786, 787, 812, 816, 823, 830, 858, 868, 899, 904, 906, 908], "3": [0, 4, 5, 6, 12, 14, 18, 20, 21, 26, 37, 46, 62, 69, 71, 77, 96, 105, 106, 107, 116, 137, 174, 177, 179, 180, 181, 186, 189, 191, 195, 202, 203, 207, 214, 223, 224, 228, 231, 233, 237, 238, 245, 247, 251, 253, 254, 263, 265, 267, 268, 269, 275, 277, 281, 283, 284, 289, 292, 293, 294, 300, 302, 306, 308, 309, 318, 340, 353, 354, 384, 385, 418, 435, 443, 448, 449, 454, 458, 459, 464, 468, 469, 483, 494, 499, 500, 504, 506, 510, 513, 514, 519, 521, 524, 525, 528, 531, 532, 535, 536, 539, 541, 545, 546, 548, 549, 552, 553, 556, 558, 562, 563, 566, 569, 573, 574, 575, 578, 581, 586, 587, 590, 593, 598, 599, 601, 602, 603, 604, 610, 619, 631, 647, 648, 652, 656, 657, 658, 672, 674, 676, 684, 693, 694, 695, 708, 710, 713, 717, 718, 723, 724, 725, 726, 729, 742, 748, 755, 759, 768, 773, 781, 784, 786, 787, 803, 808, 816, 823, 829, 830, 843, 858, 859, 864, 867, 892, 895, 899, 908], "arrai": [0, 2, 4, 5, 6, 9, 12, 14, 16, 18, 20, 21, 24, 25, 26, 32, 55, 58, 59, 62, 63, 66, 68, 77, 78, 82, 94, 95, 96, 97, 98, 101, 105, 106, 107, 109, 110, 111, 142, 167, 168, 170, 174, 177, 179, 180, 181, 183, 186, 189, 195, 198, 199, 200, 202, 204, 205, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 237, 238, 239, 242, 245, 247, 249, 251, 253, 254, 257, 258, 263, 265, 267, 268, 269, 272, 275, 277, 279, 281, 283, 284, 287, 288, 289, 292, 293, 294, 297, 300, 302, 304, 306, 308, 309, 312, 313, 314, 315, 316, 317, 318, 320, 322, 325, 327, 328, 329, 331, 333, 336, 337, 338, 339, 340, 341, 343, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 364, 367, 369, 370, 371, 372, 374, 377, 380, 382, 383, 384, 385, 386, 387, 388, 390, 395, 400, 401, 402, 404, 406, 407, 409, 410, 411, 414, 415, 418, 419, 423, 426, 428, 429, 434, 435, 437, 443, 444, 448, 449, 454, 455, 457, 458, 459, 463, 464, 466, 467, 468, 469, 470, 471, 472, 477, 478, 480, 481, 483, 487, 494, 495, 497, 499, 500, 501, 503, 504, 505, 506, 507, 509, 511, 514, 518, 519, 521, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 538, 539, 541, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 560, 561, 562, 563, 565, 566, 567, 569, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 584, 585, 586, 587, 589, 590, 591, 593, 594, 596, 597, 598, 599, 601, 602, 603, 604, 610, 612, 616, 617, 618, 619, 625, 626, 631, 632, 634, 637, 639, 641, 643, 645, 647, 648, 651, 652, 653, 656, 657, 658, 660, 662, 669, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 695, 708, 715, 716, 718, 719, 720, 721, 722, 724, 725, 726, 727, 729, 746, 748, 749, 755, 760, 762, 782, 786, 812, 814, 816, 818, 819, 823, 825, 829, 830, 838, 850, 852, 853, 854, 856, 857, 858, 870, 874, 889, 892, 895, 899, 904, 908], "note": [0, 28, 31, 32, 34, 75, 77, 114, 116, 117, 120, 121, 122, 123, 126, 145, 151, 170, 174, 177, 179, 180, 181, 186, 189, 191, 195, 202, 210, 211, 214, 222, 224, 229, 231, 233, 263, 289, 398, 401, 435, 442, 455, 473, 476, 483, 484, 486, 487, 491, 492, 493, 494, 500, 511, 512, 519, 536, 553, 563, 574, 575, 587, 599, 645, 647, 648, 652, 653, 658, 665, 692, 693, 704, 740, 748, 752, 784, 785, 787, 805, 808, 823, 835, 837, 854, 858, 862, 863, 867], "overwritten": [0, 15, 26, 104, 108, 113, 233, 248, 263, 278, 289, 303, 536, 553, 563, 575, 587, 710, 762], "kyx": [0, 233, 263, 902], "real": [0, 1, 4, 5, 6, 8, 12, 14, 16, 17, 18, 19, 21, 25, 28, 37, 46, 55, 58, 62, 68, 94, 96, 97, 98, 105, 107, 110, 120, 124, 125, 126, 129, 136, 137, 145, 148, 149, 150, 165, 167, 168, 170, 174, 177, 179, 180, 181, 186, 191, 192, 195, 199, 202, 224, 233, 234, 237, 238, 239, 241, 245, 247, 249, 250, 251, 252, 254, 258, 263, 264, 267, 268, 269, 271, 275, 277, 279, 280, 281, 282, 284, 288, 289, 290, 292, 293, 294, 296, 300, 302, 304, 305, 306, 307, 309, 313, 314, 316, 317, 327, 328, 336, 338, 339, 349, 351, 352, 369, 370, 382, 383, 401, 403, 423, 428, 455, 472, 486, 487, 511, 553, 563, 600, 601, 605, 607, 616, 617, 618, 632, 637, 639, 641, 643, 648, 650, 653, 656, 659, 665, 672, 674, 678, 680, 682, 686, 688, 690, 695, 713, 714, 717, 720, 721, 722, 723, 728, 733, 734, 741, 755, 757, 758, 759, 760, 768, 773, 787, 803, 830, 838, 839, 840, 850, 851, 853, 857, 858, 859, 870, 889, 892, 895, 902, 904, 906, 908], "bool": [0, 16, 18, 23, 25, 26, 27, 55, 58, 62, 75, 77, 78, 82, 94, 113, 119, 126, 128, 132, 141, 145, 150, 152, 165, 174, 186, 195, 202, 208, 223, 227, 228, 233, 249, 251, 256, 258, 260, 263, 279, 281, 286, 288, 289, 304, 306, 311, 313, 314, 426, 443, 448, 450, 453, 456, 463, 468, 478, 495, 536, 542, 544, 551, 553, 559, 561, 563, 570, 572, 575, 583, 585, 587, 595, 597, 604, 606, 609, 610, 611, 614, 619, 620, 622, 631, 633, 636, 637, 640, 644, 648, 651, 655, 656, 657, 658, 665, 676, 679, 683, 684, 687, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 748, 755, 757, 758, 762, 763, 778, 779, 781, 782, 793, 803, 804, 810, 816, 820, 823, 826, 838, 840, 851, 855, 859, 863, 864, 872, 896, 905], "flag": [0, 12, 16, 23, 26, 27, 29, 34, 55, 58, 62, 75, 77, 78, 82, 92, 93, 94, 113, 115, 119, 126, 128, 132, 141, 145, 150, 152, 165, 174, 191, 195, 202, 208, 220, 227, 228, 233, 245, 249, 256, 260, 263, 275, 279, 286, 289, 300, 304, 311, 441, 442, 443, 445, 446, 447, 448, 450, 453, 456, 463, 468, 478, 482, 536, 542, 544, 551, 553, 559, 561, 563, 570, 572, 575, 583, 585, 587, 595, 597, 604, 610, 619, 624, 625, 626, 627, 628, 630, 631, 633, 637, 645, 648, 656, 657, 676, 684, 692, 695, 696, 746, 747, 748, 752, 755, 757, 762, 763, 764, 778, 779, 781, 782, 787, 803, 804, 808, 810, 816, 820, 823, 826, 838, 859, 864, 872, 883, 884, 896, 905], "whether": [0, 23, 24, 26, 27, 34, 55, 58, 62, 75, 77, 78, 82, 94, 109, 113, 115, 119, 126, 132, 140, 141, 150, 151, 165, 174, 177, 179, 180, 181, 186, 191, 195, 202, 208, 211, 227, 228, 233, 256, 257, 260, 263, 286, 287, 289, 311, 312, 314, 325, 336, 349, 367, 380, 400, 401, 426, 448, 450, 453, 463, 475, 478, 481, 494, 495, 497, 536, 542, 544, 551, 553, 559, 561, 563, 570, 572, 575, 583, 585, 587, 595, 597, 604, 606, 610, 611, 619, 623, 624, 626, 627, 628, 630, 631, 637, 645, 648, 651, 656, 657, 665, 676, 684, 692, 695, 696, 715, 718, 719, 724, 725, 726, 746, 748, 752, 755, 757, 758, 762, 763, 778, 779, 781, 782, 787, 804, 808, 810, 816, 820, 823, 826, 859, 864, 867, 872, 896, 905, 915], "priori": [0, 33, 55, 58, 62, 174, 191, 233, 263, 289, 604, 610, 615, 616, 619, 624, 625, 626, 627, 628, 631, 637, 645, 648, 651, 652, 656, 676, 684, 692, 693, 694, 695, 731, 734, 735, 752, 755, 762, 765, 785, 787, 788, 845], "state": [0, 13, 28, 34, 39, 40, 41, 43, 44, 45, 55, 58, 62, 94, 103, 165, 171, 172, 174, 186, 188, 192, 233, 246, 261, 263, 276, 289, 301, 314, 318, 325, 329, 336, 340, 341, 345, 349, 353, 354, 355, 357, 363, 367, 371, 372, 376, 380, 384, 385, 386, 388, 394, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 612, 615, 616, 624, 625, 627, 631, 632, 633, 634, 645, 648, 651, 656, 665, 692, 694, 695, 705, 770, 771, 772, 784, 787, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 828, 829, 830, 833, 835, 837, 838, 839, 840, 843, 845, 847, 850, 852, 853, 854, 856, 857, 858, 859, 867, 879, 881, 883, 884, 902], "vector": [0, 3, 4, 5, 6, 18, 20, 26, 29, 31, 38, 55, 58, 62, 66, 71, 94, 95, 96, 97, 98, 103, 105, 106, 118, 127, 165, 167, 168, 170, 174, 177, 178, 179, 180, 181, 186, 187, 189, 195, 209, 233, 236, 237, 238, 239, 251, 253, 263, 266, 267, 268, 269, 281, 283, 289, 291, 292, 293, 294, 306, 308, 314, 324, 325, 335, 336, 341, 348, 349, 353, 355, 357, 366, 367, 372, 379, 380, 384, 386, 388, 397, 410, 413, 414, 415, 416, 417, 418, 441, 442, 443, 445, 446, 447, 458, 459, 468, 469, 471, 479, 480, 484, 490, 491, 492, 493, 501, 503, 504, 505, 506, 509, 511, 513, 518, 524, 525, 531, 532, 536, 539, 541, 548, 549, 553, 556, 558, 563, 566, 567, 569, 574, 575, 578, 579, 581, 587, 590, 591, 593, 601, 612, 615, 616, 617, 618, 619, 625, 632, 633, 634, 637, 641, 643, 645, 647, 648, 651, 652, 656, 665, 672, 674, 680, 682, 684, 688, 690, 694, 708, 710, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 732, 734, 736, 746, 747, 748, 749, 750, 751, 755, 757, 758, 760, 762, 764, 769, 783, 787, 812, 813, 814, 816, 817, 818, 819, 820, 824, 825, 826, 830, 835, 838, 843, 852, 856, 867, 876, 877, 878, 879, 880, 881, 883, 884, 892, 895, 899, 902, 908, 911], "jacobian": [0, 4, 5, 6, 94, 96, 97, 98, 176, 178, 186, 233, 237, 238, 239, 263, 267, 268, 269, 289, 292, 293, 294, 318, 329, 340, 341, 353, 354, 355, 356, 357, 371, 372, 384, 385, 386, 387, 388, 398, 410, 414, 415, 417, 418, 419, 444, 447, 448, 449, 458, 504, 524, 531, 539, 546, 548, 556, 566, 575, 578, 587, 590, 631, 632, 652, 812, 817, 824, 852, 856, 902], "contain": [0, 4, 9, 10, 26, 55, 58, 62, 68, 70, 75, 77, 78, 81, 83, 84, 85, 86, 87, 89, 90, 94, 96, 101, 102, 111, 112, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 132, 141, 148, 150, 152, 165, 170, 174, 183, 185, 186, 191, 193, 195, 202, 205, 206, 207, 208, 209, 214, 226, 227, 228, 233, 237, 242, 243, 259, 263, 267, 272, 273, 289, 292, 297, 298, 314, 316, 317, 320, 325, 327, 328, 331, 336, 338, 339, 343, 349, 351, 352, 359, 367, 369, 370, 374, 380, 382, 383, 390, 398, 411, 417, 423, 428, 429, 436, 450, 451, 453, 455, 456, 466, 467, 469, 475, 483, 486, 487, 494, 495, 497, 500, 514, 522, 529, 536, 537, 546, 553, 554, 563, 564, 575, 576, 587, 588, 600, 604, 605, 610, 616, 619, 626, 631, 637, 647, 648, 650, 656, 657, 658, 659, 664, 665, 668, 670, 671, 674, 676, 684, 692, 693, 695, 704, 713, 718, 737, 739, 740, 741, 742, 743, 744, 745, 753, 755, 758, 762, 782, 783, 784, 785, 786, 787, 805, 816, 820, 823, 826, 830, 852, 856, 859, 864, 889, 891, 894, 898, 899, 901, 907, 908, 910, 911], "six": [0, 263], "order": [0, 2, 3, 4, 5, 6, 13, 14, 26, 32, 55, 58, 62, 68, 69, 77, 78, 88, 93, 94, 97, 98, 103, 113, 140, 151, 172, 174, 177, 179, 180, 181, 186, 191, 198, 199, 202, 207, 217, 233, 236, 237, 238, 239, 246, 247, 263, 266, 267, 268, 269, 276, 277, 289, 291, 292, 293, 294, 301, 302, 314, 324, 325, 335, 336, 341, 348, 349, 357, 366, 367, 372, 379, 380, 388, 397, 415, 416, 436, 450, 453, 455, 475, 488, 600, 628, 648, 652, 656, 659, 708, 713, 717, 723, 752, 753, 760, 784, 786, 787, 801, 818, 820, 825, 826, 830, 840, 843, 859, 866, 904], "ani": [0, 3, 4, 17, 18, 48, 49, 50, 51, 52, 53, 54, 55, 58, 62, 69, 77, 81, 83, 84, 85, 86, 89, 90, 91, 105, 116, 117, 122, 123, 126, 151, 167, 174, 177, 179, 180, 181, 183, 185, 186, 195, 202, 206, 214, 215, 216, 220, 222, 223, 229, 233, 236, 237, 250, 251, 262, 263, 266, 267, 280, 281, 291, 292, 305, 306, 362, 393, 421, 438, 450, 452, 454, 455, 467, 469, 475, 483, 486, 487, 500, 505, 513, 520, 574, 601, 604, 610, 619, 624, 627, 631, 637, 645, 647, 648, 649, 656, 658, 659, 664, 673, 674, 676, 684, 692, 695, 704, 707, 708, 752, 755, 759, 760, 775, 776, 777, 784, 786, 787, 791, 795, 796, 799, 803, 808, 823, 830, 859], "independ": [0, 174, 186, 233, 263, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 423, 428, 612, 634, 716, 727], "either": [0, 4, 12, 14, 20, 21, 24, 28, 34, 37, 46, 58, 70, 72, 75, 77, 78, 81, 82, 88, 93, 106, 107, 109, 114, 116, 118, 124, 129, 135, 136, 137, 149, 150, 151, 165, 167, 174, 177, 179, 180, 181, 186, 189, 195, 201, 207, 208, 212, 233, 237, 245, 247, 253, 254, 257, 263, 267, 275, 277, 283, 284, 287, 289, 292, 300, 302, 308, 309, 312, 316, 317, 325, 326, 327, 328, 336, 338, 339, 341, 349, 351, 352, 357, 367, 368, 369, 370, 372, 380, 381, 382, 383, 388, 400, 401, 415, 423, 425, 428, 436, 441, 442, 445, 446, 447, 469, 476, 480, 483, 486, 487, 488, 500, 501, 511, 536, 546, 553, 563, 575, 587, 607, 619, 624, 626, 639, 645, 647, 648, 653, 665, 672, 678, 686, 692, 695, 697, 704, 714, 728, 738, 739, 748, 758, 759, 768, 773, 786, 787, 816, 823, 830, 847, 859, 863, 869, 889, 895, 912, 915], "singl": [0, 4, 14, 26, 68, 71, 77, 78, 82, 113, 114, 116, 117, 125, 135, 138, 146, 150, 170, 174, 175, 187, 188, 189, 191, 201, 202, 208, 220, 233, 237, 247, 263, 267, 277, 289, 292, 302, 437, 438, 457, 469, 478, 495, 503, 518, 519, 536, 538, 547, 553, 555, 563, 565, 575, 577, 587, 589, 603, 607, 619, 624, 625, 626, 629, 645, 647, 648, 649, 651, 653, 673, 676, 692, 703, 704, 723, 740, 745, 752, 753, 755, 761, 762, 779, 781, 784, 801, 810, 816, 830, 842, 845, 849, 852, 856, 864, 869, 902], "onli": [0, 5, 12, 18, 19, 20, 21, 26, 28, 32, 34, 55, 58, 62, 70, 77, 78, 82, 87, 88, 93, 94, 105, 106, 107, 115, 122, 123, 128, 145, 152, 153, 174, 175, 177, 179, 180, 181, 186, 187, 188, 191, 192, 223, 233, 238, 245, 251, 252, 253, 254, 263, 268, 275, 281, 282, 283, 284, 289, 293, 300, 306, 307, 308, 309, 314, 325, 336, 349, 353, 362, 367, 380, 384, 393, 418, 421, 438, 442, 450, 453, 455, 460, 469, 472, 473, 476, 481, 483, 493, 494, 495, 497, 500, 507, 519, 520, 529, 542, 546, 553, 559, 563, 570, 583, 595, 600, 604, 609, 610, 612, 614, 615, 619, 622, 624, 625, 626, 627, 628, 630, 631, 634, 636, 637, 641, 644, 645, 648, 652, 653, 655, 658, 659, 662, 665, 671, 672, 674, 676, 680, 683, 684, 688, 691, 692, 694, 695, 708, 723, 738, 740, 745, 746, 748, 752, 754, 755, 762, 784, 787, 789, 801, 805, 807, 808, 809, 830, 834, 844, 848, 859, 860, 867, 876, 877, 879, 880, 882, 883, 884, 902, 904], "valid": [0, 27, 77, 94, 111, 201, 218, 223, 233, 260, 263, 289, 448, 449, 494, 495, 496, 497, 543, 560, 571, 584, 596, 600, 610, 615, 631, 648, 656, 696, 704, 763, 804, 830, 831, 876, 879], "multipl": [0, 3, 4, 5, 12, 18, 20, 21, 28, 31, 32, 66, 68, 93, 105, 106, 107, 113, 150, 154, 155, 156, 157, 159, 160, 161, 168, 170, 174, 184, 186, 187, 188, 189, 224, 233, 236, 237, 238, 245, 251, 253, 254, 263, 266, 267, 268, 275, 281, 283, 284, 289, 291, 292, 293, 300, 306, 308, 309, 426, 438, 457, 469, 475, 497, 503, 538, 547, 555, 565, 577, 589, 623, 628, 637, 645, 648, 659, 692, 708, 712, 715, 716, 717, 718, 719, 724, 725, 726, 727, 744, 745, 752, 755, 784, 786, 787, 807, 812, 840, 844, 866, 869, 916], "str": [0, 13, 24, 27, 68, 73, 74, 75, 77, 78, 82, 93, 94, 103, 109, 112, 113, 119, 122, 123, 126, 130, 132, 135, 138, 141, 151, 174, 195, 196, 233, 246, 257, 260, 263, 276, 287, 289, 301, 312, 483, 604, 610, 619, 631, 637, 648, 659, 664, 665, 670, 671, 672, 674, 676, 684, 694, 696, 699, 713, 717, 723, 755, 763, 779, 780, 781, 782, 803, 804, 810, 816, 821, 823, 827, 830, 833, 859, 861, 863, 864, 875, 876, 879, 882, 883, 884, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 911, 912, 915, 918], "along": [0, 2, 9, 31, 32, 70, 101, 165, 170, 174, 177, 179, 180, 186, 191, 209, 225, 233, 235, 242, 263, 265, 272, 289, 297, 319, 330, 342, 358, 373, 389, 409, 435, 450, 453, 458, 459, 500, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 610, 615, 616, 617, 625, 627, 628, 630, 631, 632, 633, 637, 648, 651, 718, 724, 728, 786, 787, 838, 848, 858], "compon": [0, 4, 20, 26, 106, 137, 138, 170, 174, 175, 186, 191, 192, 198, 199, 202, 206, 209, 233, 237, 253, 263, 267, 283, 289, 292, 308, 325, 353, 360, 367, 380, 384, 391, 401, 418, 420, 435, 443, 469, 481, 500, 625, 627, 648, 656, 692, 694, 708, 755, 756, 762, 808, 818, 820, 825, 826, 830, 852, 856, 889, 892, 895, 899, 902, 904, 908], "decent": [0, 191, 233, 455, 616, 624, 627, 645], "int": [0, 4, 5, 6, 9, 11, 12, 18, 19, 20, 21, 35, 36, 47, 58, 62, 88, 94, 97, 98, 101, 105, 106, 107, 116, 126, 147, 148, 151, 163, 174, 183, 186, 202, 203, 209, 220, 224, 228, 233, 237, 238, 239, 242, 244, 245, 251, 252, 253, 254, 263, 267, 268, 269, 272, 274, 275, 281, 282, 283, 284, 289, 292, 293, 294, 297, 299, 300, 306, 307, 308, 309, 314, 317, 322, 325, 328, 333, 336, 339, 346, 349, 352, 364, 367, 370, 377, 380, 383, 395, 413, 423, 432, 434, 435, 450, 455, 467, 472, 475, 479, 480, 486, 487, 500, 529, 574, 582, 594, 601, 604, 607, 609, 612, 614, 616, 622, 631, 634, 636, 637, 639, 641, 643, 644, 648, 650, 652, 653, 655, 656, 657, 658, 659, 665, 674, 678, 680, 682, 683, 684, 686, 688, 690, 691, 692, 697, 698, 699, 700, 701, 702, 703, 706, 755, 757, 758, 760, 761, 766, 767, 774, 778, 783, 800, 801, 802, 803, 830, 831, 832, 838, 859, 871, 887, 889, 892, 895, 902, 904, 908, 912, 915], "number": [0, 6, 11, 26, 27, 35, 36, 47, 55, 58, 59, 62, 63, 78, 94, 96, 97, 98, 114, 116, 117, 126, 142, 147, 148, 151, 162, 163, 166, 169, 174, 176, 178, 184, 186, 187, 189, 190, 191, 195, 196, 202, 205, 209, 224, 225, 228, 233, 239, 244, 263, 269, 274, 289, 294, 299, 314, 316, 317, 325, 327, 328, 336, 338, 339, 341, 349, 351, 352, 355, 357, 367, 369, 370, 372, 380, 382, 383, 386, 388, 400, 410, 413, 414, 415, 423, 428, 432, 436, 448, 449, 450, 455, 456, 463, 465, 469, 472, 475, 477, 478, 481, 495, 497, 507, 536, 544, 551, 553, 561, 563, 572, 574, 575, 585, 587, 597, 601, 604, 616, 624, 625, 626, 627, 628, 629, 630, 631, 633, 637, 645, 647, 648, 652, 656, 657, 658, 659, 665, 672, 692, 694, 695, 696, 704, 708, 715, 719, 724, 725, 737, 741, 745, 752, 755, 757, 758, 760, 761, 762, 763, 766, 767, 774, 778, 783, 784, 786, 787, 788, 803, 804, 807, 808, 812, 830, 831, 832, 833, 852, 856, 858, 862, 867, 868, 871, 887, 889, 892, 895, 902, 904, 908], "row": [0, 4, 9, 19, 26, 32, 47, 62, 77, 94, 101, 135, 174, 178, 186, 202, 203, 206, 207, 209, 211, 212, 213, 214, 225, 226, 233, 237, 242, 252, 263, 267, 268, 272, 282, 289, 292, 293, 297, 307, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 423, 428, 448, 449, 467, 469, 472, 507, 536, 553, 563, 575, 587, 603, 604, 610, 616, 619, 631, 632, 637, 648, 658, 684, 694, 755, 762, 774, 781, 830, 889, 892, 895, 902, 908], "activ": [0, 94, 139, 153, 195, 231, 233, 263, 289, 662, 665, 786], "column": [0, 4, 9, 20, 21, 26, 32, 47, 55, 58, 62, 66, 94, 95, 101, 106, 107, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 129, 130, 131, 132, 134, 136, 137, 140, 141, 143, 146, 149, 150, 151, 165, 168, 170, 174, 178, 182, 186, 202, 203, 207, 233, 237, 242, 253, 254, 263, 267, 268, 272, 283, 284, 289, 292, 293, 297, 308, 309, 416, 458, 459, 466, 494, 495, 497, 499, 501, 504, 505, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 603, 645, 648, 656, 658, 694, 695, 715, 716, 717, 718, 719, 725, 726, 727, 746, 748, 755, 760, 762, 774, 781, 808, 833, 889, 892, 895, 902, 908], "boolean": [0, 26, 55, 58, 62, 75, 77, 94, 115, 119, 132, 141, 150, 174, 202, 208, 223, 233, 263, 289, 443, 448, 449, 463, 468, 469, 495, 497, 544, 551, 561, 572, 585, 597, 609, 614, 622, 626, 628, 630, 636, 637, 644, 648, 653, 655, 658, 683, 684, 691, 692, 697, 698, 699, 700, 701, 702, 706, 746, 755, 757, 758, 760, 761, 762, 782, 803, 808, 816, 823, 838, 864, 870], "determin": [0, 3, 26, 29, 55, 58, 59, 62, 63, 71, 94, 147, 151, 174, 177, 179, 180, 181, 182, 186, 195, 201, 208, 233, 236, 263, 266, 289, 291, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 400, 423, 428, 432, 433, 459, 469, 475, 478, 481, 483, 487, 494, 499, 500, 506, 507, 525, 532, 541, 549, 558, 569, 574, 581, 593, 601, 603, 605, 606, 607, 616, 617, 619, 625, 628, 629, 641, 645, 647, 650, 651, 653, 659, 665, 680, 688, 695, 697, 745, 752, 764, 786, 787, 830, 835, 889], "append": [0, 4, 94, 186, 233, 237, 263, 267, 289, 292, 355, 356, 386, 387, 410, 419, 671, 784], "ident": [0, 4, 55, 58, 62, 70, 94, 174, 233, 237, 263, 267, 289, 292, 450, 483, 518, 575, 587, 651, 652, 715, 718, 719, 725, 726, 749, 786, 850, 854], "return": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 30, 31, 32, 34, 35, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 77, 79, 80, 82, 83, 84, 86, 87, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 119, 120, 121, 122, 123, 124, 125, 127, 129, 132, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 165, 166, 167, 168, 169, 170, 172, 174, 178, 182, 186, 195, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 441, 442, 445, 446, 447, 448, 449, 453, 457, 458, 459, 463, 466, 467, 468, 469, 472, 475, 477, 478, 479, 480, 481, 483, 486, 487, 491, 492, 493, 494, 495, 497, 499, 500, 501, 503, 504, 505, 506, 507, 509, 511, 512, 523, 524, 525, 527, 530, 531, 532, 534, 536, 538, 539, 541, 542, 544, 547, 548, 549, 551, 553, 555, 556, 558, 559, 561, 563, 565, 566, 569, 570, 572, 574, 575, 577, 578, 581, 582, 583, 585, 587, 589, 590, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 605, 607, 609, 612, 614, 617, 618, 622, 632, 634, 636, 637, 638, 639, 641, 643, 644, 648, 650, 652, 653, 655, 657, 658, 659, 660, 662, 665, 669, 676, 677, 678, 680, 682, 683, 684, 685, 686, 688, 690, 691, 695, 704, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 748, 749, 750, 752, 755, 756, 757, 759, 760, 761, 762, 766, 783, 784, 787, 793, 795, 796, 799, 800, 801, 812, 814, 815, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 834, 835, 836, 838, 839, 840, 847, 850, 851, 852, 853, 855, 856, 857, 859, 867, 870, 871, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 896, 905, 911, 913, 916, 917, 918], "compute_jacobian": [0, 58, 94, 95, 174, 178, 186, 233, 263, 289, 341, 357, 372, 388, 413, 415, 416, 417], "current": [0, 1, 3, 9, 10, 18, 24, 25, 26, 34, 47, 58, 59, 63, 73, 75, 91, 94, 95, 101, 102, 105, 109, 110, 113, 114, 130, 151, 165, 174, 178, 181, 186, 191, 233, 234, 236, 242, 243, 251, 257, 258, 259, 263, 264, 266, 272, 273, 281, 287, 288, 289, 290, 291, 297, 298, 306, 312, 313, 324, 335, 341, 348, 357, 366, 372, 379, 388, 397, 398, 400, 415, 416, 438, 444, 450, 453, 455, 456, 458, 459, 461, 464, 466, 467, 468, 475, 481, 483, 484, 485, 486, 487, 489, 490, 494, 499, 500, 502, 504, 505, 506, 507, 514, 519, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 575, 578, 581, 582, 587, 590, 593, 594, 599, 601, 612, 616, 627, 631, 632, 633, 634, 640, 645, 647, 648, 649, 650, 652, 653, 659, 665, 668, 671, 673, 676, 695, 704, 708, 710, 711, 738, 739, 751, 752, 755, 762, 774, 786, 803, 815, 816, 817, 820, 822, 823, 824, 826, 828, 830, 835, 845, 849, 852, 853, 856, 867, 872, 882, 883, 884, 894, 898, 901, 902, 907, 910], "process": [0, 5, 6, 24, 26, 33, 41, 47, 55, 58, 62, 70, 77, 83, 84, 85, 86, 87, 89, 90, 91, 94, 97, 98, 109, 174, 176, 184, 185, 186, 188, 191, 192, 195, 202, 207, 210, 211, 214, 215, 216, 224, 233, 238, 239, 257, 259, 260, 261, 263, 268, 269, 287, 289, 293, 294, 312, 401, 426, 463, 544, 551, 561, 572, 585, 597, 604, 606, 609, 610, 611, 614, 615, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 631, 633, 636, 637, 640, 644, 645, 647, 648, 651, 653, 655, 659, 665, 666, 668, 676, 679, 683, 684, 687, 691, 692, 693, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 739, 744, 752, 753, 755, 757, 758, 760, 762, 765, 771, 774, 784, 785, 786, 787, 801, 803, 807, 810, 811, 816, 817, 823, 824, 830, 835, 840, 842, 844, 847, 848, 859, 860, 862, 864, 889], "2x3": [0, 233, 263, 289, 908], "convers": [0, 16, 17, 18, 25, 118, 151, 168, 174, 182, 233, 235, 249, 250, 251, 258, 263, 279, 280, 281, 288, 289, 304, 305, 306, 313, 435, 443, 708, 756, 803, 904, 906], "gnomic": [0, 2, 4, 5, 6, 8, 12, 16, 17, 18, 19, 24, 25, 100, 109, 110, 177, 178, 179, 180, 181, 233, 235, 237, 238, 241, 245, 249, 250, 251, 252, 257, 258, 263, 265, 267, 268, 269, 271, 275, 279, 280, 281, 282, 287, 288, 289, 292, 293, 294, 296, 300, 304, 305, 306, 307, 312, 313], "It": [0, 4, 10, 17, 26, 70, 78, 81, 88, 91, 94, 102, 114, 116, 117, 119, 128, 139, 142, 153, 172, 174, 186, 187, 189, 191, 192, 195, 202, 211, 225, 228, 230, 231, 233, 237, 243, 250, 259, 263, 267, 273, 280, 289, 292, 298, 305, 318, 329, 340, 354, 371, 385, 426, 436, 437, 450, 451, 453, 456, 463, 483, 486, 492, 499, 500, 513, 514, 517, 519, 522, 529, 536, 542, 544, 551, 553, 559, 561, 563, 570, 572, 583, 585, 595, 597, 603, 610, 619, 627, 630, 631, 637, 641, 646, 657, 661, 663, 665, 666, 668, 672, 676, 680, 684, 688, 693, 695, 699, 704, 708, 719, 725, 735, 741, 744, 752, 753, 755, 757, 762, 784, 786, 788, 810, 814, 818, 825, 829, 830, 834, 845, 848, 852, 856, 870, 888, 889, 895, 904, 916], "mathbf": [0, 2, 3, 4, 5, 6, 16, 18, 58, 68, 93, 95, 96, 97, 98, 168, 174, 177, 178, 179, 180, 181, 186, 189, 233, 235, 236, 237, 238, 239, 249, 251, 263, 265, 266, 267, 268, 269, 279, 281, 289, 291, 292, 293, 294, 304, 306, 318, 325, 329, 340, 354, 355, 356, 371, 385, 386, 387, 405, 410, 414, 419, 441, 442, 445, 446, 447, 448, 449, 500, 504, 505, 506, 507, 508, 602, 625, 632, 652, 712, 714, 715, 716, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 746, 748, 749, 751, 756, 812, 816, 817, 824, 870], "k": [0, 4, 6, 16, 58, 62, 68, 174, 233, 237, 249, 263, 267, 268, 269, 279, 289, 292, 293, 294, 304, 436, 455, 477, 902, 908], "left": [0, 2, 4, 5, 6, 16, 18, 48, 49, 50, 51, 52, 53, 54, 55, 58, 68, 113, 151, 167, 168, 170, 174, 177, 179, 180, 181, 186, 189, 204, 216, 220, 222, 228, 229, 233, 235, 237, 238, 249, 251, 262, 263, 265, 267, 268, 269, 279, 281, 289, 292, 293, 294, 304, 306, 314, 318, 320, 321, 325, 329, 331, 332, 340, 343, 344, 349, 354, 356, 359, 361, 371, 374, 375, 380, 385, 387, 390, 392, 419, 436, 442, 447, 448, 449, 450, 453, 459, 475, 487, 500, 504, 506, 507, 525, 532, 541, 549, 558, 569, 574, 581, 593, 601, 602, 604, 624, 625, 627, 637, 645, 648, 652, 656, 657, 672, 674, 676, 684, 707, 712, 714, 715, 716, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 749, 751, 752, 755, 775, 776, 777, 782, 803, 812, 864, 870, 891, 894, 898, 901, 907, 910], "begin": [0, 2, 4, 5, 6, 16, 18, 58, 68, 70, 94, 168, 174, 176, 177, 179, 180, 181, 186, 189, 228, 231, 233, 235, 237, 238, 249, 251, 263, 265, 267, 268, 269, 279, 281, 289, 292, 293, 294, 304, 306, 318, 325, 329, 340, 354, 356, 371, 385, 387, 419, 448, 449, 455, 458, 459, 469, 500, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 602, 610, 618, 625, 628, 630, 631, 645, 657, 659, 692, 715, 716, 718, 720, 721, 722, 724, 725, 727, 753, 784, 786, 787, 812], "ccc": [0, 4, 5, 68, 174, 177, 179, 180, 181, 186, 233, 237, 238, 263, 267, 268, 289, 292, 293, 356, 387, 419, 448, 449, 500, 602, 720, 721, 722, 727, 812], "p_x": [0, 4, 177, 179, 180, 181, 233, 237, 263, 267, 289, 292], "0": [0, 4, 5, 6, 8, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 25, 31, 32, 68, 70, 73, 77, 94, 96, 97, 98, 101, 105, 106, 107, 110, 113, 116, 120, 124, 126, 129, 135, 136, 137, 149, 150, 151, 155, 158, 164, 170, 174, 177, 179, 180, 181, 186, 191, 198, 199, 200, 202, 204, 211, 213, 215, 216, 217, 219, 220, 222, 223, 224, 229, 233, 237, 238, 239, 241, 242, 244, 245, 247, 249, 250, 251, 252, 253, 254, 258, 263, 267, 268, 269, 271, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 288, 289, 292, 293, 294, 296, 297, 299, 300, 302, 304, 305, 306, 307, 308, 309, 313, 314, 316, 317, 319, 325, 327, 328, 330, 336, 338, 339, 342, 349, 351, 352, 358, 367, 369, 370, 373, 380, 382, 383, 389, 423, 428, 435, 441, 442, 445, 446, 447, 448, 450, 455, 472, 479, 483, 486, 487, 494, 499, 500, 501, 504, 506, 507, 511, 579, 591, 602, 603, 604, 605, 607, 625, 631, 632, 637, 648, 650, 653, 656, 658, 666, 672, 674, 684, 692, 694, 695, 708, 714, 715, 718, 719, 720, 721, 722, 725, 727, 728, 729, 730, 737, 739, 741, 745, 752, 757, 758, 759, 760, 784, 785, 786, 787, 801, 803, 808, 812, 816, 823, 838, 858, 873, 902, 904, 906, 908], "p_y": [0, 4, 177, 179, 180, 181, 233, 237, 263, 267, 289, 292], "end": [0, 2, 4, 5, 6, 16, 18, 58, 68, 168, 174, 177, 179, 180, 181, 186, 189, 228, 231, 233, 235, 237, 238, 249, 251, 263, 265, 267, 268, 269, 279, 281, 289, 292, 293, 294, 304, 306, 318, 325, 329, 340, 354, 356, 371, 385, 387, 417, 419, 448, 449, 455, 500, 504, 506, 602, 625, 647, 657, 664, 665, 714, 715, 716, 718, 720, 721, 722, 724, 725, 727, 728, 748, 809, 812, 840, 848, 875, 899, 908], "right": [0, 2, 4, 5, 6, 16, 18, 26, 58, 68, 77, 114, 124, 125, 129, 130, 136, 137, 142, 147, 148, 149, 150, 151, 165, 167, 168, 170, 171, 174, 177, 179, 180, 181, 182, 186, 189, 228, 233, 235, 237, 238, 249, 251, 263, 265, 267, 268, 269, 279, 281, 289, 292, 293, 294, 304, 306, 314, 318, 320, 321, 325, 329, 331, 332, 340, 343, 344, 349, 354, 356, 359, 361, 371, 374, 375, 380, 385, 387, 390, 392, 419, 435, 436, 442, 447, 448, 449, 450, 453, 487, 500, 504, 506, 507, 574, 601, 602, 625, 652, 657, 698, 700, 701, 702, 706, 714, 715, 716, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 739, 749, 751, 756, 757, 758, 759, 762, 784, 786, 807, 808, 812, 859, 864, 870, 902], "polynomi": [0, 14, 181, 186, 233, 247, 263, 277, 289, 302, 325, 367, 380], "function": [0, 2, 10, 24, 26, 31, 32, 34, 46, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 89, 90, 92, 93, 94, 102, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 125, 126, 127, 132, 134, 135, 139, 141, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 191, 192, 193, 195, 202, 203, 204, 208, 209, 210, 212, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 243, 257, 260, 263, 265, 273, 287, 289, 298, 312, 314, 321, 325, 332, 336, 341, 344, 345, 349, 355, 356, 357, 361, 363, 367, 372, 375, 376, 380, 386, 387, 388, 392, 394, 398, 400, 401, 405, 408, 410, 412, 413, 414, 415, 419, 422, 424, 426, 427, 430, 432, 435, 436, 437, 438, 440, 443, 459, 465, 466, 467, 476, 478, 483, 488, 491, 493, 499, 511, 512, 513, 540, 541, 549, 557, 558, 568, 569, 574, 580, 581, 592, 593, 599, 601, 602, 603, 604, 610, 616, 619, 624, 626, 629, 630, 631, 637, 645, 646, 647, 648, 651, 652, 656, 657, 658, 659, 676, 684, 692, 704, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 738, 739, 752, 754, 756, 762, 773, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 803, 808, 812, 817, 824, 829, 830, 835, 837, 839, 840, 842, 843, 847, 848, 849, 854, 863, 864, 865, 867, 868, 870, 875, 876, 879, 882, 883, 884, 885, 886, 887, 891, 894, 898, 901, 907, 910, 911], "temperatur": [0, 1, 4, 5, 6, 8, 12, 14, 16, 17, 18, 19, 21, 25, 26, 32, 55, 57, 58, 61, 62, 65, 68, 69, 70, 71, 73, 75, 96, 97, 98, 105, 107, 110, 174, 177, 179, 180, 181, 195, 233, 234, 237, 238, 239, 241, 245, 247, 249, 250, 251, 252, 254, 258, 263, 264, 267, 268, 269, 271, 275, 277, 279, 280, 281, 282, 284, 288, 289, 290, 292, 293, 294, 296, 300, 302, 304, 305, 306, 307, 309, 313, 472, 486, 487, 605, 607, 617, 618, 632, 639, 641, 643, 650, 653, 659, 672, 678, 680, 682, 686, 688, 690, 692, 757, 758, 760, 780, 786], "estimate_multiple_misalign": [0, 12, 233, 245, 263, 275, 289, 300], "being": [0, 4, 5, 12, 18, 20, 21, 26, 55, 58, 62, 75, 77, 78, 94, 96, 105, 106, 107, 146, 151, 174, 178, 183, 184, 186, 191, 192, 202, 206, 209, 212, 214, 215, 216, 224, 233, 237, 238, 245, 251, 253, 254, 263, 267, 268, 275, 281, 283, 284, 289, 292, 293, 300, 306, 308, 309, 314, 316, 317, 321, 325, 327, 328, 332, 336, 338, 339, 345, 349, 351, 352, 355, 363, 367, 369, 370, 376, 380, 382, 383, 386, 394, 401, 408, 410, 412, 414, 423, 426, 428, 440, 450, 469, 472, 475, 486, 487, 500, 518, 575, 587, 605, 607, 625, 627, 628, 631, 632, 637, 646, 647, 648, 650, 651, 653, 665, 692, 693, 699, 703, 708, 739, 745, 752, 755, 757, 758, 760, 786, 789, 808, 816, 817, 823, 824, 830, 835, 842, 854, 867, 899, 915], "per": [0, 73, 114, 233, 263, 289, 469, 472, 474, 492, 493, 604, 612, 634, 648, 652, 656, 738, 786, 830, 862, 881, 899], "true": [0, 4, 9, 12, 18, 25, 26, 27, 29, 30, 34, 41, 50, 55, 56, 58, 60, 62, 75, 77, 78, 80, 82, 84, 85, 86, 90, 93, 101, 113, 119, 124, 128, 129, 132, 136, 141, 149, 150, 165, 174, 185, 186, 191, 195, 202, 203, 206, 208, 210, 214, 223, 227, 228, 233, 237, 242, 245, 251, 258, 260, 263, 267, 272, 275, 281, 288, 289, 292, 297, 300, 306, 313, 314, 321, 325, 332, 336, 341, 349, 357, 367, 372, 380, 388, 398, 400, 401, 407, 409, 415, 426, 450, 453, 456, 463, 468, 495, 497, 536, 542, 544, 551, 553, 559, 561, 563, 570, 572, 575, 583, 585, 587, 595, 597, 604, 609, 610, 614, 619, 622, 626, 627, 631, 633, 636, 637, 644, 648, 653, 655, 656, 657, 658, 676, 683, 691, 692, 696, 698, 746, 748, 752, 755, 762, 763, 764, 771, 776, 779, 781, 782, 785, 786, 787, 803, 804, 810, 820, 826, 838, 840, 851, 855, 859, 860, 863, 864, 870, 872, 896, 905], "one": [0, 4, 26, 31, 32, 47, 55, 57, 66, 68, 70, 71, 73, 75, 77, 78, 82, 119, 126, 128, 151, 174, 176, 181, 184, 186, 191, 195, 201, 204, 209, 213, 218, 233, 237, 259, 263, 267, 289, 292, 336, 349, 367, 380, 400, 406, 413, 455, 460, 462, 469, 483, 506, 542, 559, 570, 574, 583, 595, 601, 604, 608, 613, 619, 621, 623, 624, 625, 629, 635, 637, 642, 645, 647, 648, 652, 654, 656, 659, 674, 676, 681, 684, 689, 692, 695, 704, 715, 719, 724, 725, 738, 739, 740, 741, 742, 743, 744, 745, 748, 751, 752, 753, 755, 762, 774, 782, 783, 784, 801, 809, 816, 823, 830, 835, 843, 859, 867, 875, 876, 877, 878, 879, 880, 881, 904, 912], "through": [0, 3, 10, 15, 18, 26, 37, 46, 75, 82, 96, 102, 104, 105, 108, 152, 153, 154, 155, 156, 157, 159, 160, 161, 172, 174, 177, 179, 180, 181, 182, 184, 191, 192, 201, 210, 214, 233, 236, 243, 248, 251, 263, 266, 273, 278, 281, 289, 291, 298, 303, 306, 435, 436, 438, 439, 455, 456, 461, 463, 464, 466, 467, 469, 472, 481, 495, 497, 507, 536, 544, 551, 553, 561, 563, 572, 575, 585, 587, 597, 603, 605, 607, 610, 615, 616, 617, 624, 625, 627, 628, 630, 631, 632, 637, 645, 647, 648, 649, 650, 651, 653, 656, 658, 659, 662, 664, 665, 669, 673, 674, 684, 692, 693, 699, 703, 704, 738, 745, 751, 752, 753, 755, 762, 768, 773, 784, 787, 811, 813, 823, 830, 835, 840, 842, 844, 863, 864, 867, 875, 876, 879, 889, 892, 895, 902, 904, 908], "typic": [0, 26, 34, 55, 56, 57, 58, 61, 62, 65, 66, 77, 114, 125, 126, 151, 174, 177, 178, 179, 180, 181, 182, 186, 187, 188, 191, 195, 202, 213, 214, 233, 263, 289, 314, 325, 336, 341, 349, 353, 357, 367, 372, 380, 384, 388, 398, 413, 415, 417, 418, 432, 433, 435, 436, 439, 440, 443, 450, 453, 455, 456, 459, 469, 475, 483, 487, 494, 500, 505, 506, 512, 515, 518, 525, 532, 541, 549, 558, 569, 574, 575, 581, 582, 587, 593, 594, 601, 604, 610, 619, 620, 624, 625, 626, 627, 628, 629, 630, 631, 637, 645, 646, 647, 648, 649, 652, 653, 656, 658, 659, 662, 665, 666, 667, 668, 672, 673, 676, 679, 684, 692, 693, 694, 695, 699, 704, 745, 752, 754, 755, 762, 778, 781, 782, 784, 786, 806, 830, 847, 848, 859, 867, 889, 892, 895, 899, 902, 904, 908], "shouldn": [0, 26, 174, 186, 233, 263, 289, 407, 409, 475, 480, 553, 563, 762], "t": [0, 2, 4, 5, 6, 9, 12, 14, 18, 26, 28, 29, 31, 32, 57, 58, 68, 75, 77, 101, 112, 114, 115, 119, 126, 128, 132, 141, 152, 168, 174, 177, 178, 179, 180, 181, 182, 186, 189, 191, 195, 231, 233, 235, 237, 238, 242, 245, 247, 251, 263, 265, 267, 268, 269, 272, 275, 277, 281, 289, 292, 293, 294, 297, 300, 302, 306, 314, 325, 329, 336, 349, 355, 367, 371, 380, 386, 400, 401, 407, 409, 410, 414, 422, 438, 439, 440, 441, 442, 445, 446, 447, 448, 453, 455, 467, 469, 475, 478, 480, 483, 492, 493, 494, 500, 504, 505, 506, 507, 508, 512, 517, 519, 520, 546, 553, 563, 602, 604, 610, 616, 619, 623, 624, 625, 627, 628, 629, 631, 637, 645, 646, 648, 651, 652, 659, 665, 684, 692, 694, 708, 715, 716, 718, 724, 726, 728, 737, 738, 739, 741, 744, 746, 749, 751, 755, 757, 762, 764, 784, 785, 786, 787, 817, 824, 830, 840, 845, 848, 863, 866, 867, 885, 889, 899, 902], "directli": [0, 8, 26, 71, 72, 77, 78, 114, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 145, 149, 150, 151, 174, 183, 184, 185, 195, 202, 203, 210, 229, 233, 241, 263, 271, 289, 296, 400, 436, 437, 438, 440, 450, 453, 459, 469, 505, 512, 515, 518, 536, 541, 546, 549, 558, 569, 581, 593, 616, 618, 624, 625, 626, 627, 628, 630, 645, 646, 647, 653, 660, 665, 666, 667, 668, 669, 672, 676, 692, 699, 708, 746, 748, 754, 755, 758, 759, 760, 762, 778, 786, 787, 788, 823, 830, 842, 843, 844, 845, 847, 858, 859, 864, 908], "automat": [0, 26, 27, 55, 58, 62, 70, 78, 82, 83, 84, 85, 86, 89, 90, 174, 177, 179, 180, 181, 183, 185, 187, 188, 233, 260, 263, 289, 438, 463, 469, 483, 544, 551, 561, 572, 575, 582, 585, 587, 594, 597, 604, 606, 610, 611, 618, 628, 629, 631, 633, 637, 640, 648, 651, 653, 656, 660, 665, 666, 667, 668, 674, 684, 687, 692, 693, 695, 696, 697, 698, 700, 701, 702, 704, 706, 708, 739, 753, 756, 759, 762, 763, 784, 786, 804, 823, 889, 892, 895, 902, 904, 912, 915], "handl": [0, 13, 55, 58, 66, 68, 75, 103, 174, 175, 186, 188, 233, 246, 263, 276, 289, 301, 417, 439, 469, 475, 477, 481, 503, 513, 604, 616, 629, 647, 648, 659, 669, 692, 695, 704, 708, 752, 786, 803, 834, 912], "apply_upd": [0, 58, 94, 174, 178, 233, 263, 289], "updat": [0, 1, 3, 4, 26, 29, 30, 32, 33, 36, 38, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 70, 76, 77, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 165, 172, 174, 178, 186, 187, 191, 195, 215, 216, 231, 233, 234, 236, 237, 262, 263, 264, 266, 267, 289, 290, 291, 292, 324, 335, 341, 348, 353, 357, 366, 372, 379, 384, 388, 397, 413, 415, 416, 417, 418, 448, 469, 475, 476, 481, 483, 484, 485, 489, 490, 574, 601, 604, 606, 610, 611, 619, 627, 631, 633, 637, 640, 645, 648, 649, 651, 652, 656, 659, 664, 670, 671, 672, 673, 676, 684, 687, 692, 693, 707, 708, 743, 749, 752, 753, 755, 758, 759, 762, 764, 765, 767, 769, 771, 775, 776, 777, 784, 786, 803, 806, 811, 815, 822, 828, 835, 836, 838, 840, 842, 843, 845, 885, 899], "element": [0, 3, 4, 10, 26, 41, 50, 55, 58, 62, 77, 79, 80, 85, 86, 94, 95, 102, 108, 113, 146, 174, 178, 186, 189, 204, 209, 233, 236, 237, 243, 263, 266, 267, 273, 289, 291, 292, 298, 336, 341, 349, 357, 367, 372, 380, 388, 407, 409, 413, 415, 443, 468, 472, 483, 497, 513, 536, 553, 563, 575, 587, 604, 610, 612, 619, 626, 631, 634, 637, 648, 652, 656, 684, 692, 694, 695, 704, 708, 724, 725, 746, 748, 749, 755, 762, 771, 776, 818, 825, 830, 852, 856], "assum": [0, 4, 55, 58, 62, 71, 72, 75, 78, 94, 165, 174, 181, 186, 188, 191, 215, 216, 233, 237, 263, 267, 289, 292, 316, 317, 321, 327, 328, 332, 338, 339, 344, 351, 352, 361, 369, 370, 375, 382, 383, 392, 398, 423, 428, 430, 458, 459, 472, 479, 480, 483, 486, 487, 491, 492, 493, 500, 504, 506, 513, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 599, 601, 604, 610, 616, 619, 620, 626, 628, 631, 637, 639, 641, 643, 645, 648, 656, 658, 672, 675, 676, 678, 679, 680, 682, 684, 686, 688, 690, 692, 704, 740, 784, 787, 819, 830, 843, 854, 858, 868], "express": [0, 12, 18, 20, 21, 58, 71, 94, 96, 105, 106, 107, 165, 168, 174, 176, 177, 179, 180, 181, 189, 233, 245, 251, 253, 254, 263, 275, 281, 283, 284, 289, 300, 306, 308, 309, 448, 449, 459, 483, 484, 489, 501, 506, 525, 532, 541, 549, 558, 569, 574, 581, 593, 599, 601, 648, 665, 708, 748, 756, 840, 883, 884, 895], "shown": [0, 46, 75, 211, 233, 263, 289, 773, 778, 782, 783, 788], "tabl": [0, 47, 114, 118, 174, 182, 191, 233, 263, 289, 443, 468, 694, 708, 752, 755, 774, 784, 808], "gener": [0, 2, 3, 8, 9, 10, 12, 13, 17, 24, 26, 31, 32, 34, 47, 58, 62, 66, 68, 70, 71, 72, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 100, 101, 102, 103, 108, 109, 113, 114, 117, 127, 131, 145, 146, 150, 174, 176, 178, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 201, 202, 204, 220, 233, 235, 236, 241, 242, 243, 245, 246, 250, 257, 260, 263, 265, 266, 271, 272, 273, 275, 276, 280, 287, 289, 291, 296, 297, 298, 300, 301, 305, 312, 314, 322, 325, 326, 332, 333, 336, 346, 349, 364, 367, 368, 377, 380, 381, 395, 398, 400, 407, 409, 424, 425, 426, 431, 432, 434, 435, 437, 438, 439, 440, 457, 468, 469, 472, 476, 483, 500, 516, 517, 518, 522, 529, 536, 538, 546, 547, 553, 555, 563, 565, 574, 577, 589, 604, 609, 610, 614, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 636, 637, 641, 644, 645, 646, 647, 648, 651, 652, 655, 656, 659, 661, 663, 665, 672, 676, 679, 680, 683, 684, 688, 691, 692, 693, 694, 695, 699, 703, 708, 738, 743, 744, 745, 752, 753, 754, 755, 756, 758, 759, 760, 762, 774, 779, 780, 781, 782, 783, 784, 786, 787, 830, 835, 838, 843, 845, 854, 863, 866, 882, 883, 884], "thei": [0, 18, 26, 81, 92, 94, 105, 113, 114, 117, 122, 167, 168, 174, 176, 178, 186, 189, 193, 206, 213, 233, 251, 263, 281, 289, 306, 349, 380, 409, 417, 436, 437, 438, 440, 455, 475, 487, 491, 492, 493, 500, 511, 515, 518, 522, 529, 536, 546, 553, 563, 574, 575, 587, 601, 604, 605, 610, 616, 619, 625, 627, 629, 631, 637, 645, 647, 648, 651, 652, 659, 661, 663, 665, 672, 684, 692, 693, 695, 708, 723, 742, 746, 752, 755, 758, 759, 762, 784, 786, 787, 830, 843, 845, 861, 863, 867], "few": [0, 2, 17, 26, 55, 62, 70, 77, 78, 94, 114, 174, 177, 179, 180, 181, 184, 185, 186, 189, 191, 192, 193, 202, 233, 235, 250, 263, 265, 280, 289, 305, 424, 439, 455, 512, 546, 616, 625, 627, 628, 630, 645, 652, 658, 692, 695, 704, 752, 762, 784, 786, 788, 807, 843], "conveni": [0, 26, 72, 77, 94, 174, 186, 189, 195, 203, 210, 233, 259, 263, 289, 355, 386, 410, 414, 469, 694, 695, 708, 762, 784, 786, 787, 895], "collect": [0, 77, 94, 113, 150, 175, 176, 202, 233, 263, 289, 436, 518, 542, 559, 570, 583, 595, 616, 647, 659, 695, 803, 842], "5": [0, 4, 12, 14, 19, 21, 26, 32, 37, 46, 62, 77, 116, 130, 174, 177, 179, 180, 181, 188, 191, 202, 203, 207, 220, 223, 224, 233, 237, 245, 247, 252, 254, 263, 267, 275, 277, 282, 284, 289, 292, 300, 302, 307, 309, 319, 330, 342, 358, 373, 389, 435, 441, 448, 483, 494, 499, 625, 628, 630, 645, 648, 656, 658, 672, 674, 692, 693, 720, 721, 722, 729, 741, 745, 752, 755, 760, 762, 768, 773, 784, 787, 803, 808, 830, 840, 870, 882, 883, 884], "between": [0, 11, 15, 31, 32, 56, 58, 60, 64, 66, 67, 68, 70, 71, 81, 93, 94, 104, 113, 118, 126, 127, 151, 166, 167, 170, 174, 181, 186, 188, 189, 191, 202, 204, 207, 213, 220, 221, 222, 229, 233, 244, 248, 263, 274, 278, 289, 299, 303, 325, 367, 380, 442, 447, 455, 456, 457, 458, 468, 472, 475, 477, 479, 491, 500, 503, 504, 507, 509, 523, 524, 527, 530, 531, 534, 538, 539, 547, 548, 555, 556, 565, 566, 574, 577, 578, 589, 590, 601, 604, 606, 608, 610, 613, 616, 617, 618, 619, 621, 623, 624, 625, 627, 628, 631, 632, 633, 635, 641, 642, 645, 646, 647, 648, 651, 652, 653, 654, 656, 658, 660, 665, 672, 674, 676, 680, 681, 688, 689, 692, 695, 714, 728, 740, 744, 745, 749, 752, 753, 755, 759, 760, 782, 783, 784, 787, 808, 817, 830, 857, 867, 877, 878, 880, 881, 887, 895, 908], "attitud": [0, 26, 29, 32, 33, 38, 39, 47, 66, 68, 70, 71, 76, 77, 92, 93, 174, 175, 186, 189, 191, 192, 194, 195, 230, 233, 263, 289, 426, 645, 708, 710, 712, 718, 746, 748, 749, 752, 753, 754, 755, 757, 760, 762, 764, 765, 769, 770, 774, 784, 786, 787, 788, 803, 811, 842], "spacecraft": [0, 26, 70, 77, 174, 191, 195, 233, 263, 289, 645, 692, 752, 786, 816, 817, 819, 820, 824, 826, 899, 902, 908], "": [0, 14, 16, 17, 55, 58, 62, 66, 67, 75, 150, 168, 170, 171, 174, 186, 191, 192, 233, 247, 249, 250, 263, 277, 279, 280, 289, 302, 304, 305, 316, 317, 319, 325, 327, 328, 330, 338, 339, 342, 345, 351, 352, 358, 361, 363, 369, 370, 373, 376, 382, 383, 389, 392, 394, 400, 408, 412, 423, 428, 469, 470, 471, 473, 476, 481, 482, 483, 495, 497, 504, 506, 507, 511, 536, 553, 563, 575, 582, 587, 594, 610, 616, 619, 625, 626, 627, 630, 631, 632, 637, 676, 684, 692, 699, 714, 715, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 737, 739, 741, 742, 744, 745, 748, 749, 750, 751, 755, 778, 784, 786, 787, 801, 816, 819, 842, 858, 867, 876, 879, 888, 902, 917], "cccccccccc": [0, 233, 263], "boldsymbol": [0, 4, 5, 6, 18, 233, 237, 238, 251, 263, 267, 268, 269, 281, 289, 292, 293, 294, 306, 652], "delta": [0, 2, 3, 4, 5, 6, 14, 18, 76, 77, 93, 95, 165, 166, 168, 169, 177, 178, 180, 186, 233, 235, 236, 237, 238, 247, 251, 263, 265, 266, 267, 268, 269, 277, 281, 289, 291, 292, 293, 294, 302, 306, 341, 357, 372, 388, 415, 449, 652, 786, 812], "theta": [0, 4, 5, 6, 18, 68, 174, 186, 189, 233, 237, 238, 251, 263, 267, 268, 269, 281, 289, 292, 293, 294, 306, 325, 367, 380, 652, 715, 719, 720, 721, 722, 725, 726], "ccccccccccccc": [0, 233, 263], "ccccccccc": [0, 233, 263, 602], "3rd": [0, 233, 263, 899, 908], "rotat": [0, 5, 6, 11, 18, 26, 29, 31, 32, 66, 68, 69, 70, 71, 73, 77, 92, 172, 174, 181, 186, 191, 195, 233, 238, 244, 251, 263, 268, 269, 274, 281, 289, 293, 294, 299, 306, 314, 325, 332, 336, 341, 349, 357, 367, 372, 380, 388, 415, 436, 437, 448, 449, 454, 455, 457, 463, 469, 483, 484, 492, 493, 494, 495, 497, 498, 499, 500, 518, 519, 536, 553, 563, 600, 625, 627, 645, 647, 648, 652, 656, 659, 662, 663, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 733, 735, 741, 742, 746, 747, 748, 749, 750, 751, 752, 755, 758, 760, 764, 786, 788, 808, 867, 875, 882, 892, 895, 899, 908], "quadratic": [0, 233, 263], "_1": [0, 189, 233, 263, 289, 714, 716, 728], "ldot": [0, 233, 263, 289], "_n": [0, 68, 174, 233, 263, 289, 508], "possibl": [0, 37, 46, 94, 114, 127, 174, 188, 191, 195, 231, 233, 263, 289, 453, 506, 520, 526, 533, 550, 619, 624, 627, 628, 633, 637, 645, 647, 652, 665, 675, 692, 693, 695, 714, 728, 745, 752, 755, 768, 773, 782, 786, 803, 807, 830, 842, 844, 848, 859, 862, 864, 871, 889], "simultan": [0, 174, 233, 263, 289, 717, 864, 912, 915], "becaus": [0, 24, 31, 32, 55, 58, 94, 109, 128, 139, 174, 181, 186, 187, 192, 228, 233, 257, 263, 287, 289, 312, 401, 406, 426, 436, 441, 442, 445, 446, 447, 456, 473, 475, 478, 495, 496, 497, 512, 604, 615, 619, 625, 626, 627, 628, 630, 637, 645, 647, 652, 657, 659, 661, 663, 669, 676, 684, 692, 708, 781, 784, 785, 786, 787, 789, 807, 816, 823, 830, 840, 854, 858, 875, 876, 879, 889], "result": [0, 4, 13, 19, 26, 28, 29, 30, 31, 33, 47, 58, 62, 69, 72, 73, 75, 92, 103, 127, 128, 165, 168, 170, 172, 174, 177, 179, 180, 181, 186, 188, 191, 202, 203, 210, 215, 216, 221, 228, 233, 237, 246, 252, 263, 267, 276, 282, 289, 292, 301, 307, 314, 315, 317, 321, 322, 325, 328, 332, 333, 336, 337, 339, 341, 344, 345, 346, 349, 350, 352, 356, 357, 361, 362, 363, 364, 367, 370, 372, 375, 376, 377, 380, 383, 387, 388, 392, 393, 394, 395, 398, 400, 408, 412, 415, 417, 419, 421, 423, 426, 427, 431, 434, 436, 437, 451, 453, 455, 457, 460, 462, 465, 472, 475, 477, 478, 481, 488, 491, 492, 493, 495, 497, 501, 502, 503, 505, 507, 509, 518, 523, 527, 530, 534, 537, 538, 540, 542, 547, 554, 555, 557, 559, 564, 565, 568, 570, 574, 575, 576, 577, 580, 582, 583, 587, 588, 589, 592, 594, 595, 601, 604, 607, 610, 616, 617, 619, 620, 624, 626, 627, 628, 631, 637, 640, 645, 648, 651, 652, 653, 656, 657, 660, 662, 665, 669, 672, 676, 679, 684, 687, 692, 693, 695, 698, 699, 700, 701, 702, 703, 704, 706, 708, 714, 723, 726, 727, 738, 739, 740, 741, 742, 743, 744, 745, 747, 752, 754, 755, 757, 762, 764, 765, 774, 782, 783, 787, 795, 803, 805, 806, 808, 810, 811, 830, 838, 842, 844, 848, 849, 859, 860, 861, 862, 863, 864, 867, 882, 883, 884, 902], "rank": [0, 55, 58, 62, 174, 186, 233, 263, 289, 321, 332, 344, 345, 361, 363, 375, 376, 392, 394, 408, 412, 748], "defici": [0, 174, 186, 233, 263, 289, 321, 332, 344, 345, 361, 363, 375, 376, 392, 394, 408, 412, 748], "without": [0, 126, 181, 186, 188, 191, 192, 195, 201, 231, 233, 263, 289, 321, 322, 332, 333, 346, 362, 364, 377, 393, 395, 417, 421, 431, 434, 455, 469, 516, 529, 647, 659, 665, 693, 744, 784, 786, 787, 859, 867], "weight": [0, 26, 28, 55, 58, 62, 64, 174, 186, 233, 263, 289, 321, 332, 435, 442, 447, 448, 645, 648, 656, 746, 747, 748, 751, 757, 762, 835], "togeth": [0, 113, 114, 116, 125, 126, 127, 168, 174, 188, 191, 222, 233, 263, 289, 542, 559, 570, 583, 595, 647, 694, 704, 740, 744, 807, 842, 843, 848], "you": [0, 4, 9, 12, 14, 20, 21, 24, 26, 27, 29, 30, 31, 32, 34, 47, 55, 56, 57, 58, 62, 66, 70, 72, 73, 75, 77, 78, 82, 83, 84, 85, 86, 89, 90, 93, 94, 96, 101, 106, 107, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 128, 129, 132, 136, 137, 141, 145, 146, 148, 149, 150, 151, 167, 168, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 191, 192, 195, 201, 202, 211, 212, 215, 216, 218, 220, 224, 229, 230, 231, 233, 237, 242, 245, 247, 253, 254, 257, 263, 267, 272, 275, 277, 283, 284, 287, 289, 292, 297, 300, 302, 308, 309, 312, 321, 325, 332, 362, 393, 400, 401, 407, 409, 413, 417, 421, 422, 426, 435, 436, 437, 438, 439, 440, 450, 453, 455, 456, 457, 459, 460, 462, 468, 469, 472, 475, 476, 482, 483, 491, 492, 493, 494, 500, 501, 505, 512, 513, 514, 516, 518, 519, 538, 541, 546, 547, 549, 553, 555, 558, 563, 565, 569, 575, 577, 581, 582, 587, 589, 593, 594, 604, 608, 610, 616, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 637, 639, 642, 645, 646, 647, 648, 649, 651, 652, 653, 654, 656, 659, 662, 665, 670, 671, 672, 673, 674, 676, 678, 679, 681, 684, 686, 689, 692, 693, 694, 695, 696, 698, 700, 701, 702, 704, 706, 708, 713, 714, 715, 716, 718, 719, 723, 724, 725, 726, 727, 728, 738, 739, 740, 741, 742, 743, 744, 745, 748, 751, 752, 753, 755, 757, 762, 763, 764, 774, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 804, 805, 806, 807, 808, 813, 815, 816, 822, 823, 828, 830, 835, 837, 838, 842, 843, 844, 845, 847, 848, 849, 850, 854, 858, 859, 862, 863, 864, 867, 869, 870, 871, 882, 885, 889, 892, 895, 899, 902, 904, 908, 912, 915], "doesn": [0, 57, 75, 174, 178, 182, 191, 233, 263, 289, 314, 325, 336, 349, 367, 380, 467, 492, 493, 494, 512, 520, 546, 619, 623, 646, 651, 692, 708, 737, 738, 739, 784, 786, 787, 830, 866, 889], "should": [0, 2, 4, 5, 6, 12, 17, 18, 20, 21, 24, 25, 26, 27, 31, 32, 34, 47, 55, 56, 57, 58, 60, 62, 66, 68, 73, 77, 78, 82, 87, 88, 91, 94, 96, 97, 98, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 125, 126, 127, 128, 132, 136, 137, 141, 145, 146, 149, 150, 151, 165, 170, 174, 177, 178, 179, 180, 181, 183, 186, 188, 191, 192, 195, 197, 201, 202, 211, 213, 214, 218, 221, 222, 229, 231, 233, 235, 237, 238, 239, 245, 250, 251, 253, 254, 257, 258, 259, 263, 265, 267, 268, 269, 275, 280, 281, 283, 284, 287, 288, 289, 292, 293, 294, 300, 305, 306, 308, 309, 312, 313, 314, 316, 317, 325, 327, 328, 336, 338, 339, 341, 349, 351, 352, 353, 355, 356, 357, 367, 369, 370, 372, 380, 382, 383, 384, 386, 387, 388, 400, 410, 414, 415, 416, 417, 418, 419, 423, 426, 427, 428, 430, 432, 433, 440, 449, 450, 456, 457, 458, 459, 460, 462, 467, 469, 476, 478, 483, 486, 487, 492, 493, 500, 501, 504, 505, 506, 513, 518, 522, 524, 525, 529, 531, 532, 536, 538, 539, 541, 546, 547, 548, 549, 553, 555, 556, 558, 563, 565, 566, 569, 574, 575, 577, 578, 581, 587, 589, 590, 593, 601, 604, 610, 616, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 637, 639, 640, 645, 647, 648, 649, 651, 652, 656, 658, 659, 664, 665, 671, 672, 673, 674, 676, 678, 679, 684, 686, 687, 692, 695, 696, 697, 698, 699, 700, 701, 702, 704, 706, 708, 713, 716, 720, 721, 722, 723, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 751, 752, 755, 758, 759, 760, 762, 763, 774, 782, 784, 786, 787, 788, 803, 804, 806, 807, 808, 810, 812, 814, 816, 823, 830, 835, 838, 843, 852, 853, 854, 856, 859, 863, 864, 867, 875, 876, 879, 889, 892, 895, 904, 908, 912, 915], "For": [0, 2, 4, 28, 29, 30, 33, 46, 66, 70, 77, 92, 94, 95, 114, 116, 118, 122, 123, 137, 150, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 195, 201, 207, 209, 220, 223, 233, 235, 237, 263, 265, 267, 289, 292, 316, 317, 327, 328, 336, 338, 339, 351, 352, 367, 369, 370, 382, 383, 400, 423, 424, 426, 428, 442, 443, 445, 446, 447, 450, 465, 468, 469, 496, 513, 517, 520, 553, 563, 574, 603, 610, 612, 619, 624, 625, 626, 627, 628, 629, 630, 631, 634, 637, 640, 645, 647, 648, 658, 664, 672, 676, 684, 687, 692, 693, 694, 695, 699, 704, 708, 713, 718, 720, 721, 722, 744, 745, 752, 753, 755, 759, 764, 765, 773, 782, 784, 786, 787, 803, 816, 842, 848, 859, 863, 864, 875, 876, 879, 887], "more": [0, 24, 26, 29, 30, 33, 62, 66, 70, 76, 77, 94, 109, 114, 115, 116, 118, 126, 170, 172, 174, 176, 177, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 195, 202, 220, 230, 231, 233, 257, 259, 263, 287, 289, 312, 336, 341, 349, 357, 367, 372, 380, 388, 398, 415, 426, 436, 439, 450, 455, 457, 459, 461, 464, 469, 477, 500, 513, 538, 541, 547, 549, 555, 558, 565, 569, 577, 581, 589, 593, 604, 608, 619, 621, 624, 625, 626, 627, 628, 629, 630, 637, 639, 640, 641, 642, 645, 647, 648, 651, 654, 660, 661, 663, 665, 668, 675, 676, 678, 680, 681, 684, 686, 687, 688, 689, 692, 693, 695, 698, 699, 700, 701, 702, 704, 706, 711, 712, 717, 752, 753, 755, 759, 760, 761, 762, 764, 765, 782, 784, 787, 803, 806, 807, 816, 830, 842, 843, 845, 847, 848, 849, 859, 863, 864, 865, 868, 871, 875, 876, 879], "detail": [0, 26, 66, 76, 77, 115, 118, 124, 129, 137, 150, 174, 176, 177, 179, 180, 181, 182, 183, 186, 187, 190, 191, 192, 193, 195, 201, 202, 206, 210, 212, 213, 218, 233, 259, 263, 289, 336, 367, 426, 450, 455, 458, 469, 513, 539, 543, 548, 556, 560, 566, 571, 578, 584, 590, 596, 604, 608, 610, 612, 613, 619, 620, 621, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 637, 640, 642, 645, 648, 651, 654, 676, 679, 681, 684, 687, 689, 692, 693, 695, 698, 699, 700, 701, 702, 704, 706, 755, 761, 762, 785, 787, 788, 803, 816, 830, 842, 845, 848, 858, 859, 863, 865, 868, 875, 876, 879, 908], "about": [0, 10, 23, 26, 33, 34, 55, 58, 66, 68, 77, 102, 114, 115, 116, 117, 120, 124, 128, 129, 130, 136, 137, 149, 150, 172, 174, 175, 176, 182, 183, 186, 188, 189, 191, 193, 195, 202, 207, 210, 214, 220, 233, 243, 256, 263, 273, 286, 289, 298, 311, 314, 325, 336, 341, 357, 362, 367, 372, 388, 393, 400, 415, 421, 455, 475, 483, 492, 536, 546, 553, 563, 575, 582, 587, 594, 604, 610, 616, 619, 623, 626, 628, 631, 637, 645, 646, 647, 648, 651, 658, 659, 676, 684, 692, 693, 695, 699, 713, 720, 721, 722, 723, 738, 739, 742, 752, 755, 757, 759, 762, 765, 784, 785, 786, 787, 788, 803, 806, 808, 835, 842, 845, 848, 859, 892, 899, 902, 908], "see": [0, 10, 18, 26, 27, 29, 30, 33, 46, 48, 49, 50, 52, 53, 54, 66, 70, 76, 77, 83, 84, 85, 86, 89, 90, 95, 102, 105, 113, 116, 120, 121, 124, 127, 128, 129, 137, 150, 172, 174, 177, 178, 179, 180, 181, 182, 183, 186, 190, 191, 192, 195, 202, 206, 213, 218, 220, 231, 233, 243, 251, 259, 260, 262, 263, 273, 281, 289, 298, 306, 336, 367, 401, 426, 436, 450, 455, 458, 469, 478, 485, 496, 499, 507, 520, 526, 533, 539, 543, 548, 550, 556, 560, 566, 571, 574, 578, 584, 590, 596, 604, 610, 612, 619, 625, 627, 628, 631, 634, 637, 648, 656, 658, 670, 676, 684, 692, 693, 695, 696, 698, 699, 700, 701, 702, 706, 707, 711, 712, 717, 718, 726, 739, 746, 755, 759, 761, 762, 763, 764, 765, 773, 775, 776, 777, 778, 782, 784, 786, 787, 803, 804, 816, 858, 859, 865, 868, 908], "packag": [0, 26, 70, 174, 176, 177, 179, 180, 181, 182, 186, 188, 191, 192, 193, 202, 231, 233, 263, 289, 426, 457, 463, 538, 544, 547, 551, 555, 561, 565, 572, 577, 585, 589, 597, 604, 610, 619, 629, 631, 637, 648, 676, 684, 692, 693, 694, 704, 755, 762, 786, 787, 788, 803, 808, 835, 842, 845, 848, 859, 862, 882, 883, 884], "float": [0, 4, 14, 34, 58, 62, 68, 94, 126, 127, 130, 131, 151, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 169, 170, 174, 183, 186, 195, 202, 207, 233, 237, 247, 263, 267, 277, 289, 292, 302, 314, 325, 336, 349, 367, 380, 401, 409, 413, 417, 426, 435, 442, 443, 445, 446, 447, 448, 449, 468, 479, 486, 494, 507, 511, 536, 553, 563, 574, 575, 582, 587, 594, 600, 604, 631, 637, 648, 656, 695, 708, 755, 756, 758, 759, 803, 808, 814, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 830, 836, 867, 877, 878, 880, 881, 885, 886, 892, 895, 899, 904, 908], "least": [0, 58, 60, 62, 68, 69, 73, 75, 78, 94, 174, 186, 188, 191, 192, 225, 228, 233, 263, 289, 319, 321, 330, 332, 336, 341, 342, 344, 345, 349, 355, 357, 358, 361, 362, 363, 367, 372, 373, 375, 376, 380, 386, 388, 389, 392, 393, 394, 400, 408, 410, 412, 413, 414, 415, 417, 421, 439, 453, 602, 625, 627, 628, 633, 645, 648, 652, 656, 657, 659, 692, 779, 780, 781, 782, 783, 807, 808], "half": [0, 94, 174, 178, 202, 207, 213, 233, 263, 289, 574, 601, 630, 637, 645, 684, 692, 784, 892, 895], "width": [0, 47, 94, 151, 186, 202, 213, 233, 263, 289, 314, 319, 325, 330, 336, 342, 349, 358, 367, 373, 380, 389, 433, 774], "queri": [0, 26, 47, 92, 94, 112, 115, 116, 117, 119, 120, 121, 124, 126, 127, 128, 129, 132, 136, 137, 141, 149, 150, 174, 182, 191, 233, 263, 289, 752, 755, 757, 758, 759, 762, 774, 786, 816, 823, 843, 877, 878, 880, 881], "star": [0, 26, 29, 30, 32, 33, 34, 35, 36, 38, 43, 47, 55, 56, 58, 59, 60, 62, 63, 70, 71, 94, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 141, 142, 144, 145, 146, 149, 150, 164, 165, 172, 174, 182, 186, 188, 191, 192, 194, 195, 202, 233, 263, 289, 426, 619, 624, 630, 684, 737, 752, 753, 754, 755, 757, 758, 759, 760, 762, 764, 765, 766, 767, 769, 772, 774, 778, 779, 780, 781, 782, 783, 785, 788, 803, 805, 806, 807, 808, 811, 842, 859], "catalogu": [0, 26, 31, 47, 55, 71, 94, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 166, 167, 168, 169, 170, 174, 191, 233, 263, 289, 629, 645, 647, 648, 650, 651, 656, 659, 660, 661, 662, 663, 664, 665, 672, 674, 737, 743, 748, 749, 752, 755, 757, 758, 759, 760, 761, 762, 774, 779, 780, 782, 783, 784, 785, 787, 788, 808], "v": [0, 6, 58, 62, 94, 174, 189, 233, 263, 269, 289, 294, 648, 719, 725, 726, 745, 779, 784, 889], "o": [0, 94, 96, 206, 231, 233, 263, 289, 739, 740, 741, 743, 744, 745, 786, 789], "f": [0, 14, 18, 94, 180, 181, 186, 228, 233, 247, 251, 263, 267, 268, 277, 281, 289, 292, 293, 294, 302, 306, 314, 318, 320, 321, 322, 325, 329, 331, 332, 333, 340, 341, 343, 344, 346, 349, 354, 355, 357, 359, 361, 364, 371, 372, 374, 375, 377, 380, 385, 386, 388, 390, 392, 395, 410, 414, 415, 417, 430, 431, 434, 602, 652, 657, 692, 737, 739, 743, 744, 745, 785, 817, 824, 888, 902], "alia": [0, 26, 27, 174, 233, 259, 260, 695, 696, 708, 762, 763, 804], "index": [0, 3, 5, 9, 12, 18, 20, 21, 26, 35, 36, 81, 83, 84, 85, 86, 88, 89, 90, 101, 105, 106, 107, 114, 116, 117, 132, 135, 142, 147, 151, 173, 174, 183, 203, 213, 233, 236, 238, 242, 245, 251, 253, 254, 263, 266, 268, 272, 275, 281, 283, 284, 291, 293, 297, 300, 306, 308, 309, 467, 469, 475, 476, 479, 480, 486, 487, 536, 553, 563, 575, 582, 587, 594, 607, 609, 612, 614, 622, 626, 634, 636, 639, 641, 643, 644, 648, 650, 651, 652, 653, 655, 672, 674, 678, 680, 682, 683, 686, 688, 690, 691, 692, 694, 697, 698, 699, 700, 701, 702, 703, 706, 713, 718, 755, 757, 760, 761, 762, 766, 767, 778, 783, 803, 832, 838, 862], "pix": [0, 177, 179, 180, 181, 233, 263, 289, 435], "distanc": [0, 2, 12, 16, 17, 26, 114, 118, 130, 159, 164, 167, 174, 177, 179, 180, 181, 192, 233, 235, 245, 249, 250, 263, 265, 267, 275, 279, 280, 289, 300, 304, 305, 436, 468, 477, 492, 493, 494, 495, 497, 507, 602, 628, 632, 637, 645, 646, 647, 648, 656, 658, 660, 662, 665, 672, 674, 692, 737, 745, 752, 755, 759, 760, 762, 808, 816, 817, 819, 820, 824, 826, 830, 859, 892, 895], "factor": [0, 233, 263, 289, 442, 692, 803, 904], "convert": [0, 1, 8, 13, 16, 17, 18, 19, 25, 26, 31, 69, 73, 82, 103, 105, 110, 113, 130, 143, 151, 154, 155, 156, 157, 159, 160, 161, 165, 166, 168, 169, 170, 174, 186, 187, 189, 195, 196, 203, 220, 224, 233, 234, 241, 246, 249, 250, 251, 252, 258, 263, 264, 271, 276, 279, 280, 281, 282, 288, 289, 290, 296, 301, 304, 305, 306, 307, 313, 325, 435, 480, 501, 505, 603, 605, 607, 618, 637, 650, 653, 675, 684, 708, 713, 715, 717, 718, 719, 723, 724, 725, 726, 739, 743, 744, 756, 758, 759, 762, 785, 786, 787, 788, 867, 877, 878, 880, 881, 885, 886, 895, 904, 906], "coordin": [0, 177, 178, 179, 180, 233, 263, 289, 582, 594, 604, 605, 607, 648, 650, 778, 899, 908], "where": [0, 2, 4, 5, 6, 12, 14, 16, 18, 32, 34, 47, 55, 58, 59, 62, 63, 66, 68, 76, 77, 93, 95, 96, 97, 98, 113, 119, 126, 127, 132, 137, 141, 150, 151, 154, 155, 156, 157, 159, 160, 161, 167, 168, 174, 175, 177, 178, 179, 180, 181, 186, 187, 188, 189, 191, 195, 202, 204, 206, 209, 211, 213, 214, 223, 224, 225, 228, 233, 235, 237, 238, 239, 245, 247, 249, 251, 263, 265, 267, 268, 269, 275, 277, 279, 281, 289, 292, 293, 294, 300, 302, 304, 306, 314, 316, 317, 321, 322, 325, 327, 328, 332, 333, 338, 339, 344, 346, 351, 352, 355, 360, 361, 364, 369, 370, 375, 377, 382, 383, 386, 391, 392, 395, 398, 407, 409, 410, 414, 417, 420, 423, 428, 430, 431, 432, 434, 435, 436, 440, 441, 442, 445, 446, 447, 448, 449, 450, 455, 458, 459, 469, 472, 475, 477, 478, 481, 483, 494, 495, 497, 499, 500, 501, 504, 505, 506, 507, 511, 522, 524, 525, 531, 532, 536, 539, 541, 548, 549, 553, 556, 558, 563, 566, 569, 574, 575, 578, 581, 587, 590, 593, 600, 601, 602, 604, 609, 610, 614, 617, 619, 622, 624, 625, 626, 627, 629, 631, 632, 636, 637, 644, 645, 647, 648, 652, 655, 656, 657, 658, 662, 676, 683, 684, 691, 692, 693, 694, 695, 699, 704, 712, 714, 715, 716, 718, 724, 726, 727, 728, 749, 751, 755, 756, 774, 778, 784, 785, 786, 787, 788, 789, 803, 807, 808, 812, 816, 817, 824, 838, 852, 856, 860, 864, 866, 869, 870, 877, 878, 880, 881, 882, 883, 884, 886, 889, 892, 895, 899, 908], "zero": [0, 19, 22, 55, 58, 62, 174, 186, 195, 224, 233, 252, 255, 263, 282, 285, 289, 307, 310, 404, 406, 435, 475, 658, 692, 693, 694, 695, 719, 725, 789, 829], "optic": [0, 2, 20, 106, 172, 176, 178, 230, 233, 235, 253, 263, 265, 283, 289, 308, 695, 745, 762, 803, 854, 908], "pierc": [0, 233, 263, 289, 908], "first": [0, 4, 8, 9, 10, 16, 18, 20, 21, 26, 28, 32, 58, 68, 69, 71, 77, 78, 93, 96, 101, 102, 105, 106, 107, 113, 125, 127, 138, 140, 167, 169, 170, 174, 182, 186, 187, 189, 191, 192, 198, 199, 202, 207, 208, 209, 210, 211, 212, 214, 220, 225, 228, 231, 233, 237, 241, 242, 243, 249, 251, 253, 254, 263, 267, 268, 271, 272, 273, 279, 281, 283, 284, 289, 292, 293, 296, 297, 298, 304, 306, 308, 309, 344, 345, 361, 363, 375, 376, 392, 394, 408, 412, 436, 457, 463, 475, 477, 478, 481, 483, 484, 485, 494, 495, 497, 498, 503, 506, 509, 511, 536, 553, 563, 574, 575, 587, 601, 604, 605, 606, 610, 611, 616, 619, 623, 625, 627, 628, 630, 631, 633, 637, 640, 641, 643, 645, 648, 650, 651, 652, 657, 658, 660, 662, 665, 672, 676, 680, 682, 684, 687, 688, 690, 692, 694, 695, 703, 704, 708, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 741, 745, 752, 755, 760, 762, 781, 784, 785, 786, 787, 788, 801, 803, 811, 815, 818, 820, 822, 825, 826, 828, 830, 832, 835, 843, 851, 852, 855, 856, 858, 859, 864, 867, 892, 899, 904, 908, 912, 915], "multipli": [0, 1, 8, 16, 202, 222, 233, 234, 241, 249, 263, 264, 271, 279, 289, 290, 296, 304, 599, 643, 648, 682, 690, 716, 858, 870], "second": [0, 2, 4, 8, 9, 26, 32, 68, 71, 77, 93, 101, 125, 127, 154, 156, 157, 161, 163, 167, 169, 174, 180, 187, 189, 192, 195, 202, 207, 208, 209, 210, 211, 212, 217, 233, 237, 241, 242, 263, 271, 272, 289, 296, 297, 472, 474, 494, 495, 497, 648, 652, 658, 695, 704, 714, 716, 718, 723, 728, 745, 752, 755, 757, 762, 781, 784, 786, 801, 808, 814, 815, 816, 818, 820, 822, 823, 825, 826, 828, 830, 843, 851, 855, 864, 867, 874, 877, 878, 880, 881, 885, 887, 892, 899, 902, 908, 912, 915], "squar": [0, 26, 55, 58, 60, 62, 68, 69, 174, 186, 202, 225, 228, 233, 263, 289, 314, 321, 322, 325, 332, 333, 336, 341, 344, 345, 346, 349, 355, 357, 361, 362, 363, 364, 367, 372, 375, 376, 377, 380, 386, 388, 392, 393, 394, 395, 400, 408, 410, 412, 413, 414, 415, 417, 421, 424, 426, 431, 432, 434, 472, 602, 625, 627, 630, 631, 633, 645, 648, 652, 656, 657, 684, 745, 752, 760, 761, 762, 787, 816, 830, 854, 892, 895], "third": [0, 8, 14, 189, 233, 241, 247, 263, 271, 277, 289, 296, 302, 648, 704, 723, 781, 784, 867, 908], "cube": [0, 233, 263, 289], "state_vector": [0, 55, 58, 62, 94, 174], "fulli": [0, 34, 77, 94, 115, 119, 132, 141, 174, 178, 186, 400, 401, 436, 437, 455, 468, 469, 500, 513, 518, 522, 529, 536, 546, 553, 563, 575, 587, 625, 626, 627, 784, 847, 867], "realiz": [0, 94, 174, 675, 755], "accord": [0, 4, 10, 18, 25, 26, 32, 55, 58, 62, 68, 69, 83, 84, 85, 86, 89, 90, 93, 94, 102, 105, 110, 116, 117, 121, 130, 146, 150, 151, 174, 186, 231, 237, 243, 251, 258, 267, 273, 281, 288, 292, 298, 306, 313, 317, 321, 328, 332, 339, 344, 345, 352, 360, 361, 362, 363, 370, 375, 376, 383, 391, 392, 393, 394, 408, 412, 413, 416, 417, 420, 421, 423, 441, 502, 537, 540, 554, 557, 564, 568, 576, 580, 588, 592, 602, 648, 653, 699, 704, 708, 713, 726, 741, 749, 762, 811, 851, 855, 889, 892, 899, 902, 908], "l": [0, 55, 58, 62, 93, 94, 174, 237, 744], "origin": [0, 24, 26, 34, 58, 109, 114, 119, 137, 174, 177, 179, 180, 186, 202, 233, 257, 260, 263, 287, 289, 312, 361, 392, 458, 459, 467, 472, 479, 483, 494, 495, 497, 498, 499, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 605, 648, 649, 650, 659, 665, 673, 757, 785, 883, 884, 899, 902, 915], "upper": [0, 204, 215, 216, 220, 222, 229, 233, 263, 289, 487], "corner": [0, 203, 204, 220, 222, 229, 233, 263, 289, 494], "ha": [0, 24, 26, 28, 33, 55, 58, 62, 72, 73, 78, 88, 107, 109, 130, 139, 170, 174, 177, 179, 180, 181, 186, 187, 191, 192, 195, 206, 224, 233, 257, 263, 287, 289, 312, 341, 357, 372, 388, 400, 415, 441, 468, 479, 480, 483, 486, 487, 494, 495, 497, 498, 536, 546, 553, 563, 575, 587, 604, 606, 610, 611, 619, 628, 631, 633, 637, 640, 645, 648, 651, 659, 665, 676, 684, 687, 692, 695, 704, 708, 733, 734, 735, 736, 748, 749, 751, 762, 765, 778, 787, 830, 835, 859, 889, 908], "analyt": [0, 177, 179, 180, 181, 233, 263, 289, 447, 449, 546, 652, 843], "given": [0, 25, 26, 35, 36, 110, 125, 136, 137, 146, 149, 150, 168, 174, 177, 179, 180, 181, 186, 214, 220, 223, 225, 228, 233, 258, 263, 288, 289, 313, 317, 320, 321, 328, 331, 332, 339, 343, 349, 352, 359, 370, 374, 380, 383, 390, 411, 423, 429, 438, 441, 442, 444, 445, 446, 447, 448, 449, 450, 458, 459, 469, 472, 476, 483, 486, 487, 491, 494, 499, 500, 504, 506, 511, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 582, 590, 593, 594, 601, 602, 605, 607, 618, 626, 632, 647, 650, 651, 652, 657, 658, 659, 692, 716, 725, 751, 752, 756, 766, 767, 779, 780, 781, 783, 787, 807, 808, 812, 830, 835, 843, 852, 853, 856, 857, 867, 875, 876, 877, 878, 879, 880, 881], "frac": [0, 4, 5, 6, 18, 155, 156, 157, 159, 160, 161, 170, 174, 177, 179, 180, 181, 186, 189, 225, 228, 233, 235, 237, 238, 251, 263, 267, 268, 269, 281, 289, 292, 293, 294, 306, 314, 318, 320, 321, 323, 325, 329, 334, 340, 343, 344, 347, 349, 354, 355, 356, 359, 361, 365, 371, 378, 385, 386, 387, 396, 405, 410, 414, 419, 441, 442, 446, 447, 448, 449, 500, 504, 511, 602, 632, 657, 714, 715, 719, 724, 725, 726, 728, 749, 751, 812, 816, 817, 824, 870], "f_xf_y": [0, 233], "f_yp_x": [0, 233], "To": [0, 66, 70, 72, 77, 91, 114, 115, 119, 126, 128, 132, 141, 174, 178, 182, 186, 191, 192, 195, 202, 212, 224, 233, 263, 289, 314, 325, 336, 349, 367, 380, 400, 401, 407, 409, 413, 426, 436, 438, 459, 469, 485, 494, 499, 500, 507, 519, 541, 549, 558, 569, 575, 581, 587, 593, 625, 626, 627, 647, 648, 652, 659, 665, 672, 692, 693, 738, 751, 753, 782, 784, 785, 786, 787, 803, 806, 823, 830, 842, 844, 850, 870], "do": [0, 9, 20, 26, 31, 32, 34, 55, 56, 58, 62, 70, 71, 77, 78, 85, 86, 88, 101, 106, 111, 112, 113, 114, 119, 127, 132, 136, 141, 145, 146, 149, 150, 174, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 190, 191, 192, 193, 195, 202, 204, 231, 233, 242, 253, 259, 263, 272, 283, 289, 297, 308, 336, 349, 367, 380, 407, 409, 422, 435, 436, 438, 439, 448, 450, 455, 462, 475, 483, 488, 500, 514, 515, 516, 518, 519, 522, 542, 546, 559, 570, 574, 582, 583, 594, 595, 601, 604, 608, 610, 619, 621, 628, 629, 631, 637, 642, 645, 646, 647, 648, 651, 652, 654, 658, 659, 664, 665, 671, 672, 676, 681, 684, 689, 692, 693, 695, 699, 704, 708, 735, 736, 738, 744, 752, 753, 755, 757, 762, 784, 785, 786, 787, 788, 801, 807, 813, 835, 838, 840, 843, 859, 867, 912, 916], "import": [0, 4, 9, 12, 14, 18, 21, 26, 32, 70, 72, 77, 94, 101, 105, 112, 172, 174, 176, 177, 179, 180, 181, 185, 186, 191, 203, 204, 220, 222, 223, 224, 229, 233, 237, 242, 245, 247, 251, 254, 263, 267, 272, 275, 277, 281, 284, 289, 292, 297, 300, 302, 306, 309, 314, 325, 336, 349, 367, 380, 401, 426, 435, 483, 604, 628, 629, 645, 647, 658, 665, 692, 693, 704, 708, 718, 720, 721, 722, 753, 785, 842, 867, 870, 882, 883, 884, 886, 912, 915], "10": [0, 4, 9, 12, 21, 58, 62, 77, 101, 151, 174, 177, 179, 180, 181, 186, 188, 191, 192, 202, 203, 213, 223, 224, 233, 237, 242, 245, 254, 263, 267, 272, 275, 284, 289, 292, 297, 300, 309, 336, 349, 367, 380, 413, 453, 455, 456, 624, 630, 631, 643, 648, 656, 658, 665, 682, 690, 692, 752, 755, 760, 830, 842, 844, 848, 864, 870], "100": [0, 9, 19, 77, 101, 174, 177, 179, 180, 181, 191, 224, 233, 242, 252, 263, 272, 282, 289, 297, 307, 436, 455, 456, 628, 645, 648, 659, 672, 674, 755, 784, 786, 830], "500": [0, 4, 12, 21, 116, 139, 177, 179, 180, 181, 191, 203, 233, 237, 245, 254, 263, 267, 275, 284, 289, 292, 300, 309, 752], "300": [0, 93, 233, 263, 275, 284, 289, 292, 300, 309, 830], "600": [0, 203, 233, 263, 289], "19": [0, 26, 130, 233, 263, 289, 762], "8": [0, 77, 126, 165, 191, 202, 203, 223, 233, 263, 289, 494, 603, 652, 737, 784, 787, 889, 895], "40": [0, 191, 202, 233, 263, 289, 658, 784, 787], "49": [0, 233, 263, 289, 818, 858], "abov": [0, 174, 176, 181, 186, 191, 202, 206, 211, 231, 233, 263, 289, 320, 331, 343, 359, 374, 390, 411, 429, 500, 529, 600, 630, 665, 693, 695, 752, 755, 784, 786, 808, 867, 908], "code": [0, 112, 113, 171, 174, 188, 191, 231, 233, 263, 289, 442, 460, 462, 536, 553, 563, 626, 659, 665, 692, 693, 704, 738, 739, 740, 741, 742, 743, 744, 745, 752, 755, 784, 785, 786, 808, 847, 859, 863, 864, 885], "give": [0, 32, 174, 182, 191, 208, 231, 233, 263, 289, 435, 436, 438, 483, 494, 500, 507, 582, 594, 626, 665, 692, 693, 694, 739, 742, 755, 784, 787, 803, 808, 814, 818, 825, 857, 864], "while": [0, 19, 77, 78, 88, 114, 126, 139, 152, 153, 172, 174, 176, 177, 179, 180, 181, 191, 192, 233, 252, 263, 282, 289, 307, 400, 436, 439, 475, 483, 494, 503, 518, 625, 627, 628, 637, 639, 645, 658, 659, 665, 678, 686, 692, 695, 737, 738, 739, 746, 752, 755, 785, 786, 787, 862, 867, 869, 889], "undistort": [0, 16, 17, 18, 19, 24, 25, 105, 109, 110, 111, 178, 233, 249, 250, 251, 252, 257, 258, 263, 279, 280, 281, 282, 287, 288, 289, 304, 305, 306, 307, 312, 313], "sinc": [0, 26, 34, 58, 114, 165, 166, 174, 177, 179, 180, 181, 186, 187, 191, 233, 259, 263, 289, 401, 435, 436, 452, 453, 454, 455, 475, 494, 512, 513, 517, 518, 519, 520, 553, 563, 599, 612, 634, 637, 645, 647, 648, 652, 658, 659, 668, 692, 695, 711, 748, 762, 784, 786, 808, 814, 818, 825, 876, 877, 878, 879, 880, 881, 892, 895, 902], "time": [0, 4, 5, 6, 26, 31, 32, 58, 62, 66, 68, 77, 93, 97, 98, 115, 116, 117, 119, 122, 123, 126, 132, 139, 141, 153, 165, 166, 168, 169, 174, 177, 179, 180, 181, 182, 183, 186, 187, 189, 191, 195, 224, 231, 233, 237, 238, 263, 267, 269, 289, 292, 336, 349, 367, 380, 436, 438, 445, 446, 469, 473, 475, 476, 482, 483, 486, 487, 491, 504, 506, 574, 599, 604, 605, 606, 607, 610, 611, 617, 619, 625, 631, 632, 633, 637, 639, 640, 641, 645, 647, 648, 650, 651, 652, 653, 659, 665, 672, 676, 678, 680, 684, 686, 687, 688, 692, 693, 694, 708, 714, 716, 718, 726, 727, 728, 731, 732, 738, 739, 741, 742, 744, 745, 755, 757, 758, 759, 760, 762, 784, 785, 786, 787, 789, 807, 808, 813, 814, 815, 816, 817, 818, 820, 822, 823, 824, 825, 826, 828, 830, 832, 833, 835, 838, 839, 843, 850, 854, 857, 859, 866, 867, 873, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 899, 908, 916], "isn": [0, 29, 77, 114, 115, 126, 132, 174, 177, 179, 180, 181, 186, 195, 233, 263, 289, 401, 422, 483, 616, 757, 764, 786], "formal": [0, 26, 28, 130, 174, 186, 233, 263, 289, 314, 325, 336, 349, 367, 380, 400, 426, 748, 755, 757, 758, 762, 784, 808, 899, 908], "need": [0, 19, 24, 26, 34, 55, 70, 77, 91, 94, 109, 114, 115, 116, 117, 120, 121, 122, 123, 128, 130, 137, 150, 170, 174, 177, 178, 179, 180, 181, 182, 186, 187, 188, 191, 192, 195, 202, 231, 233, 252, 257, 263, 282, 287, 289, 307, 312, 341, 355, 357, 362, 372, 386, 388, 393, 400, 407, 409, 410, 413, 414, 415, 421, 422, 426, 435, 436, 440, 452, 454, 455, 460, 469, 475, 483, 494, 500, 512, 516, 518, 582, 594, 604, 610, 616, 619, 623, 624, 625, 626, 627, 629, 631, 637, 645, 647, 648, 651, 652, 659, 665, 676, 684, 692, 693, 694, 708, 714, 737, 738, 744, 752, 753, 755, 757, 759, 762, 784, 785, 786, 787, 788, 813, 830, 835, 840, 845, 848, 850, 859, 885], "both": [0, 55, 56, 58, 60, 62, 70, 73, 77, 124, 129, 136, 137, 149, 150, 174, 183, 185, 186, 189, 191, 192, 194, 195, 202, 214, 233, 263, 289, 314, 325, 426, 447, 450, 472, 478, 495, 497, 507, 508, 510, 513, 517, 519, 536, 553, 563, 575, 587, 612, 616, 623, 625, 634, 637, 648, 658, 665, 684, 692, 695, 723, 752, 755, 781, 784, 786, 788, 789, 807, 808, 830, 842, 844, 845, 854, 861, 863, 864, 867, 869, 876, 878, 879, 881, 889, 892, 895, 899, 902, 904, 908, 912, 913, 917, 918], "summari": [0, 26, 28, 47, 55, 58, 62, 66, 68, 70, 77, 94, 118, 119, 128, 132, 141, 174, 190, 191, 195, 202, 233, 259, 289, 314, 325, 336, 349, 367, 380, 401, 407, 409, 413, 417, 422, 424, 426, 432, 441, 442, 444, 445, 446, 447, 450, 455, 469, 475, 483, 494, 500, 519, 522, 529, 536, 546, 553, 563, 575, 587, 604, 610, 616, 619, 631, 637, 648, 656, 659, 665, 672, 674, 676, 684, 695, 708, 746, 748, 753, 755, 762, 774, 779, 784, 789, 801, 803, 806, 813, 816, 823, 830, 835, 850, 854, 858, 859, 875, 876, 879, 888, 889, 892, 895, 899, 902, 904, 912, 915], "pixel_loc": [1, 6, 98, 234, 239, 264, 269, 290, 294], "old_temperatur": [1, 234, 264, 290], "new_temperatur": [1, 234, 264, 290], "reflect": [1, 77, 191, 234, 264, 290, 482, 624, 645, 647, 652, 672, 674, 692, 693, 752], "new": [1, 4, 10, 16, 24, 26, 27, 39, 40, 41, 42, 43, 44, 45, 58, 78, 92, 102, 109, 113, 114, 115, 124, 126, 128, 129, 136, 149, 165, 174, 175, 182, 185, 186, 187, 231, 234, 237, 243, 249, 257, 259, 260, 261, 264, 267, 273, 279, 287, 290, 292, 298, 304, 312, 336, 349, 367, 380, 400, 413, 417, 432, 453, 458, 459, 483, 484, 485, 494, 499, 501, 504, 506, 508, 517, 520, 522, 524, 525, 529, 531, 532, 539, 541, 542, 543, 546, 548, 549, 553, 556, 558, 559, 560, 563, 566, 569, 570, 571, 574, 578, 581, 583, 584, 590, 593, 595, 596, 601, 603, 619, 626, 630, 647, 652, 664, 671, 676, 695, 696, 699, 704, 705, 711, 738, 752, 755, 757, 759, 760, 762, 763, 770, 771, 772, 784, 786, 787, 788, 801, 804, 815, 822, 828, 830, 837, 838, 839, 843, 850], "done": [1, 16, 17, 19, 26, 31, 32, 55, 58, 60, 68, 69, 70, 71, 73, 127, 139, 143, 153, 174, 177, 179, 180, 181, 186, 187, 191, 234, 249, 250, 252, 264, 279, 280, 282, 290, 304, 305, 307, 400, 407, 409, 436, 438, 457, 475, 478, 480, 483, 484, 485, 488, 491, 494, 495, 496, 497, 498, 517, 537, 538, 540, 547, 554, 555, 557, 564, 565, 568, 575, 576, 577, 580, 587, 588, 589, 592, 599, 602, 616, 618, 630, 637, 639, 645, 651, 652, 676, 678, 686, 692, 693, 704, 752, 754, 757, 784, 785, 786, 787, 801, 803, 806, 811, 830, 832, 835, 840, 842, 844, 912, 915], "back": [1, 34, 174, 175, 221, 234, 264, 290, 483, 484, 651, 784, 816, 850, 854, 899, 915], "b": [1, 94, 125, 127, 174, 186, 189, 225, 234, 264, 290, 325, 329, 335, 354, 356, 366, 367, 371, 379, 380, 385, 387, 397, 417, 419, 443, 500, 506, 507, 511, 522, 602, 607, 625, 653, 724, 727, 737, 746, 748, 749, 751, 785, 888, 902], "ratio": [1, 206, 214, 234, 264, 290, 631, 645, 647, 672, 674, 684, 808], "scale": [1, 8, 14, 24, 28, 109, 174, 191, 234, 241, 247, 257, 264, 271, 277, 287, 290, 296, 302, 312, 442, 445, 446, 447, 627, 648, 739, 741, 752, 782, 864, 892, 895], "old": [1, 29, 30, 126, 174, 234, 264, 290, 485, 692, 752, 760, 764, 801], "c": [1, 2, 3, 4, 6, 9, 16, 18, 95, 96, 101, 168, 174, 177, 178, 179, 180, 181, 186, 189, 225, 228, 231, 234, 235, 236, 237, 242, 249, 251, 264, 265, 266, 267, 269, 272, 279, 281, 290, 291, 292, 294, 297, 304, 306, 325, 329, 331, 332, 335, 354, 356, 366, 367, 371, 374, 375, 379, 380, 385, 387, 390, 392, 397, 417, 419, 443, 457, 463, 466, 467, 495, 497, 499, 500, 504, 506, 507, 511, 522, 538, 544, 547, 551, 555, 561, 565, 572, 577, 585, 589, 597, 602, 607, 625, 632, 653, 657, 715, 716, 718, 724, 725, 739, 741, 744, 745, 756, 816, 818, 825, 902], "space": [1, 116, 117, 138, 139, 151, 153, 171, 174, 181, 182, 186, 187, 195, 207, 234, 264, 290, 314, 325, 336, 349, 367, 380, 401, 426, 450, 472, 491, 604, 619, 625, 629, 645, 648, 652, 653, 656, 658, 676, 752, 755, 757, 785, 808, 835, 843], "desir": [1, 2, 12, 72, 82, 114, 165, 195, 234, 235, 245, 264, 265, 275, 290, 300, 435, 468, 475, 645, 735, 823, 870], "type": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 30, 31, 32, 34, 35, 56, 57, 59, 60, 61, 63, 64, 65, 69, 73, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 165, 166, 167, 168, 169, 170, 172, 174, 183, 186, 188, 191, 194, 195, 196, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 315, 316, 317, 319, 320, 321, 323, 324, 326, 327, 328, 330, 331, 332, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 400, 402, 403, 404, 405, 406, 408, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 433, 437, 443, 448, 449, 453, 457, 459, 463, 468, 472, 473, 477, 478, 479, 480, 481, 483, 486, 487, 491, 492, 493, 495, 497, 499, 501, 503, 505, 506, 507, 509, 511, 522, 523, 525, 527, 530, 532, 534, 538, 541, 542, 544, 547, 549, 551, 555, 558, 559, 561, 565, 569, 570, 572, 574, 575, 577, 581, 582, 583, 585, 587, 589, 593, 594, 595, 597, 599, 600, 601, 602, 603, 605, 607, 609, 610, 612, 614, 615, 617, 618, 619, 620, 622, 623, 626, 631, 632, 634, 636, 637, 638, 643, 644, 645, 648, 650, 652, 653, 655, 657, 658, 660, 662, 669, 675, 676, 677, 679, 682, 683, 684, 685, 690, 691, 692, 693, 694, 695, 697, 699, 703, 704, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 739, 749, 750, 756, 757, 760, 761, 762, 766, 783, 786, 793, 795, 796, 799, 800, 812, 814, 815, 817, 818, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 834, 835, 836, 838, 839, 840, 850, 851, 852, 853, 855, 856, 857, 859, 870, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 896, 905, 911, 913, 914, 916, 917, 918], "pinhole_loc": [2, 235, 265], "appli": [2, 3, 4, 5, 6, 8, 20, 21, 58, 77, 87, 93, 95, 100, 106, 107, 115, 118, 119, 120, 121, 128, 132, 137, 141, 150, 151, 165, 174, 175, 178, 182, 186, 188, 191, 195, 202, 204, 205, 207, 215, 216, 227, 228, 235, 236, 237, 238, 241, 253, 254, 265, 266, 267, 268, 269, 271, 283, 284, 291, 292, 293, 294, 296, 308, 309, 314, 315, 316, 317, 320, 322, 324, 325, 326, 327, 328, 331, 333, 335, 336, 337, 338, 339, 341, 343, 346, 348, 349, 350, 351, 352, 353, 357, 359, 364, 366, 367, 368, 369, 370, 372, 374, 377, 379, 380, 381, 382, 383, 384, 388, 390, 395, 397, 400, 401, 402, 403, 411, 415, 416, 418, 422, 423, 424, 425, 427, 428, 429, 431, 434, 452, 454, 475, 476, 483, 484, 492, 508, 510, 526, 533, 543, 545, 550, 560, 562, 571, 573, 584, 586, 596, 598, 604, 605, 606, 608, 613, 616, 619, 620, 621, 625, 626, 627, 628, 630, 633, 635, 637, 640, 642, 648, 649, 650, 652, 654, 657, 661, 663, 673, 679, 681, 684, 687, 689, 692, 693, 695, 698, 699, 700, 701, 702, 703, 704, 706, 713, 717, 723, 746, 748, 752, 755, 786, 787, 830, 838, 858, 859, 876, 879, 906], "higher": [2, 12, 120, 124, 129, 136, 137, 149, 150, 191, 235, 245, 265, 275, 300, 439, 616, 752, 830], "level": [2, 10, 12, 102, 108, 172, 174, 184, 185, 186, 188, 191, 192, 195, 201, 202, 206, 207, 208, 209, 211, 212, 213, 214, 218, 224, 226, 227, 228, 235, 243, 245, 265, 273, 275, 298, 300, 322, 333, 346, 364, 377, 395, 417, 431, 434, 439, 455, 456, 465, 628, 657, 693, 786, 788, 868], "project_onto_imag": [2, 12, 20, 59, 63, 71, 94, 106, 174, 177, 178, 179, 180, 181, 235, 245, 253, 265, 275, 283, 300, 308, 652, 692, 857], "call": [2, 19, 25, 26, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 51, 55, 58, 59, 62, 63, 66, 68, 72, 73, 75, 77, 78, 81, 91, 113, 114, 116, 117, 128, 172, 174, 177, 178, 179, 180, 181, 185, 186, 188, 191, 192, 203, 210, 225, 228, 235, 252, 258, 261, 265, 282, 288, 291, 307, 313, 314, 325, 326, 336, 341, 345, 349, 353, 357, 363, 367, 368, 372, 376, 380, 381, 384, 388, 394, 400, 407, 408, 409, 412, 413, 415, 417, 418, 424, 425, 432, 436, 438, 444, 455, 456, 457, 468, 472, 475, 483, 488, 491, 494, 495, 497, 503, 509, 538, 547, 555, 565, 577, 589, 604, 606, 607, 608, 610, 611, 613, 618, 620, 621, 630, 631, 633, 635, 637, 640, 642, 645, 647, 648, 649, 651, 653, 654, 657, 659, 660, 664, 665, 666, 667, 668, 672, 673, 679, 681, 684, 687, 689, 692, 693, 699, 704, 705, 738, 739, 746, 748, 750, 753, 755, 756, 758, 759, 760, 762, 764, 770, 771, 772, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 803, 805, 806, 807, 808, 830, 835, 837, 840, 842, 844, 848, 859, 860, 862, 867, 869, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 889, 899, 908, 912, 915, 916, 917, 918], "instead": [2, 8, 10, 12, 31, 32, 55, 58, 66, 68, 71, 77, 96, 102, 108, 114, 116, 117, 125, 126, 127, 128, 132, 145, 174, 183, 184, 185, 186, 192, 195, 202, 203, 211, 231, 235, 241, 243, 245, 259, 265, 271, 273, 275, 289, 296, 298, 300, 320, 331, 343, 359, 374, 390, 400, 411, 429, 450, 453, 469, 476, 485, 494, 496, 505, 517, 519, 536, 546, 624, 625, 627, 628, 629, 630, 645, 647, 648, 653, 658, 659, 661, 663, 665, 668, 672, 676, 692, 695, 698, 699, 700, 701, 702, 706, 714, 743, 755, 758, 760, 778, 781, 782, 786, 787, 803, 810, 813, 823, 830, 840, 842, 844, 845, 863, 864, 867, 868, 889, 890, 893, 897, 900, 903, 906, 909], "case": [2, 12, 34, 42, 51, 55, 58, 62, 71, 77, 78, 174, 177, 178, 179, 180, 181, 182, 186, 188, 191, 192, 201, 207, 211, 212, 223, 235, 245, 265, 275, 300, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 407, 409, 423, 428, 436, 439, 442, 445, 446, 447, 449, 455, 458, 459, 483, 500, 504, 506, 512, 515, 518, 522, 524, 525, 529, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 604, 610, 619, 628, 631, 637, 641, 645, 647, 648, 662, 676, 680, 684, 688, 692, 694, 704, 708, 719, 723, 725, 752, 755, 786, 787, 810, 812, 830, 843, 847, 858, 867, 899, 908], "were": [2, 26, 28, 47, 55, 58, 62, 68, 174, 207, 235, 265, 513, 604, 610, 619, 631, 637, 645, 647, 648, 651, 658, 684, 692, 703, 744, 752, 755, 757, 762, 774, 787, 807, 840, 842, 859, 864, 902, 908], "n": [2, 12, 16, 17, 18, 20, 21, 24, 25, 26, 58, 59, 62, 63, 68, 96, 105, 106, 107, 109, 110, 114, 130, 174, 186, 206, 209, 224, 231, 235, 245, 249, 250, 251, 253, 254, 257, 258, 265, 275, 279, 280, 281, 283, 284, 287, 288, 300, 304, 305, 306, 308, 309, 312, 313, 316, 317, 327, 328, 338, 339, 341, 351, 352, 355, 357, 369, 370, 372, 382, 383, 386, 388, 407, 409, 410, 414, 415, 423, 428, 441, 442, 445, 446, 447, 448, 449, 463, 469, 477, 478, 481, 500, 501, 505, 507, 508, 527, 534, 536, 544, 551, 553, 561, 563, 572, 575, 585, 587, 597, 602, 617, 625, 648, 695, 737, 742, 746, 748, 749, 762, 785, 786, 801, 802, 812, 823, 843, 852, 856, 912, 915], "plane": [2, 20, 77, 106, 170, 186, 235, 253, 265, 283, 308, 320, 331, 343, 359, 374, 390, 411, 429, 486, 487, 647, 648, 665, 692, 908], "output": [2, 82, 122, 123, 167, 170, 174, 202, 203, 208, 209, 214, 235, 265, 442, 444, 445, 446, 447, 463, 491, 544, 551, 561, 572, 585, 597, 695, 715, 719, 720, 721, 722, 724, 725, 727, 739, 740, 741, 743, 744, 745, 749, 757, 810, 812, 816, 823, 867, 869, 882, 883, 884, 886], "_i": [2, 4, 5, 6, 16, 18, 68, 174, 177, 179, 180, 181, 189, 235, 237, 238, 249, 251, 265, 267, 268, 269, 279, 281, 292, 293, 294, 304, 306, 625, 632, 652, 715, 746, 748, 749, 751], "k_1r": [2, 4, 5, 6, 177, 179, 235, 237, 238], "k_2r": [2, 4, 5, 6, 177, 179, 235, 237, 238], "k_3r": [2, 4, 5, 6, 177, 179, 235, 237, 238], "2p_1x_iy_i": [2, 177, 179, 235], "2x_i": [2, 4, 177, 179, 235, 237], "2y_i": [2, 4, 177, 179, 235, 237], "2p_2x_iy_i": [2, 177, 179, 235], "fourth": [2, 4, 233, 237, 648, 784, 892, 904, 908], "sixth": [2, 4, 237, 784, 908], "tangenti": [2, 4, 5, 235, 237, 238, 263, 784], "sqrt": [2, 6, 37, 46, 177, 179, 180, 235, 265, 267, 269, 294, 472, 511, 692, 718, 724, 768, 773, 812], "update_vec": [3, 95, 236, 266, 291], "take": [3, 8, 16, 17, 19, 24, 55, 58, 62, 71, 73, 77, 95, 100, 109, 114, 116, 117, 119, 122, 123, 126, 132, 139, 141, 153, 174, 177, 178, 179, 180, 181, 182, 187, 188, 191, 195, 202, 222, 236, 241, 249, 250, 252, 257, 266, 271, 279, 280, 282, 287, 291, 296, 304, 305, 307, 312, 435, 436, 437, 448, 449, 453, 469, 486, 500, 574, 599, 601, 603, 604, 610, 616, 619, 623, 625, 626, 627, 628, 629, 631, 637, 645, 646, 648, 659, 665, 672, 676, 684, 692, 695, 699, 704, 737, 738, 742, 745, 784, 785, 787, 816, 823, 830, 835, 847, 859, 862, 867, 877, 880, 886], "place": [3, 15, 34, 51, 55, 58, 95, 104, 142, 165, 174, 175, 178, 181, 195, 211, 220, 222, 229, 236, 248, 266, 278, 291, 303, 438, 470, 471, 475, 476, 478, 480, 483, 486, 487, 511, 520, 526, 528, 533, 535, 542, 550, 552, 559, 570, 583, 595, 616, 631, 672, 692, 708, 784, 786], "calcul": [3, 4, 35, 93, 95, 96, 165, 186, 207, 220, 236, 237, 266, 267, 291, 292, 320, 323, 331, 334, 343, 347, 359, 365, 374, 378, 390, 396, 411, 422, 429, 473, 475, 476, 483, 491, 500, 575, 587, 766, 865], "must": [3, 4, 13, 26, 58, 62, 73, 75, 78, 81, 83, 84, 85, 86, 89, 90, 93, 94, 96, 103, 112, 115, 125, 151, 174, 178, 186, 191, 195, 197, 202, 211, 231, 236, 237, 246, 259, 266, 267, 276, 289, 291, 292, 301, 400, 401, 455, 475, 476, 483, 536, 553, 563, 575, 587, 604, 610, 619, 625, 626, 627, 628, 631, 637, 648, 653, 659, 665, 676, 684, 693, 695, 704, 715, 718, 719, 724, 725, 726, 740, 742, 762, 779, 780, 781, 782, 783, 786, 803, 816, 854, 858, 889], "alwai": [3, 26, 27, 55, 58, 62, 174, 177, 179, 180, 181, 186, 191, 236, 266, 291, 314, 325, 336, 349, 367, 380, 401, 479, 486, 492, 499, 536, 553, 563, 575, 587, 604, 610, 619, 628, 631, 637, 647, 648, 665, 684, 694, 696, 752, 755, 762, 763, 786, 787, 804, 808, 820, 826, 852, 856, 867, 892, 895], "come": [3, 58, 62, 66, 95, 174, 177, 179, 180, 181, 195, 236, 398, 518, 741, 755, 786, 801], "last": [3, 4, 55, 58, 62, 140, 174, 214, 236, 237, 266, 267, 291, 292, 574, 601, 631, 645, 647, 648, 659, 668, 708, 724, 786, 787, 818, 825, 860, 863], "oper": [3, 15, 25, 34, 104, 108, 151, 174, 177, 179, 180, 181, 189, 214, 236, 248, 258, 266, 278, 288, 291, 303, 313, 459, 541, 549, 558, 569, 581, 593, 647, 708, 716, 724, 739, 755, 788, 867, 870], "walk": [3, 172, 236, 266, 291, 784, 864], "retriev": [3, 10, 13, 18, 31, 32, 77, 78, 94, 102, 103, 108, 112, 114, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 132, 136, 137, 138, 141, 144, 146, 149, 150, 174, 178, 186, 191, 236, 243, 246, 251, 266, 273, 276, 281, 291, 298, 301, 306, 325, 500, 619, 626, 665, 669, 692, 694, 752, 755, 761, 784, 786, 787, 823, 830, 862, 867], "self": [3, 7, 9, 15, 19, 88, 94, 99, 101, 104, 108, 185, 236, 240, 242, 248, 252, 266, 270, 272, 278, 282, 291, 295, 297, 303, 307, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 477, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 524, 525, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 692, 693, 709, 712, 786, 877, 878, 880, 881], "except": [3, 12, 13, 32, 62, 75, 103, 118, 174, 186, 192, 236, 245, 246, 266, 275, 276, 291, 300, 301, 406, 413, 417, 513, 518, 604, 619, 629, 645, 648, 676, 786, 789, 805, 816], "iter": [3, 16, 27, 58, 60, 62, 68, 77, 78, 79, 80, 88, 121, 136, 144, 146, 149, 150, 151, 174, 177, 179, 180, 181, 186, 191, 203, 214, 236, 249, 260, 266, 279, 291, 304, 321, 332, 336, 341, 344, 345, 349, 357, 361, 363, 367, 372, 375, 376, 380, 388, 392, 394, 407, 408, 409, 412, 413, 415, 417, 459, 469, 481, 491, 541, 546, 549, 558, 569, 574, 581, 593, 601, 603, 609, 612, 614, 615, 622, 625, 627, 631, 633, 634, 636, 644, 645, 648, 651, 655, 656, 683, 691, 696, 752, 760, 761, 763, 804, 831, 866, 871], "unit_vectors_camera": [4, 237, 267, 292], "observ": [4, 31, 33, 47, 55, 56, 58, 59, 60, 62, 63, 70, 71, 73, 116, 130, 172, 174, 177, 179, 180, 181, 186, 188, 192, 195, 237, 267, 292, 314, 325, 407, 409, 448, 449, 458, 459, 479, 500, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 604, 608, 610, 611, 612, 613, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 639, 640, 642, 645, 648, 651, 652, 654, 656, 658, 675, 676, 678, 679, 681, 684, 686, 687, 689, 692, 693, 694, 695, 699, 704, 739, 744, 745, 752, 755, 765, 774, 778, 784, 786, 788, 803, 807, 830, 832, 835, 843, 848, 850, 852, 854, 856, 857, 876, 877, 878, 879, 880, 881, 883, 884, 902, 908], "work": [4, 10, 24, 34, 55, 71, 77, 83, 84, 85, 86, 89, 90, 95, 102, 109, 115, 118, 174, 177, 179, 180, 181, 182, 184, 186, 189, 191, 192, 195, 202, 209, 222, 229, 231, 237, 243, 257, 267, 273, 287, 292, 298, 312, 317, 328, 336, 339, 349, 352, 367, 370, 380, 383, 407, 409, 423, 424, 436, 440, 443, 450, 455, 468, 477, 483, 492, 495, 497, 500, 513, 515, 516, 542, 559, 570, 583, 595, 603, 616, 619, 626, 627, 628, 640, 645, 647, 648, 651, 659, 660, 687, 692, 694, 695, 717, 738, 744, 746, 752, 784, 786, 787, 788, 807, 830, 834, 835, 843, 845, 847, 859, 867, 875, 876, 879, 889], "partial": [4, 5, 6, 96, 97, 98, 178, 186, 202, 211, 218, 237, 238, 239, 267, 268, 269, 292, 293, 294, 318, 329, 340, 354, 355, 356, 371, 385, 386, 387, 410, 414, 419, 448, 449, 504, 632, 699, 812, 817, 824, 867, 882, 883, 884], "deriv": [4, 237, 267, 292, 813, 814, 817, 818, 823, 824, 825], "concaten": [4, 55, 58, 62, 174, 237, 267, 292, 648], "sort": [4, 88, 91, 127, 140, 151, 175, 237, 267, 292, 784, 787], "appropri": [4, 8, 58, 62, 78, 100, 134, 174, 186, 191, 192, 237, 241, 267, 271, 292, 296, 316, 317, 325, 327, 328, 338, 339, 341, 351, 352, 357, 369, 370, 372, 382, 383, 388, 400, 415, 423, 428, 481, 506, 604, 610, 612, 619, 626, 631, 634, 637, 648, 651, 656, 659, 672, 676, 684, 692, 693, 695, 698, 700, 701, 702, 706, 708, 746, 748, 750, 757, 803, 816, 838, 867], "size": [4, 9, 19, 24, 58, 62, 78, 88, 101, 109, 174, 177, 179, 180, 181, 186, 191, 202, 204, 214, 237, 242, 252, 257, 267, 272, 282, 287, 292, 297, 307, 312, 314, 316, 317, 319, 322, 325, 327, 328, 330, 333, 336, 338, 339, 342, 346, 349, 351, 352, 358, 364, 367, 369, 370, 373, 377, 380, 382, 383, 389, 395, 403, 422, 423, 428, 431, 432, 433, 434, 449, 454, 464, 514, 519, 521, 528, 535, 545, 552, 562, 573, 574, 586, 598, 601, 604, 606, 624, 625, 628, 645, 647, 648, 658, 665, 676, 692, 695, 708, 710, 745, 785, 787, 889, 892, 895], "There": [4, 47, 71, 78, 93, 112, 113, 174, 184, 186, 187, 189, 191, 192, 195, 202, 207, 211, 213, 237, 267, 292, 439, 472, 512, 518, 616, 619, 624, 625, 627, 628, 629, 630, 645, 704, 723, 752, 755, 774, 784, 786, 787, 830, 845, 849, 864, 867], "constraint": [4, 124, 129, 136, 137, 149, 150, 188, 237, 267, 292, 604, 610, 619, 623, 631, 637, 645, 648, 684, 692, 694], "format": [4, 47, 119, 121, 132, 138, 141, 143, 145, 165, 174, 178, 182, 183, 189, 195, 196, 214, 237, 267, 292, 437, 465, 503, 509, 518, 631, 739, 744, 745, 759, 774, 784, 785, 786, 808, 810, 842, 863, 864, 868, 888, 889, 904], "2d": [4, 20, 21, 70, 77, 94, 106, 107, 111, 176, 177, 179, 180, 186, 202, 204, 205, 209, 212, 215, 216, 220, 222, 223, 224, 228, 233, 237, 253, 254, 267, 283, 284, 292, 308, 309, 314, 315, 316, 317, 321, 325, 327, 328, 332, 336, 337, 338, 339, 344, 349, 350, 351, 352, 361, 367, 369, 370, 375, 380, 382, 383, 392, 398, 400, 423, 424, 428, 435, 497, 604, 619, 624, 626, 630, 645, 648, 653, 657, 692, 695, 786, 788, 858, 889, 895], "inner": [4, 78, 213, 237, 267, 292, 695], "so": [4, 26, 32, 34, 56, 72, 79, 80, 83, 84, 85, 86, 89, 90, 114, 115, 116, 117, 120, 124, 126, 127, 128, 129, 136, 137, 149, 150, 151, 168, 174, 175, 177, 179, 180, 181, 182, 183, 186, 190, 191, 192, 195, 202, 203, 214, 224, 237, 267, 292, 314, 322, 325, 333, 336, 341, 346, 349, 357, 364, 367, 372, 377, 380, 388, 395, 400, 401, 415, 426, 431, 434, 435, 436, 437, 438, 439, 455, 456, 460, 461, 462, 464, 468, 469, 483, 501, 505, 511, 536, 553, 563, 574, 575, 587, 601, 604, 610, 619, 623, 624, 631, 637, 645, 647, 648, 651, 652, 659, 665, 672, 684, 692, 693, 694, 695, 704, 708, 717, 718, 737, 738, 739, 740, 741, 742, 743, 744, 745, 752, 755, 784, 785, 786, 787, 788, 801, 807, 812, 823, 837, 847, 848, 858, 868, 883, 884, 889, 904, 915], "m": [4, 24, 47, 55, 58, 62, 68, 96, 109, 174, 186, 231, 237, 257, 267, 287, 292, 312, 318, 329, 340, 341, 354, 355, 357, 371, 372, 385, 386, 388, 407, 409, 410, 414, 415, 536, 553, 563, 575, 587, 625, 695, 737, 739, 741, 743, 744, 745, 774, 785, 786, 816, 852, 856, 858, 888], "consid": [4, 24, 26, 31, 32, 55, 58, 62, 77, 79, 80, 81, 83, 84, 85, 86, 89, 90, 109, 114, 126, 174, 175, 191, 192, 202, 206, 210, 214, 237, 257, 267, 287, 292, 312, 436, 443, 448, 449, 477, 480, 512, 513, 516, 517, 518, 522, 546, 604, 610, 615, 619, 628, 631, 637, 639, 645, 647, 648, 656, 658, 659, 660, 665, 672, 678, 684, 686, 695, 697, 752, 755, 757, 762, 786, 787, 816, 817, 823, 824, 830], "outer": [4, 237, 267, 292, 695], "have": [4, 12, 16, 20, 21, 24, 26, 27, 31, 32, 34, 55, 58, 62, 70, 73, 75, 106, 107, 109, 111, 112, 116, 117, 126, 136, 145, 146, 149, 150, 165, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 191, 192, 195, 207, 209, 211, 221, 231, 237, 245, 249, 253, 254, 257, 259, 267, 275, 279, 283, 284, 287, 292, 300, 304, 308, 309, 312, 322, 333, 345, 346, 361, 363, 364, 376, 377, 392, 394, 395, 400, 407, 408, 409, 412, 413, 424, 431, 434, 437, 439, 440, 453, 455, 459, 469, 475, 476, 481, 483, 495, 497, 500, 520, 529, 541, 546, 549, 558, 569, 575, 581, 587, 593, 602, 603, 604, 608, 613, 616, 619, 621, 624, 625, 626, 627, 628, 633, 635, 642, 645, 646, 647, 648, 651, 652, 653, 654, 658, 659, 665, 672, 681, 689, 692, 693, 695, 696, 699, 704, 708, 713, 714, 715, 718, 719, 720, 721, 722, 724, 725, 726, 744, 746, 750, 752, 753, 755, 757, 762, 763, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 804, 807, 808, 816, 823, 830, 835, 840, 842, 845, 859, 860, 861, 864, 867, 885, 895], "bottom": [4, 172, 237, 267, 292, 784], "solv": [4, 26, 29, 68, 71, 77, 93, 172, 174, 191, 225, 228, 237, 267, 292, 506, 507, 602, 606, 625, 627, 645, 648, 651, 652, 657, 746, 747, 748, 749, 750, 751, 752, 760, 762, 764, 787, 803, 902], "your": [4, 12, 21, 26, 31, 32, 55, 75, 107, 112, 115, 139, 151, 152, 153, 174, 176, 181, 182, 183, 186, 188, 191, 195, 202, 231, 237, 245, 254, 267, 275, 284, 292, 300, 309, 417, 435, 436, 438, 455, 469, 483, 513, 608, 616, 621, 623, 624, 625, 626, 627, 628, 641, 642, 645, 648, 651, 652, 654, 659, 665, 680, 681, 688, 689, 692, 708, 737, 738, 739, 741, 744, 751, 752, 762, 781, 782, 784, 785, 786, 787, 813, 816, 823, 835, 843, 847, 854, 859, 885], "entir": [4, 9, 24, 77, 101, 109, 114, 178, 195, 201, 237, 242, 257, 267, 272, 287, 292, 297, 312, 435, 437, 455, 475, 536, 553, 563, 575, 587, 600, 604, 647, 648, 651, 665, 692, 708, 786, 801, 837], "scalar": [4, 14, 28, 58, 62, 167, 174, 237, 247, 267, 277, 292, 302, 511, 536, 553, 563, 575, 587, 648, 708, 718, 720, 721, 722, 786, 808, 853, 858], "repres": [4, 11, 26, 32, 62, 77, 78, 95, 130, 171, 174, 175, 186, 187, 189, 204, 215, 216, 220, 222, 229, 237, 244, 267, 274, 289, 292, 299, 314, 315, 325, 336, 337, 349, 350, 367, 380, 398, 436, 437, 439, 448, 449, 450, 455, 458, 459, 469, 470, 475, 480, 483, 494, 499, 500, 501, 504, 506, 513, 514, 516, 517, 518, 519, 522, 524, 525, 526, 529, 531, 532, 533, 536, 539, 540, 541, 546, 548, 549, 550, 553, 556, 557, 558, 563, 566, 568, 569, 574, 575, 578, 580, 581, 587, 590, 592, 593, 601, 602, 604, 610, 619, 624, 625, 631, 637, 641, 647, 648, 658, 659, 665, 676, 680, 684, 688, 695, 704, 708, 715, 746, 747, 748, 749, 758, 760, 762, 778, 786, 787, 788, 854, 870, 899, 908], "wa": [4, 24, 29, 55, 58, 62, 81, 97, 98, 109, 113, 119, 152, 174, 183, 186, 195, 214, 237, 257, 267, 287, 292, 312, 314, 325, 336, 349, 367, 380, 400, 426, 441, 442, 443, 445, 446, 447, 455, 477, 478, 483, 491, 494, 604, 610, 617, 619, 626, 629, 631, 632, 637, 639, 641, 643, 647, 648, 652, 659, 660, 668, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 704, 738, 744, 755, 764, 778, 786, 787, 808, 850, 854, 857, 889, 899, 902, 908, 917, 918], "captur": [4, 24, 109, 174, 175, 178, 183, 186, 195, 237, 257, 267, 287, 292, 312, 319, 330, 342, 358, 373, 389, 398, 491, 617, 632, 639, 641, 643, 645, 658, 678, 680, 682, 686, 688, 690, 692, 755, 786, 848, 850, 854, 899], "evalu": [4, 186, 224, 237, 267, 292, 318, 322, 329, 333, 340, 346, 354, 355, 364, 371, 377, 385, 386, 395, 400, 410, 414, 417, 431, 434, 604, 619, 648, 676], "exampl": [4, 32, 55, 70, 77, 95, 178, 181, 183, 186, 192, 195, 237, 267, 292, 400, 422, 483, 517, 518, 553, 563, 604, 626, 647, 658, 659, 692, 693, 718, 720, 721, 722, 738, 739, 746, 753, 784, 843, 847, 854, 912, 915], "3000": [4, 12, 21, 237, 245, 254, 267], "4000": [4, 12, 21, 237, 245, 254, 267], "1e": [4, 12, 21, 58, 62, 174, 177, 179, 180, 186, 237, 245, 254, 267, 275, 284, 292, 300, 309, 336, 349, 367, 380, 413, 449, 574, 601, 631, 648, 656, 719, 725, 858], "12": [4, 12, 21, 126, 189, 233, 237, 245, 254, 267, 275, 284, 292, 300, 309, 574, 601, 724, 737, 785, 873, 887], "2e": [4, 12, 21, 177, 179, 180, 181, 237, 245, 254, 267, 275, 284, 292, 300, 309, 435, 729], "14": [4, 12, 21, 237, 245, 254, 267, 275, 284, 292, 300, 309], "3e": [4, 12, 21, 177, 179, 237, 245, 254, 267, 275, 284, 292, 300, 309], "15": [4, 12, 21, 47, 237, 245, 254, 267, 275, 284, 292, 300, 309, 684, 719, 725, 745, 774, 784, 786, 830], "13": [4, 12, 21, 237, 245, 254, 267, 275, 284, 292, 300, 309, 724], "20": [4, 16, 58, 62, 120, 124, 129, 136, 137, 145, 149, 150, 174, 186, 191, 223, 237, 249, 267, 279, 292, 304, 336, 349, 367, 380, 413, 658, 755, 784, 787, 830], "00000000e": [4, 237, 267, 292], "00": [4, 237, 267, 292, 874, 887], "75075000e": [4, 237, 267, 292], "03": [4, 237, 267, 292], "00080000e": [4, 237, 267, 292], "98059600e": [4, 237, 267, 292], "07": [4, 156, 237, 267, 292, 874], "00040000e": [4, 237, 267, 292], "62612499e": [4, 237, 267, 292], "00247537e": [4, 237, 267, 292], "25045000e": [4, 237, 267, 292], "02": [4, 151, 237, 267, 292, 648], "02330450e": [4, 237, 267, 292], "7": [4, 12, 21, 77, 174, 177, 179, 202, 203, 223, 224, 233, 237, 245, 254, 267, 275, 284, 292, 300, 309, 435, 483, 494, 499, 603, 624, 648, 708, 755, 784], "50150000e": [4, 237, 267, 292], "00020000e": [4, 237, 267, 292], "9": [4, 77, 117, 153, 177, 179, 180, 181, 203, 223, 224, 233, 237, 267, 292, 604, 648, 656, 710, 752, 784, 785, 787, 858, 892, 895], "60191999e": [4, 237, 267, 292], "00540096e": [4, 237, 267, 292], "40048000e": [4, 237, 267, 292], "02640512e": [4, 237, 267, 292], "28025600e": [4, 237, 267, 292], "01": [4, 237, 267, 292, 708, 801, 874], "60032000e": [4, 237, 267, 292], "25025000e": [4, 237, 267, 292], "00810150e": [4, 237, 267, 292], "50050000e": [4, 237, 267, 292], "02858333e": [4, 237, 267, 292], "66700000e": [4, 237, 267, 292], "mathemat": [4, 5, 6, 154, 155, 156, 157, 159, 160, 161, 181, 186, 189, 237, 238, 267, 268, 269, 292, 293, 294, 355, 356, 386, 387, 410, 414, 419, 441, 442, 445, 446, 447, 448, 449, 500, 504, 529, 632, 715, 716, 720, 751, 812], "_p": [4, 5, 6, 16, 68, 96, 97, 98, 174, 177, 178, 179, 180, 181, 237, 238, 239, 249, 267, 268, 269, 279, 292, 293, 294, 304], "cccc": [4, 237, 267, 292, 602, 715], "d": [4, 16, 186, 237, 249, 263, 267, 279, 304, 349, 354, 356, 360, 361, 366, 380, 385, 387, 391, 392, 397, 417, 419, 420, 506, 507, 602, 652, 743, 744, 784, 888], "chain": [4, 237, 267, 292], "rule": [4, 167, 168, 237, 267, 292, 469], "gather": [4, 5, 6, 58, 174, 181, 237, 238, 267, 268, 269, 292, 293, 294], "_c": [4, 5, 6, 18, 97, 98, 177, 178, 179, 180, 181, 233, 237, 238, 239, 251, 267, 268, 269, 281, 292, 293, 294, 306, 500, 504, 505, 506, 507, 508, 625, 632], "cc": [4, 5, 6, 68, 174, 186, 237, 238, 267, 269, 289, 292, 294, 325], "a_1t": [4, 5, 6, 177, 179, 180, 181, 237, 238, 267, 268, 269, 292, 293, 294], "a_2t": [4, 5, 6, 177, 179, 180, 181, 237, 238, 267, 268, 269, 292, 293, 294], "a_3t": [4, 5, 6, 177, 179, 180, 181, 237, 238, 267, 268, 269, 292, 293, 294], "ccccc": [4, 186, 289, 318, 340], "4x_i": 4, "6x_i": 4, "2x_iy_i": [4, 237], "4y_i": 4, "r_6y_i": 4, "split": [4, 5, 6, 151, 201, 202, 207, 208, 224, 237, 238, 267, 269, 436, 450, 455, 456, 786, 788, 810], "_": [4, 5, 6, 16, 18, 58, 69, 77, 93, 174, 186, 191, 237, 238, 249, 251, 267, 268, 269, 279, 281, 293, 294, 304, 306, 356, 387, 419, 500, 504, 602, 604, 619, 625, 631, 648, 676, 693, 712, 716, 718, 726, 756, 778, 786, 803, 816, 867, 883, 884], "2p_1y_i": [4, 5, 6, 237, 238], "4p_2x_i": [4, 5, 6, 237, 238], "2p_1x_i": [4, 5, 6, 237, 238], "2p_2y_i": [4, 5, 6, 237, 238], "4p_1y_i": [4, 5, 6, 237, 238], "2p_2x_i": [4, 5, 6, 237, 238], "2k_1": [4, 5, 6, 237, 238], "4k_2r": [4, 5, 6, 237, 238], "6k_3r": [4, 5, 6, 237, 238], "p_2x_i": [4, 5, 6, 237, 238], "p_2y_i": [4, 5, 6, 237, 238], "p_1x_i": [4, 5, 6, 237, 238], "p_1y_i": [4, 5, 6, 237, 238], "z_c": [4, 5, 177, 179, 180, 181, 237, 238, 267, 268, 292, 293], "x_c": [4, 5, 177, 179, 180, 181, 237, 238, 267, 268, 292, 293], "y_c": [4, 5, 177, 179, 180, 181, 237, 238, 267, 268, 292, 293], "k_x": [4, 180, 181, 237, 263, 267, 268, 289, 292, 293, 294], "quad": [4, 174, 237, 267, 292, 500], "k_y": [4, 180, 181, 237, 263, 267, 268, 289, 292, 293, 294], "after": [4, 5, 6, 26, 27, 31, 32, 55, 58, 62, 77, 78, 81, 87, 88, 91, 130, 151, 174, 186, 191, 192, 202, 205, 231, 237, 238, 260, 267, 268, 269, 292, 293, 294, 314, 315, 316, 317, 325, 326, 327, 328, 336, 337, 338, 339, 349, 350, 351, 352, 367, 368, 369, 370, 380, 381, 382, 383, 400, 401, 413, 423, 425, 427, 428, 436, 501, 615, 645, 648, 656, 665, 672, 692, 695, 696, 745, 746, 748, 752, 755, 758, 762, 763, 784, 787, 804, 805, 806, 807, 808, 830, 840, 859, 887], "befor": [4, 5, 6, 31, 32, 34, 39, 40, 41, 43, 44, 45, 55, 58, 62, 73, 77, 78, 115, 165, 174, 186, 191, 202, 205, 227, 231, 237, 238, 261, 267, 268, 269, 292, 293, 294, 314, 325, 336, 341, 349, 357, 362, 367, 372, 380, 388, 393, 401, 415, 421, 426, 448, 455, 475, 478, 604, 606, 610, 611, 624, 625, 627, 631, 633, 637, 640, 645, 648, 649, 651, 653, 656, 658, 659, 661, 662, 663, 665, 673, 684, 687, 693, 695, 704, 705, 708, 752, 755, 770, 771, 772, 779, 780, 781, 782, 783, 784, 787, 801, 803, 806, 808, 830, 837, 859, 867, 887, 889, 916], "bullet": [4, 237, 267, 292, 652, 718, 724, 726, 727], "skew": [4, 5, 237, 238, 267, 292, 718, 726, 902], "symmetr": [4, 186, 237, 267, 292, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 423, 428, 718, 726, 727, 858], "cross": [4, 77, 184, 186, 202, 204, 220, 221, 222, 229, 237, 267, 292, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 423, 428, 579, 591, 604, 606, 615, 616, 617, 624, 625, 627, 629, 639, 645, 648, 651, 658, 678, 686, 695, 698, 718, 726, 727, 787, 788, 816], "product": [4, 125, 186, 213, 222, 237, 267, 292, 479, 506, 579, 591, 604, 646, 648, 656, 658, 716, 718, 726, 727, 744, 817, 824], "form": [4, 18, 24, 109, 137, 174, 186, 187, 188, 189, 191, 195, 202, 237, 251, 257, 267, 281, 287, 292, 306, 312, 314, 321, 325, 332, 341, 344, 357, 361, 372, 375, 388, 392, 398, 415, 417, 424, 448, 450, 456, 472, 500, 511, 512, 599, 600, 602, 603, 625, 626, 627, 692, 695, 708, 713, 715, 716, 718, 719, 720, 721, 722, 724, 725, 726, 744, 755, 784, 786, 787, 830, 858, 892, 899, 908], "a_": [4, 5, 6, 58, 174, 177, 179, 180, 181, 237, 238, 267, 268, 269, 292, 293, 294], "effect": [4, 78, 177, 179, 180, 181, 195, 202, 211, 218, 237, 625, 627, 628, 637, 659], "vectors_in_camera_fram": [5, 97, 238, 268, 293], "limbscan": [5, 6, 97, 98, 238, 239, 268, 269, 293, 294], "predict": [5, 6, 56, 60, 71, 97, 98, 174, 192, 195, 221, 238, 239, 268, 269, 293, 294, 483, 487, 604, 610, 612, 615, 616, 617, 618, 619, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 640, 645, 646, 647, 648, 651, 652, 656, 658, 684, 687, 692, 694, 695, 697, 741, 744, 758, 760, 782, 787, 803, 830, 838, 839, 844, 852, 856, 902], "respect": [5, 6, 26, 31, 32, 77, 97, 98, 115, 165, 174, 177, 179, 180, 181, 186, 187, 195, 203, 214, 238, 239, 268, 269, 293, 294, 318, 329, 340, 341, 354, 355, 357, 371, 372, 385, 386, 388, 410, 414, 415, 438, 455, 479, 483, 604, 610, 619, 631, 632, 637, 645, 647, 648, 651, 652, 656, 665, 676, 684, 714, 728, 735, 747, 755, 762, 786, 787, 789, 817, 818, 823, 824, 825, 830, 867, 879, 902], "3xn": [5, 26, 66, 97, 168, 174, 238, 268, 293, 458, 459, 466, 469, 501, 504, 505, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 582, 590, 593, 594, 601, 617, 618, 727, 746, 748, 755, 760, 762, 812], "k_": [5, 177, 179, 180, 235, 238, 263, 267], "applic": [5, 12, 20, 21, 55, 58, 62, 106, 107, 114, 174, 186, 231, 238, 245, 253, 254, 268, 275, 283, 284, 293, 300, 308, 309, 316, 317, 327, 328, 338, 339, 341, 351, 352, 357, 369, 370, 372, 382, 383, 388, 415, 423, 428, 610, 619, 626, 630, 631, 641, 646, 680, 688, 692, 747], "nx2x3": [5, 97, 238, 268, 293, 812], "2xn": [6, 26, 55, 58, 59, 62, 63, 98, 174, 209, 211, 213, 239, 269, 294, 472, 612, 617, 634, 653, 755, 760, 762], "we": [6, 70, 71, 77, 92, 93, 151, 174, 176, 177, 179, 180, 181, 182, 185, 186, 187, 188, 191, 192, 224, 231, 239, 269, 294, 398, 435, 436, 439, 449, 450, 453, 455, 456, 458, 459, 461, 464, 465, 466, 467, 478, 480, 483, 484, 486, 487, 488, 489, 495, 497, 498, 500, 504, 506, 518, 519, 524, 525, 531, 532, 539, 541, 546, 548, 549, 556, 558, 566, 569, 574, 575, 578, 581, 587, 590, 593, 599, 601, 602, 604, 610, 617, 619, 624, 626, 628, 629, 630, 631, 637, 639, 645, 647, 648, 650, 651, 652, 658, 659, 664, 665, 669, 672, 676, 678, 684, 686, 692, 693, 695, 714, 728, 738, 739, 745, 751, 752, 753, 755, 762, 784, 785, 786, 787, 788, 809, 816, 817, 823, 824, 830, 832, 838, 840, 842, 844, 845, 849, 863, 867, 869, 875, 876, 877, 878, 879, 880, 881], "nx3x2": [6, 98, 239, 269, 294], "deep": [7, 99, 240, 270, 295, 709], "object": [7, 10, 11, 23, 26, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 66, 68, 70, 75, 77, 78, 88, 92, 93, 95, 99, 102, 108, 119, 151, 165, 166, 169, 172, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 195, 202, 206, 209, 214, 240, 243, 244, 256, 261, 270, 273, 274, 286, 289, 295, 298, 299, 311, 399, 401, 436, 437, 438, 450, 455, 457, 468, 469, 470, 472, 473, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 500, 503, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 526, 529, 533, 538, 542, 543, 545, 547, 550, 555, 559, 560, 562, 565, 570, 571, 573, 574, 577, 583, 584, 586, 589, 595, 596, 598, 600, 602, 604, 606, 610, 619, 624, 628, 629, 630, 631, 632, 637, 639, 640, 641, 643, 647, 648, 652, 656, 659, 665, 668, 669, 674, 675, 676, 678, 680, 682, 684, 686, 687, 688, 690, 692, 693, 695, 697, 699, 704, 705, 708, 710, 711, 714, 715, 728, 740, 741, 748, 750, 753, 755, 758, 759, 762, 765, 768, 770, 771, 772, 773, 779, 780, 781, 786, 787, 788, 801, 803, 816, 823, 830, 835, 847, 848, 849, 850, 852, 853, 854, 856, 859, 867, 876, 877, 878, 879, 880, 881, 882, 885, 886, 887, 889, 891, 892, 895, 896, 899, 902, 904, 905, 908, 912, 915, 916], "break": [7, 62, 99, 174, 186, 195, 240, 270, 295, 413, 709], "separ": [7, 13, 20, 21, 99, 103, 106, 107, 126, 127, 138, 151, 191, 208, 224, 240, 246, 253, 254, 270, 276, 283, 284, 295, 301, 308, 309, 453, 625, 628, 648, 786, 830, 833], "them": [8, 26, 34, 46, 77, 93, 100, 108, 112, 113, 114, 115, 122, 124, 125, 126, 127, 129, 132, 136, 137, 141, 149, 150, 168, 174, 184, 186, 192, 195, 241, 271, 296, 436, 437, 453, 455, 461, 464, 500, 518, 603, 610, 611, 616, 617, 626, 631, 633, 647, 665, 692, 699, 708, 717, 762, 773, 784, 786, 787, 788, 806, 809, 816, 823, 830, 842, 848, 854, 859, 862, 863, 864, 867], "distortion_map": [8, 94, 100, 178, 241, 271, 296], "apply_distort": [8, 16, 241, 249, 271, 279, 296, 304], "reconvert": [8, 241, 271, 296], "map": [8, 9, 70, 74, 94, 101, 176, 178, 241, 242, 271, 272, 296, 297, 500, 501, 518, 536, 553, 563, 575, 587, 645, 648, 656, 784, 786, 788, 816, 823, 852, 856, 897], "step": [9, 19, 26, 33, 55, 58, 62, 70, 87, 91, 101, 174, 186, 188, 191, 192, 222, 231, 242, 252, 272, 282, 297, 307, 316, 317, 327, 328, 338, 339, 341, 351, 352, 357, 369, 370, 372, 382, 383, 388, 403, 415, 423, 428, 574, 601, 604, 610, 625, 627, 628, 631, 641, 645, 648, 651, 680, 684, 688, 693, 752, 753, 755, 760, 762, 765, 784, 785, 786, 787, 816, 823, 838, 840, 842, 843, 859], "across": [9, 55, 58, 62, 68, 101, 174, 186, 242, 272, 297, 426, 450, 624, 779, 830, 844], "well": [9, 34, 55, 71, 94, 101, 113, 115, 119, 132, 141, 151, 174, 182, 183, 186, 189, 191, 192, 195, 202, 207, 208, 210, 214, 242, 260, 272, 297, 314, 325, 398, 439, 450, 453, 481, 483, 494, 495, 497, 500, 513, 517, 575, 587, 604, 608, 610, 619, 621, 623, 624, 625, 626, 627, 628, 631, 637, 642, 645, 647, 648, 652, 654, 676, 681, 684, 689, 692, 695, 704, 714, 752, 755, 782, 784, 786, 787, 788, 813, 823, 854, 864, 867, 869], "grid": [9, 24, 101, 109, 191, 202, 223, 242, 257, 272, 287, 297, 312, 604, 624, 645, 648, 656, 658, 741, 745, 787, 808, 892, 895, 904], "col": [9, 19, 26, 101, 203, 206, 211, 212, 213, 214, 242, 252, 272, 282, 297, 307, 472, 604, 610, 619, 631, 637, 648, 658, 684, 762], "np": [9, 19, 26, 55, 58, 62, 77, 101, 131, 174, 186, 196, 242, 252, 272, 282, 297, 307, 321, 332, 344, 361, 375, 392, 435, 450, 457, 458, 463, 495, 497, 499, 500, 501, 503, 504, 505, 506, 507, 509, 510, 511, 523, 524, 525, 527, 530, 531, 532, 534, 538, 539, 544, 547, 548, 551, 555, 556, 561, 565, 566, 572, 575, 577, 578, 585, 587, 589, 590, 597, 603, 604, 625, 627, 631, 648, 658, 692, 693, 783, 784, 816, 823, 829, 870, 892, 899, 908], "meshgrid": [9, 101, 203, 224, 242, 272, 297], "arang": [9, 19, 26, 101, 174, 224, 242, 252, 272, 282, 297, 307], "ij": [9, 101, 242, 272, 297, 724], "matplotlib": [9, 101, 231, 242, 272, 297, 435, 787], "pyplot": [9, 101, 242, 272, 297, 435, 787], "plt": [9, 101, 242, 272, 297, 435, 787], "inst": [9, 101, 185, 242, 272, 297], "actual": [9, 11, 58, 101, 115, 174, 186, 192, 195, 242, 244, 272, 274, 289, 297, 299, 398, 400, 401, 422, 435, 455, 460, 461, 464, 475, 478, 494, 495, 496, 497, 500, 518, 519, 522, 582, 594, 604, 619, 625, 626, 627, 628, 629, 639, 641, 645, 647, 648, 653, 658, 659, 665, 671, 678, 680, 686, 688, 692, 714, 728, 735, 736, 785, 786, 787, 831, 867, 889], "prow": [9, 101, 242, 272, 297], "pcol": [9, 101, 242, 272, 297], "dist": [9, 101, 242, 272, 297], "1024": [9, 101, 177, 179, 180, 181, 242, 272, 297, 435, 784], "figur": [9, 73, 74, 75, 101, 174, 181, 188, 192, 242, 272, 297, 459, 541, 549, 558, 569, 574, 581, 593, 599, 600, 601, 604, 610, 623, 624, 628, 630, 631, 637, 639, 640, 641, 643, 645, 648, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 831, 863, 864], "contour": [9, 101, 178, 242, 272, 297], "linalg": [9, 101, 242, 272, 297, 692], "norm": [9, 101, 242, 272, 297, 692, 855], "reshap": [9, 26, 101, 174, 242, 272, 297], "clabel": [9, 101, 242, 272, 297], "inlin": [9, 101, 242, 272, 297], "fontsiz": [9, 101, 242, 272, 297], "quiver": [9, 101, 178, 242, 272, 297], "flatten": [9, 87, 101, 184, 201, 202, 207, 242, 272, 297, 782, 908], "sampl": [9, 24, 101, 109, 174, 186, 201, 207, 242, 257, 272, 287, 297, 312, 317, 328, 339, 352, 370, 383, 398, 423, 436, 604, 616, 617, 624, 625, 627, 645, 647, 652, 665, 672, 674, 729, 730, 738, 745, 752, 755, 760, 866, 870, 892, 895], "tupl": [9, 12, 19, 101, 136, 146, 148, 149, 150, 152, 170, 174, 186, 202, 203, 206, 207, 208, 210, 214, 224, 242, 245, 252, 272, 275, 282, 297, 300, 307, 341, 357, 372, 388, 415, 448, 449, 453, 472, 478, 480, 487, 495, 497, 511, 600, 605, 607, 609, 612, 614, 617, 618, 622, 634, 636, 637, 644, 650, 652, 653, 655, 683, 691, 717, 723, 756, 757, 760, 761, 803, 820, 826, 836, 839, 878, 881], "classmethod": [10, 102, 186, 243, 273, 298, 321, 332, 344, 345, 361, 362, 363, 375, 376, 392, 393, 394, 405, 408, 412, 421, 430, 704], "elem": [10, 23, 102, 108, 243, 256, 273, 286, 298, 311], "construct": [10, 42, 102, 174, 176, 243, 273, 298, 400, 745, 755], "cl": [10, 102, 243, 273, 298], "etre": [10, 23, 102, 108, 243, 256, 273, 286, 298, 311], "_element": [10, 23, 102, 108, 243, 256, 273, 286, 298, 311], "initi": [10, 26, 27, 39, 40, 41, 42, 43, 44, 45, 58, 62, 77, 78, 82, 88, 102, 114, 116, 117, 119, 132, 141, 172, 174, 176, 177, 179, 180, 181, 186, 187, 188, 189, 191, 192, 195, 243, 259, 261, 273, 298, 314, 321, 325, 332, 336, 341, 344, 345, 349, 357, 361, 362, 363, 367, 372, 375, 376, 380, 388, 392, 393, 394, 400, 401, 407, 408, 409, 412, 413, 415, 421, 422, 424, 426, 430, 435, 436, 438, 455, 456, 478, 483, 500, 519, 553, 563, 574, 575, 587, 601, 610, 616, 624, 627, 631, 645, 648, 649, 651, 656, 665, 672, 673, 674, 692, 695, 696, 704, 705, 708, 745, 746, 748, 752, 757, 760, 762, 763, 770, 771, 772, 782, 789, 803, 804, 830, 832, 833, 834, 835, 842, 843, 844, 847, 848, 854, 858, 859, 917, 918], "loop": [10, 15, 102, 104, 108, 243, 248, 273, 278, 298, 303, 610, 631, 637, 684, 698, 700, 701, 702, 706, 784, 787], "important_attribut": [10, 15, 94, 102, 104, 108, 178, 243, 248, 273, 278, 289, 298, 303], "search": [10, 102, 112, 120, 124, 129, 136, 137, 149, 150, 151, 173, 174, 192, 208, 223, 243, 273, 298, 604, 624, 628, 630, 637, 640, 645, 647, 648, 651, 656, 658, 684, 687, 692, 755, 757, 807, 830, 859], "inform": [10, 26, 29, 30, 33, 77, 78, 92, 102, 113, 114, 130, 164, 172, 174, 175, 182, 183, 187, 191, 193, 195, 202, 214, 220, 243, 273, 298, 400, 455, 483, 507, 513, 604, 610, 619, 624, 625, 626, 627, 628, 631, 637, 645, 647, 648, 659, 665, 667, 676, 684, 692, 698, 700, 701, 702, 708, 711, 712, 717, 739, 752, 753, 755, 757, 759, 762, 764, 765, 784, 785, 787, 803, 805, 806, 808, 842, 844, 892], "found": [10, 48, 49, 50, 52, 53, 54, 68, 102, 112, 137, 138, 150, 151, 174, 213, 214, 220, 222, 229, 232, 243, 262, 273, 298, 506, 546, 574, 599, 601, 602, 604, 616, 617, 625, 627, 637, 648, 651, 656, 658, 659, 665, 668, 684, 692, 707, 748, 752, 757, 760, 775, 776, 777, 778, 808, 844, 860], "warn": [10, 48, 49, 50, 52, 53, 54, 58, 62, 102, 174, 178, 231, 243, 262, 273, 298, 475, 483, 488, 637, 640, 651, 684, 687, 704, 707, 708, 738, 739, 740, 741, 742, 743, 744, 745, 775, 776, 777, 784, 787, 861], "thrown": [10, 102, 174, 191, 243, 273, 298], "doe": [10, 29, 30, 55, 58, 62, 75, 81, 83, 84, 89, 90, 93, 102, 113, 116, 117, 119, 120, 121, 137, 150, 151, 174, 186, 195, 243, 273, 298, 314, 325, 336, 349, 367, 380, 401, 406, 435, 436, 450, 455, 480, 483, 501, 505, 542, 559, 570, 582, 583, 594, 595, 604, 606, 610, 611, 615, 619, 625, 627, 629, 630, 631, 633, 637, 640, 646, 648, 651, 658, 665, 684, 687, 698, 700, 701, 702, 704, 706, 714, 737, 739, 740, 752, 755, 759, 764, 784, 816, 823, 830, 831, 835, 838, 854, 867, 868, 876, 879, 902, 908, 915], "necessari": [10, 26, 102, 113, 174, 195, 230, 231, 243, 273, 298, 400, 665, 755, 762, 830, 859], "modul": [10, 55, 70, 71, 72, 76, 77, 102, 108, 111, 112, 113, 114, 115, 116, 117, 140, 166, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 201, 218, 231, 243, 273, 289, 298, 398, 400, 435, 436, 437, 438, 439, 440, 443, 473, 478, 483, 488, 491, 512, 513, 514, 515, 516, 517, 518, 574, 604, 610, 615, 619, 623, 624, 625, 626, 627, 628, 629, 630, 631, 645, 646, 647, 648, 656, 665, 675, 676, 692, 693, 704, 744, 751, 752, 753, 754, 784, 786, 787, 788, 842, 843, 844, 845, 847, 848, 849, 854, 865, 867, 868, 869, 885, 914], "load": [10, 27, 70, 77, 78, 82, 87, 91, 94, 102, 113, 172, 174, 176, 177, 178, 179, 180, 181, 183, 191, 195, 243, 260, 273, 289, 298, 436, 604, 610, 631, 637, 645, 648, 659, 662, 664, 665, 669, 671, 684, 693, 696, 738, 739, 740, 741, 742, 744, 745, 752, 753, 755, 763, 782, 786, 804, 816, 823, 830, 844, 867, 890, 893, 897, 899, 900, 902, 903, 904, 906, 909], "file": [10, 19, 23, 72, 73, 74, 75, 77, 78, 82, 94, 102, 108, 112, 113, 114, 116, 117, 119, 122, 123, 126, 132, 138, 139, 141, 142, 150, 151, 152, 153, 172, 174, 175, 177, 178, 179, 180, 181, 195, 196, 243, 252, 256, 273, 282, 286, 298, 307, 311, 436, 458, 460, 462, 539, 548, 556, 566, 578, 590, 631, 645, 647, 664, 665, 667, 668, 670, 671, 737, 738, 739, 740, 741, 742, 743, 744, 745, 752, 755, 779, 780, 781, 782, 784, 785, 787, 803, 808, 810, 816, 823, 833, 842, 844, 849, 859, 861, 863, 864, 868, 869, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918], "request": [11, 26, 32, 75, 115, 119, 122, 123, 132, 141, 144, 146, 147, 174, 177, 179, 180, 181, 182, 186, 244, 274, 299, 320, 331, 343, 359, 374, 390, 407, 409, 411, 429, 438, 472, 478, 483, 488, 494, 495, 497, 604, 605, 610, 612, 626, 627, 628, 631, 634, 637, 640, 648, 650, 651, 659, 684, 687, 692, 693, 699, 731, 732, 733, 734, 736, 745, 757, 758, 784, 785, 786, 815, 822, 828, 839, 871, 912], "points_in_camera_fram": [12, 21, 107, 245, 254, 275, 284, 300, 309], "don": [12, 128, 174, 177, 179, 180, 181, 231, 245, 275, 300, 400, 455, 469, 500, 519, 623, 624, 627, 628, 645, 651, 665, 692, 694, 755, 784, 786, 787, 845, 848, 863, 867, 885, 902], "matter": [12, 93, 245, 275, 300, 314, 325, 336, 349, 367, 380, 652, 786, 866, 889], "differ": [12, 20, 62, 64, 71, 77, 78, 93, 106, 112, 114, 119, 168, 172, 174, 182, 184, 186, 188, 189, 191, 192, 193, 194, 195, 202, 207, 228, 245, 253, 275, 283, 300, 308, 336, 349, 367, 380, 442, 450, 469, 473, 483, 494, 518, 536, 553, 563, 575, 587, 603, 616, 619, 623, 624, 625, 627, 629, 641, 645, 648, 657, 680, 688, 692, 693, 694, 695, 704, 740, 751, 752, 784, 786, 787, 823, 847, 864, 867], "align": [12, 26, 31, 32, 34, 44, 66, 67, 68, 69, 70, 71, 72, 73, 174, 204, 222, 229, 245, 275, 300, 436, 450, 451, 455, 469, 494, 496, 500, 508, 510, 536, 553, 563, 575, 587, 616, 624, 631, 645, 658, 659, 746, 747, 748, 749, 750, 751, 752, 787], "ignor": [12, 19, 26, 48, 49, 50, 52, 53, 54, 55, 56, 58, 62, 77, 115, 174, 186, 195, 202, 206, 231, 245, 252, 259, 262, 275, 282, 300, 307, 355, 386, 410, 414, 437, 442, 445, 446, 447, 467, 468, 469, 475, 481, 486, 487, 500, 603, 604, 610, 619, 626, 631, 637, 648, 656, 676, 684, 695, 707, 755, 757, 762, 775, 776, 777, 784, 787, 838, 859, 908, 912, 915], "dure": [12, 55, 58, 62, 81, 82, 174, 245, 275, 300, 619, 630, 658, 746, 787, 908], "enter": [12, 21, 78, 82, 181, 195, 245, 254, 275, 284, 300, 309, 784, 785, 786, 870, 889, 892, 895, 899, 902, 904, 908], "12000": [12, 21, 245, 254, 275, 284, 300, 309], "00083333": [12, 245, 275, 300], "00166667": [12, 245, 275, 300], "25": [12, 21, 162, 245, 254, 300, 309, 435, 574, 601, 729, 808, 830, 858], "66666667": [12, 21, 245, 254, 300, 309, 718], "13000": [12, 21, 245, 254, 275, 284, 300, 309], "9000": [12, 21, 245, 254, 275, 284, 300, 309], "5000": [12, 21, 245, 254, 275, 284, 300, 309, 784], "00153846": [12, 245, 275, 300], "00333333": [12, 245, 275, 300], "008": [12, 245, 275, 300], "00384615": [12, 245, 275, 300], "00666667": [12, 245, 275, 300], "014": [12, 245, 275, 300], "46153846": [12, 21, 245, 254, 300, 309], "501": [12, 21, 245, 254, 275, 284, 300, 309, 616], "502": [12, 21, 245, 254, 300, 309], "53846154": [12, 21, 245, 254, 300, 309], "505": [12, 21, 245, 254, 300, 309], "00307694": [12, 245, 300], "0066667": [12, 245, 300], "01600007": [12, 245, 300], "00333335": [12, 245, 300], "00769234": [12, 245, 300], "01333339": [12, 245, 300], "02800013": [12, 245, 300], "499": [12, 21, 245, 254, 300, 309], "49999775": [12, 21, 245, 254, 300, 309], "07691892": [12, 21, 245, 254, 300, 309], "497": [12, 21, 245, 254, 300, 309], "999991": [12, 21, 245, 254, 300, 309], "495": [12, 21, 245, 254, 300, 309], "1999784": [12, 21, 245, 254, 300, 309], "498": [12, 21, 245, 254, 300, 309], "66666066": [12, 21, 245, 254, 300, 309], "496": [12, 21, 245, 254, 300, 309], "92306307": [12, 21, 245, 254, 300, 309], "494": [12, 21, 245, 254, 300, 309], "66664266": [12, 21, 245, 254, 300, 309], "488": [12, 21, 245, 254, 300, 309], "79994959": [12, 21, 245, 254, 300, 309], "label": [13, 28, 103, 144, 151, 174, 202, 206, 224, 246, 276, 301, 623, 782, 784, 785, 786, 803, 807, 808, 870, 899], "name": [13, 73, 74, 75, 76, 77, 103, 111, 112, 113, 115, 130, 140, 174, 183, 194, 195, 201, 218, 246, 276, 301, 460, 462, 473, 483, 604, 610, 615, 619, 623, 626, 630, 631, 637, 645, 648, 664, 665, 671, 672, 674, 675, 676, 684, 692, 693, 694, 695, 699, 704, 755, 779, 780, 781, 782, 784, 786, 787, 808, 810, 813, 816, 823, 863, 875, 876, 879, 882, 889, 892, 895, 899, 902, 904, 908, 911, 914], "interpret": [13, 78, 82, 103, 195, 246, 276, 301, 704, 708, 710], "pretti": [13, 103, 128, 188, 246, 276, 301, 437, 624, 627, 647, 665, 692, 787], "print": [13, 28, 47, 48, 49, 50, 52, 53, 54, 58, 70, 77, 103, 174, 178, 191, 224, 246, 262, 276, 301, 453, 456, 465, 475, 483, 488, 637, 640, 651, 687, 704, 707, 708, 742, 753, 774, 775, 776, 777, 784, 785, 786, 861, 869, 912, 915, 918], "getattr": [13, 94, 103, 246, 276, 301, 692], "caus": [14, 191, 247, 277, 302, 604, 648, 676, 752, 781, 840], "shift": [14, 124, 129, 136, 149, 247, 277, 302, 616, 617, 628, 637, 639, 645, 648, 652, 658, 678, 686], "celsiu": [14, 247, 277, 302, 786], "566": [14, 247, 277, 302], "125": [14, 215, 247, 277, 302], "35": [14, 247, 277, 302, 658, 745], "875": [14, 247, 277, 302], "replac": [15, 28, 39, 41, 43, 44, 45, 76, 77, 93, 104, 114, 126, 174, 229, 248, 261, 278, 303, 693, 694, 704, 705, 719, 725, 770, 771, 772, 784, 786, 863, 864, 889, 899, 908], "primarili": [15, 55, 70, 77, 104, 117, 174, 182, 187, 192, 195, 231, 248, 278, 303, 449, 466, 467, 475, 494, 500, 512, 514, 517, 529, 744, 803, 835, 850, 854, 859], "maintain": [15, 104, 174, 191, 231, 248, 278, 303, 649, 673], "link": [15, 62, 104, 174, 231, 248, 278, 303, 843, 848, 850, 854], "intern": [15, 26, 58, 61, 65, 70, 96, 104, 125, 174, 183, 186, 195, 202, 248, 278, 303, 329, 371, 400, 469, 475, 494, 499, 512, 659, 676, 699, 753, 762, 865], "extern": [15, 26, 58, 104, 119, 174, 175, 191, 193, 248, 278, 303, 475, 665, 692, 752, 762, 786, 787], "essenti": [15, 27, 94, 104, 185, 186, 192, 202, 248, 278, 303, 322, 333, 346, 364, 377, 395, 431, 434, 455, 456, 466, 467, 483, 514, 515, 522, 529, 604, 627, 629, 639, 645, 647, 648, 656, 659, 678, 686, 692, 696, 763, 787, 804, 858, 860, 862, 885, 899, 915], "variabl": [15, 104, 231, 233, 248, 263, 278, 289, 303, 648], "copi": [15, 34, 55, 58, 94, 104, 165, 174, 178, 207, 248, 278, 303, 495, 497, 536, 553, 563, 575, 587, 626, 649, 651, 659, 672, 673, 692, 815, 822, 828, 837, 915], "rais": [15, 55, 58, 60, 62, 69, 73, 75, 92, 94, 104, 112, 174, 186, 197, 248, 278, 303, 426, 480, 521, 542, 559, 570, 583, 595, 667, 684, 692, 704, 710, 713, 748, 786, 789, 917, 918], "valueerror": [15, 58, 60, 62, 69, 73, 75, 92, 104, 174, 248, 278, 303, 480, 521, 542, 559, 570, 583, 595, 667, 692, 704, 710, 713, 748, 786, 917, 918], "_allow_interp": [16, 249, 279, 304], "involv": [16, 151, 172, 192, 249, 279, 304, 444, 629, 692, 711, 714, 728, 752, 786, 848], "re": [16, 24, 25, 26, 109, 114, 119, 174, 202, 230, 249, 257, 258, 279, 287, 288, 304, 312, 313, 437, 477, 500, 615, 648, 651, 652, 692, 739, 752, 760, 762, 784, 785, 787, 830, 837, 886], "center": [16, 120, 124, 129, 136, 137, 149, 150, 177, 179, 180, 181, 186, 188, 191, 194, 195, 202, 204, 206, 210, 214, 220, 222, 225, 228, 229, 230, 233, 249, 279, 304, 314, 317, 322, 325, 328, 333, 336, 339, 346, 349, 352, 364, 367, 370, 377, 380, 383, 395, 399, 401, 405, 406, 423, 426, 431, 432, 434, 450, 453, 455, 459, 480, 483, 486, 487, 500, 501, 502, 504, 505, 506, 507, 508, 510, 513, 541, 549, 558, 569, 574, 581, 593, 599, 600, 601, 602, 604, 605, 606, 610, 612, 616, 617, 618, 619, 623, 624, 625, 626, 627, 628, 630, 631, 632, 634, 637, 639, 640, 641, 643, 645, 646, 647, 648, 651, 652, 653, 656, 657, 658, 665, 675, 676, 678, 680, 682, 684, 686, 687, 688, 690, 692, 694, 695, 704, 742, 784, 786, 787, 788, 816, 823, 892, 895], "next": [16, 26, 78, 93, 151, 174, 186, 224, 249, 279, 304, 336, 349, 367, 380, 413, 574, 601, 608, 613, 621, 635, 642, 645, 648, 654, 672, 681, 684, 689, 692, 708, 755, 762, 784, 786, 788, 818, 830, 835, 843, 867], "algorithm": [16, 26, 47, 62, 66, 174, 184, 186, 191, 195, 202, 211, 214, 249, 279, 304, 326, 341, 357, 368, 372, 381, 388, 399, 401, 405, 415, 425, 432, 433, 610, 624, 625, 627, 628, 630, 631, 633, 637, 640, 641, 648, 652, 680, 684, 687, 688, 692, 702, 755, 757, 760, 762, 774, 859, 870], "ip": [16, 204, 249, 279, 304], "subscript": [16, 24, 109, 203, 249, 257, 279, 287, 304, 312, 435], "p": [16, 68, 174, 249, 279, 304, 500, 504, 506, 536, 553, 563, 575, 587, 625, 632, 714, 728, 739, 742, 745, 785, 817, 824], "previou": [16, 174, 186, 191, 192, 249, 279, 304, 336, 349, 367, 380, 413, 469, 483, 520, 752, 757, 760, 787, 867], "repeat": [16, 58, 174, 249, 279, 304, 625, 627, 631, 633, 645, 752, 760, 784, 830], "until": [16, 26, 58, 68, 174, 186, 249, 279, 304, 341, 357, 372, 388, 413, 415, 453, 455, 456, 574, 601, 610, 627, 631, 633, 647, 755], "solut": [16, 26, 66, 67, 71, 117, 174, 177, 179, 180, 181, 186, 249, 279, 304, 336, 349, 367, 380, 407, 409, 413, 435, 504, 506, 602, 645, 648, 652, 656, 748, 750, 751, 752, 762, 801, 843], "converg": [16, 58, 62, 64, 174, 186, 249, 279, 304, 407, 409, 413, 574, 601, 627, 631, 633, 645, 648, 656, 830, 876, 879], "been": [16, 26, 33, 55, 58, 62, 72, 73, 75, 78, 88, 174, 177, 179, 180, 181, 186, 191, 192, 195, 249, 279, 304, 341, 345, 357, 361, 363, 372, 376, 388, 392, 394, 400, 408, 412, 413, 415, 441, 479, 480, 483, 487, 495, 497, 498, 604, 606, 610, 611, 616, 619, 628, 631, 633, 637, 640, 645, 648, 651, 659, 665, 668, 672, 676, 684, 687, 692, 695, 699, 704, 708, 746, 748, 749, 750, 752, 755, 762, 765, 778, 784, 786, 830, 859, 860, 861, 895], "final": [16, 26, 29, 30, 71, 73, 77, 93, 94, 113, 125, 174, 178, 186, 189, 208, 221, 249, 279, 304, 417, 455, 483, 604, 610, 616, 619, 624, 626, 628, 631, 637, 640, 641, 643, 645, 647, 648, 653, 665, 672, 680, 682, 684, 687, 688, 690, 692, 695, 698, 700, 701, 702, 703, 708, 741, 752, 755, 758, 760, 762, 764, 784, 785, 786, 787, 788, 803, 811, 833, 848, 864, 867], "allow": [16, 18, 25, 26, 46, 62, 78, 93, 113, 165, 172, 174, 183, 186, 187, 188, 189, 191, 192, 201, 249, 251, 258, 279, 281, 288, 289, 304, 306, 313, 321, 325, 332, 436, 438, 455, 469, 629, 645, 672, 674, 692, 704, 708, 737, 738, 741, 745, 752, 755, 762, 773, 784, 786, 787, 788, 789, 816, 823, 840, 864, 908], "dispatch": [16, 119, 186, 249, 279, 304, 422, 463, 540, 544, 551, 557, 561, 568, 572, 580, 585, 592, 597, 698, 700, 701, 702, 706, 918], "interpol": [16, 17, 18, 25, 76, 93, 177, 179, 180, 181, 249, 250, 251, 258, 279, 280, 281, 288, 304, 305, 306, 313, 500, 575, 582, 587, 594, 610, 617, 631, 714, 728], "pixels_to_gnomic_interp": [16, 249, 279, 304], "approxim": [17, 18, 25, 139, 153, 177, 179, 180, 181, 186, 201, 213, 215, 216, 250, 251, 258, 280, 281, 288, 305, 306, 313, 341, 357, 372, 388, 398, 415, 458, 486, 539, 546, 548, 556, 566, 578, 590, 612, 628, 634, 637, 648, 659], "previous": [17, 250, 280, 305, 625, 781], "prepare_interp": [17, 177, 179, 180, 181, 250, 280, 305], "run": [17, 19, 27, 58, 75, 78, 126, 174, 191, 230, 250, 252, 260, 280, 282, 305, 307, 647, 648, 659, 696, 737, 738, 739, 744, 745, 763, 784, 785, 786, 787, 804, 861, 862], "much": [17, 24, 109, 114, 128, 175, 181, 186, 187, 191, 201, 202, 230, 250, 257, 280, 287, 305, 312, 314, 321, 325, 332, 336, 349, 367, 380, 398, 436, 438, 439, 455, 473, 475, 480, 483, 500, 575, 587, 616, 625, 627, 628, 629, 641, 648, 659, 661, 663, 675, 680, 688, 692, 708, 786, 787, 807, 830, 875, 876, 879], "faster": [17, 112, 113, 116, 117, 126, 182, 250, 280, 305, 326, 368, 381, 425, 648, 752], "than": [17, 24, 58, 64, 109, 111, 114, 145, 151, 170, 174, 177, 179, 180, 181, 186, 191, 211, 214, 223, 250, 257, 280, 287, 305, 312, 336, 349, 367, 380, 398, 413, 436, 441, 442, 445, 446, 447, 450, 453, 455, 456, 477, 480, 483, 494, 500, 604, 616, 625, 627, 628, 630, 637, 641, 645, 646, 648, 652, 658, 659, 660, 661, 663, 665, 668, 675, 680, 684, 688, 692, 697, 719, 725, 752, 755, 760, 784, 807, 830, 842, 851, 855, 864, 870, 871], "accur": [17, 70, 114, 117, 126, 174, 177, 179, 180, 181, 186, 187, 191, 250, 280, 305, 336, 349, 367, 380, 492, 616, 624, 625, 627, 628, 639, 640, 641, 645, 675, 678, 680, 686, 688, 752, 755, 784], "better": [17, 34, 56, 58, 60, 174, 186, 191, 202, 211, 215, 216, 250, 280, 305, 407, 409, 503, 575, 587, 624, 631, 692, 714, 784, 809, 875, 876, 879], "thousandth": [17, 177, 179, 180, 181, 250, 280, 305], "scipi": [17, 19, 174, 231, 250, 252, 280, 282, 305, 307, 500, 610, 631, 648, 830, 862], "regulargridinterpol": [17, 19, 250, 252, 280, 282, 305, 307, 500, 610, 631], "scheme": [17, 250, 280, 305, 647, 693], "allow_interp": [18, 25, 251, 258, 281, 288, 306, 313], "definit": [18, 32, 105, 115, 116, 117, 174, 186, 251, 281, 306, 355, 386, 410, 414, 483, 692, 741, 749, 851, 855], "onc": [18, 19, 31, 32, 58, 64, 75, 87, 116, 117, 119, 132, 141, 174, 177, 179, 180, 181, 186, 187, 192, 231, 251, 252, 281, 282, 306, 307, 413, 437, 453, 472, 475, 483, 495, 497, 506, 575, 587, 612, 615, 616, 625, 627, 629, 630, 634, 645, 647, 648, 651, 659, 665, 692, 738, 748, 750, 752, 779, 780, 781, 782, 783, 784, 785, 812, 830, 835, 842, 860, 863, 864], "hat": [18, 168, 189, 251, 281, 306, 448, 715, 719, 725, 726, 812, 816], "belong": [18, 105, 251, 281, 306, 450, 466, 626, 692, 786, 911], "speed": [18, 25, 26, 174, 191, 231, 251, 258, 281, 288, 306, 313, 449, 474, 646, 665, 755, 762, 816, 889], "pixel_bound": [19, 252, 282, 307], "temperature_bound": [19, 252, 282, 307], "50": [19, 202, 224, 252, 282, 307, 625, 627, 672, 674, 787, 830], "temperature_step": [19, 252, 282, 307], "prepar": [19, 57, 58, 61, 65, 174, 252, 282, 307, 619, 651, 692, 785], "make": [19, 26, 77, 88, 112, 114, 126, 142, 151, 165, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 188, 191, 195, 202, 203, 207, 231, 252, 282, 307, 323, 334, 347, 365, 378, 396, 398, 426, 437, 438, 442, 445, 446, 447, 450, 455, 457, 467, 483, 486, 487, 494, 495, 496, 497, 538, 546, 547, 553, 555, 563, 565, 577, 589, 604, 616, 619, 624, 625, 627, 645, 647, 648, 652, 656, 659, 664, 665, 676, 692, 695, 698, 700, 701, 702, 704, 706, 708, 715, 719, 724, 725, 738, 739, 744, 745, 746, 752, 762, 782, 785, 786, 787, 788, 803, 837, 848, 863, 864, 867, 868, 876, 877, 878, 880, 881], "pixels_to_unit": [19, 29, 31, 94, 174, 177, 178, 179, 180, 181, 252, 282, 307, 472, 625, 764], "transform": [19, 20, 21, 25, 56, 60, 68, 77, 106, 107, 174, 177, 178, 179, 180, 181, 186, 195, 221, 222, 252, 253, 254, 258, 282, 283, 284, 288, 307, 308, 309, 313, 317, 321, 326, 328, 332, 336, 339, 344, 349, 352, 361, 367, 368, 370, 375, 380, 381, 383, 392, 407, 409, 423, 425, 483, 604, 648, 652, 656, 708, 752, 757, 758, 823, 868, 882], "everi": [19, 79, 80, 93, 94, 174, 177, 179, 180, 181, 186, 187, 191, 192, 222, 229, 252, 282, 307, 336, 349, 367, 380, 413, 450, 455, 472, 483, 575, 587, 604, 624, 645, 648, 649, 656, 665, 673, 708, 752, 755, 782, 787, 789, 847], "detector": [19, 24, 109, 126, 174, 177, 178, 179, 180, 181, 192, 195, 252, 257, 282, 287, 307, 312, 398, 645, 755, 784, 812, 848, 859, 860, 861, 862, 864], "plu": [19, 116, 210, 252, 282, 307, 400, 436, 446, 455, 469, 494, 513, 605, 650, 787, 817, 824, 850, 867, 876, 879], "minu": [19, 55, 58, 59, 62, 63, 174, 252, 282, 307, 808, 892, 895], "bound": [19, 34, 120, 124, 129, 136, 137, 149, 150, 174, 203, 252, 282, 307, 436, 450, 451, 452, 454, 455, 469, 472, 486, 487, 494, 495, 496, 497, 498, 499, 500, 508, 510, 536, 537, 542, 553, 554, 559, 563, 564, 570, 575, 576, 583, 587, 588, 595, 605, 606, 647, 650, 659, 662, 665, 672, 674, 697], "That": [19, 55, 58, 62, 68, 154, 155, 156, 157, 159, 160, 161, 174, 191, 192, 202, 223, 252, 282, 307, 440, 469, 498, 518, 575, 587, 604, 619, 625, 627, 637, 647, 648, 659, 665, 676, 712, 714, 723, 728, 835, 899], "temp": [19, 26, 174, 252, 282, 307], "littl": [19, 26, 172, 174, 177, 179, 180, 181, 191, 252, 282, 307, 604, 645, 695, 762, 784, 786, 889], "save": [19, 26, 29, 30, 72, 73, 74, 75, 94, 108, 112, 126, 139, 153, 172, 174, 176, 177, 178, 179, 180, 181, 186, 202, 252, 282, 289, 307, 314, 325, 336, 349, 367, 380, 400, 401, 426, 436, 626, 631, 692, 695, 698, 700, 701, 702, 737, 738, 739, 740, 741, 742, 743, 744, 745, 762, 764, 779, 780, 781, 782, 787, 803, 806, 810, 811, 833, 834, 844, 848, 849, 859, 861, 863, 864], "futur": [19, 114, 131, 177, 179, 180, 181, 231, 252, 282, 307, 436, 444, 784, 786, 849, 899], "dump": [19, 145, 252, 282, 307, 462, 842], "integ": [19, 114, 186, 224, 252, 282, 307, 336, 349, 367, 380, 413, 450, 469, 500, 529, 630, 659, 684, 694, 808, 838, 871, 875, 876, 879, 887, 889, 895, 908], "how": [19, 32, 58, 75, 77, 78, 95, 119, 126, 132, 141, 151, 174, 178, 181, 182, 186, 191, 195, 202, 230, 252, 282, 307, 314, 325, 336, 349, 367, 380, 400, 401, 426, 443, 450, 455, 468, 469, 472, 483, 486, 489, 500, 513, 517, 518, 553, 563, 616, 619, 626, 628, 629, 633, 647, 659, 665, 668, 692, 693, 694, 695, 704, 746, 755, 784, 786, 787, 788, 823, 830, 843, 845, 848, 854, 912, 915], "mani": [19, 34, 71, 72, 114, 172, 174, 177, 179, 180, 181, 183, 184, 186, 187, 188, 191, 192, 202, 252, 282, 307, 314, 325, 336, 349, 367, 380, 401, 426, 436, 437, 439, 455, 472, 518, 603, 616, 624, 628, 629, 641, 647, 648, 651, 659, 680, 688, 692, 695, 715, 718, 719, 724, 725, 726, 751, 781, 787, 788, 807, 809, 823, 830, 844, 845, 848], "pad": [19, 24, 109, 111, 151, 252, 257, 282, 287, 307, 312, 475], "inclus": [19, 252, 282, 307, 472, 487], "directions_in_camera_fram": [20, 106, 253, 283, 308], "dimension": [20, 21, 106, 107, 253, 254, 283, 284, 308, 309, 436, 715, 719, 724, 725, 865, 870], "kei": [20, 21, 93, 106, 107, 126, 145, 165, 202, 233, 253, 254, 263, 283, 284, 308, 309, 604, 610, 619, 623, 631, 637, 647, 648, 659, 672, 676, 684, 692, 694, 695, 699, 704, 784, 786, 788, 803, 823, 859, 864, 889, 892, 895, 902, 904, 908], "word": [20, 21, 93, 106, 107, 126, 145, 165, 202, 233, 253, 254, 263, 283, 284, 308, 309, 604, 610, 619, 631, 637, 648, 672, 676, 684, 692, 695, 699, 704, 784, 786, 803, 823, 859, 889, 892, 895, 902, 904], "perpendicular": [20, 106, 253, 283, 308, 486, 487], "ax": [20, 106, 189, 202, 225, 228, 253, 283, 308, 486, 494, 500, 502, 511, 625, 657, 713, 717, 723, 724, 858], "out": [20, 34, 47, 70, 78, 88, 106, 174, 176, 182, 183, 184, 186, 192, 195, 211, 215, 216, 228, 230, 253, 283, 308, 401, 413, 426, 456, 519, 604, 610, 619, 626, 631, 637, 648, 657, 672, 674, 684, 692, 697, 704, 739, 752, 753, 774, 782, 784, 786, 787, 788, 791, 810, 816, 830, 831, 833, 835, 859, 864, 870], "rather": [20, 106, 177, 179, 180, 181, 183, 253, 283, 308, 480, 630, 659, 692, 842, 908], "reset": [22, 31, 32, 40, 42, 58, 73, 113, 174, 195, 255, 285, 310, 483, 619, 649, 666, 673, 692, 837, 916], "store": [23, 26, 27, 29, 30, 31, 32, 33, 56, 60, 66, 67, 69, 77, 78, 92, 108, 113, 114, 115, 116, 117, 119, 130, 142, 145, 165, 174, 178, 182, 183, 186, 195, 202, 256, 260, 286, 311, 314, 316, 317, 323, 325, 327, 328, 334, 336, 338, 339, 347, 349, 351, 352, 362, 365, 367, 369, 370, 378, 380, 382, 383, 393, 396, 401, 407, 409, 413, 417, 421, 422, 423, 424, 426, 427, 428, 432, 433, 437, 442, 445, 446, 447, 450, 451, 453, 455, 460, 461, 464, 469, 483, 496, 502, 518, 537, 540, 554, 557, 564, 567, 568, 575, 576, 579, 580, 587, 588, 591, 592, 604, 610, 612, 619, 620, 623, 626, 628, 631, 634, 637, 640, 645, 647, 648, 651, 653, 658, 659, 665, 676, 679, 684, 687, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 706, 708, 712, 727, 738, 739, 740, 747, 750, 752, 755, 757, 758, 759, 760, 762, 763, 764, 765, 778, 784, 785, 786, 788, 803, 804, 806, 808, 811, 830, 838, 844, 862, 875, 876, 877, 878, 879, 880, 881, 889, 891, 894, 898, 899, 901, 907, 908, 910], "xml": [23, 108, 112, 113, 256, 286, 311, 784, 787], "return_shap": [24, 109, 257, 287, 312], "warp": [24, 109, 178, 257, 287, 312], "grai": [24, 109, 224, 257, 287, 312, 435], "illumin": [24, 109, 186, 187, 188, 195, 196, 202, 209, 210, 211, 214, 257, 287, 312, 398, 399, 401, 405, 426, 437, 438, 441, 442, 444, 445, 446, 447, 448, 449, 469, 478, 480, 604, 607, 616, 618, 624, 625, 627, 628, 637, 639, 641, 645, 648, 653, 656, 676, 678, 680, 684, 686, 688, 692, 787, 889, 908], "dn": [24, 26, 109, 183, 202, 214, 257, 287, 312, 628, 762, 786, 803, 808, 908], "cell": [24, 109, 223, 257, 287, 312, 892, 895, 904], "undistort_pixel": [24, 94, 105, 109, 178, 257, 287, 312], "avoid": [24, 109, 231, 257, 287, 312, 518, 624, 628, 637, 645, 672, 674, 782, 830], "computation": [24, 109, 257, 287, 312, 455, 625, 627, 641, 675, 680, 688], "expens": [24, 109, 186, 257, 287, 312, 336, 349, 367, 380, 436, 675], "nomin": [24, 109, 257, 287, 312, 648, 656, 658, 888, 902, 906], "specif": [24, 42, 51, 61, 65, 77, 81, 95, 109, 112, 115, 148, 165, 174, 177, 179, 180, 181, 182, 186, 195, 231, 257, 287, 312, 320, 331, 343, 349, 355, 359, 374, 380, 386, 390, 410, 432, 435, 455, 469, 500, 574, 604, 610, 615, 625, 626, 627, 631, 637, 641, 648, 649, 652, 673, 676, 680, 684, 688, 692, 693, 695, 784, 786, 787, 808, 875, 876, 877, 878, 879, 880, 881], "opnav": [24, 26, 70, 109, 114, 115, 172, 174, 182, 184, 185, 187, 192, 201, 230, 257, 287, 312, 435, 442, 445, 446, 447, 455, 518, 604, 610, 619, 623, 624, 625, 626, 627, 629, 631, 637, 648, 659, 676, 684, 692, 693, 695, 739, 752, 753, 755, 762, 779, 780, 781, 784, 785, 786, 788, 803], "measur": [24, 28, 55, 57, 58, 60, 61, 62, 65, 68, 77, 83, 84, 85, 86, 89, 90, 96, 109, 165, 174, 175, 186, 188, 257, 287, 312, 355, 386, 410, 414, 610, 619, 623, 625, 626, 627, 628, 629, 631, 632, 637, 639, 645, 648, 652, 656, 659, 678, 684, 686, 692, 693, 694, 703, 830, 833, 835, 837, 838, 839, 840, 845, 847, 854, 855, 856, 857, 858, 859], "crop": [24, 109, 111, 195, 257, 287, 312, 741], "fit": [24, 26, 28, 55, 58, 62, 68, 69, 72, 77, 109, 174, 186, 202, 210, 211, 212, 214, 225, 228, 257, 287, 312, 314, 324, 325, 335, 336, 341, 345, 348, 349, 355, 356, 357, 362, 363, 366, 367, 372, 376, 379, 380, 386, 387, 388, 393, 394, 397, 398, 400, 401, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 426, 455, 486, 540, 546, 557, 568, 580, 592, 602, 604, 610, 619, 624, 625, 630, 631, 637, 645, 647, 648, 652, 657, 665, 684, 692, 695, 698, 700, 701, 702, 746, 747, 748, 749, 752, 762, 784, 785, 786, 787, 803, 808, 830, 833, 835, 902, 908], "full": [24, 34, 55, 58, 62, 77, 109, 111, 115, 122, 123, 172, 174, 177, 179, 180, 181, 182, 188, 192, 202, 213, 214, 222, 229, 257, 287, 312, 469, 500, 517, 625, 627, 646, 648, 652, 662, 671, 694, 745, 803, 858, 891, 894, 898, 901, 907, 910], "what": [24, 26, 42, 55, 58, 62, 109, 111, 114, 118, 119, 124, 125, 128, 129, 137, 145, 150, 172, 174, 182, 184, 186, 188, 191, 192, 193, 195, 202, 257, 287, 312, 341, 357, 372, 388, 400, 415, 439, 450, 455, 469, 483, 512, 515, 529, 604, 610, 616, 619, 623, 624, 626, 628, 629, 631, 637, 639, 640, 645, 648, 652, 665, 676, 678, 684, 686, 692, 693, 695, 698, 699, 700, 701, 702, 703, 704, 706, 744, 748, 752, 762, 782, 784, 785, 786, 787, 823, 830, 842, 843, 853, 859, 914, 917, 918], "returnshap": [24, 109, 257, 287, 312], "nan": [24, 28, 109, 111, 122, 123, 135, 138, 174, 186, 228, 257, 287, 312, 321, 324, 332, 335, 341, 344, 345, 348, 357, 361, 363, 366, 372, 375, 376, 379, 388, 392, 394, 397, 401, 408, 412, 415, 416, 430, 507, 511, 631, 640, 648, 657, 687, 695, 840], "anywher": [24, 29, 30, 109, 114, 116, 117, 119, 132, 141, 174, 186, 191, 257, 287, 312, 314, 325, 336, 349, 367, 380, 436, 441, 442, 445, 446, 447, 468, 507, 658, 764, 786], "extrapol": [24, 109, 257, 287, 312], "look": [24, 109, 113, 174, 191, 192, 211, 231, 257, 287, 312, 436, 459, 466, 467, 506, 519, 525, 532, 541, 549, 553, 558, 563, 569, 574, 581, 593, 601, 617, 624, 629, 645, 647, 648, 651, 652, 659, 662, 692, 695, 698, 700, 701, 702, 704, 706, 744, 786, 787, 788, 809], "somewhat": [24, 109, 177, 179, 180, 181, 192, 257, 287, 312, 437, 616, 628, 645, 659], "weird": [24, 109, 257, 287, 312], "around": [24, 77, 109, 126, 174, 186, 188, 191, 213, 225, 228, 257, 287, 312, 317, 328, 339, 352, 370, 383, 423, 438, 475, 483, 491, 518, 519, 604, 624, 625, 627, 628, 630, 637, 645, 647, 648, 656, 657, 658, 684, 687, 692, 784, 787, 842, 848, 854, 867, 882, 883, 884, 885], "edg": [24, 109, 184, 198, 199, 202, 208, 209, 211, 212, 213, 215, 216, 217, 218, 223, 228, 257, 287, 312, 459, 472, 506, 525, 532, 541, 549, 558, 569, 574, 581, 593, 601, 605, 615, 650, 657, 658, 808], "use_weight": [26, 30, 174, 762], "image_process": [26, 42, 50, 51, 174, 185, 191, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 220, 221, 222, 225, 226, 229, 259, 262, 604, 610, 619, 625, 626, 627, 630, 631, 637, 648, 651, 676, 684, 692, 695, 707, 762, 776, 784, 787, 788, 806, 811], "image_processing_kwarg": [26, 41, 174, 185, 191, 259, 261, 695, 705, 762, 771, 803], "star_id": [26, 42, 51, 52, 174, 191, 762, 777, 784, 787, 806, 808, 811], "star_id_kwarg": [26, 43, 174, 762, 772, 784, 787, 803], "alignment_base_frame_func": [26, 31, 32, 70, 73, 174], "attitude_estim": [26, 42, 48, 51, 174, 762, 775, 811], "attitude_estimator_kwarg": [26, 39, 174, 762, 770, 803], "static_alignment_estim": [26, 31, 42, 51, 53, 174], "static_alignment_estimator_kwarg": [26, 44, 174], "temperature_dependent_alignment_estim": [26, 32, 42, 51, 54, 174], "temperature_dependent_alignment_estimator_kwarg": [26, 45, 174], "calibration_estim": [26, 30, 42, 49, 51, 174], "calibration_estimator_kwarg": [26, 174], "stellaropnav": [26, 27, 52, 70, 174, 185, 188, 191, 260, 696, 753, 755, 757, 778, 779, 780, 781, 782, 783, 787, 788, 803, 804, 806, 808, 811, 842], "serv": [26, 55, 94, 174, 178, 185, 186, 259, 426, 455, 536, 553, 563, 619, 656, 674, 695, 746, 762, 803, 842, 843, 847, 854], "main": [26, 70, 138, 174, 625, 627, 628, 695, 708, 753, 762, 786, 830, 848, 854, 858], "interfac": [26, 55, 62, 71, 114, 115, 116, 117, 128, 172, 174, 175, 185, 186, 188, 191, 192, 193, 259, 289, 400, 422, 426, 436, 444, 463, 475, 483, 499, 515, 522, 536, 544, 546, 551, 553, 561, 563, 572, 585, 597, 610, 619, 624, 625, 627, 628, 629, 630, 631, 637, 645, 676, 684, 692, 695, 754, 755, 757, 762, 786, 788, 813, 830, 842, 848, 850, 859, 867, 868, 875, 876, 879], "geometr": [26, 31, 70, 71, 174, 176, 230, 604, 648, 656, 752, 784, 785, 786, 788], "act": [26, 174, 189, 450, 695, 762], "imageprocess": [26, 33, 50, 70, 174, 184, 185, 186, 191, 201, 218, 259, 262, 401, 426, 604, 610, 612, 615, 619, 625, 627, 628, 630, 631, 634, 637, 648, 676, 684, 695, 707, 752, 753, 755, 762, 765, 776, 859], "stellar_opnav": [26, 29, 48, 70, 71, 72, 174, 186, 192, 426, 684, 693, 746, 747, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 787, 788, 842], "pass": [26, 33, 37, 39, 40, 41, 43, 44, 45, 46, 55, 77, 82, 112, 113, 126, 151, 174, 186, 191, 192, 195, 202, 203, 210, 214, 259, 261, 401, 456, 467, 472, 478, 491, 628, 637, 648, 656, 672, 674, 692, 695, 704, 705, 713, 755, 757, 762, 765, 768, 770, 771, 772, 773, 786, 859, 862, 875, 876, 879, 882, 883, 884, 886], "correct": [26, 77, 78, 87, 130, 152, 174, 177, 179, 186, 191, 192, 195, 213, 214, 407, 409, 473, 475, 476, 482, 483, 491, 492, 493, 604, 606, 610, 611, 616, 624, 627, 628, 630, 631, 633, 637, 639, 640, 641, 643, 645, 648, 651, 656, 675, 676, 678, 680, 682, 684, 686, 687, 688, 690, 692, 739, 755, 758, 762, 784, 786, 787, 832, 876, 877, 878, 879, 880, 881, 883, 884, 885], "up": [26, 66, 78, 128, 139, 153, 172, 174, 182, 191, 192, 209, 230, 435, 436, 448, 449, 450, 455, 475, 483, 492, 493, 604, 626, 627, 647, 665, 692, 695, 741, 752, 755, 762, 784, 787, 788, 809, 830, 862], "date": [26, 33, 47, 81, 91, 158, 166, 174, 182, 475, 483, 488, 631, 694, 731, 732, 733, 734, 735, 736, 755, 762, 765, 774, 786, 877, 878, 880, 881, 885, 887, 888, 902], "exclus": [26, 174, 695, 762], "mention": [26, 58, 174, 475, 600, 647, 692, 762], "featur": [26, 70, 77, 174, 188, 230, 437, 518, 623, 626, 628, 629, 637, 645, 646, 647, 648, 650, 651, 652, 653, 656, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 692, 693, 694, 708, 743, 745, 762, 782, 786, 788, 835, 843, 864, 868], "stellar": [26, 70, 114, 115, 174, 182, 188, 192, 195, 473, 475, 476, 482, 483, 492, 493, 752, 753, 755, 758, 762, 779, 780, 781, 786, 787, 803, 876, 879], "id": [26, 43, 70, 77, 114, 121, 124, 125, 129, 136, 137, 138, 146, 149, 150, 174, 191, 437, 450, 466, 467, 468, 469, 475, 481, 500, 529, 656, 674, 694, 753, 762, 772, 782, 784, 786, 787, 808, 830, 833, 850, 854, 862, 875, 876, 879, 902], "These": [26, 31, 32, 55, 58, 62, 96, 114, 119, 130, 141, 170, 174, 175, 176, 178, 182, 186, 188, 191, 195, 259, 314, 317, 325, 328, 336, 339, 349, 352, 367, 370, 380, 383, 398, 423, 436, 439, 487, 494, 495, 497, 499, 505, 599, 600, 612, 619, 628, 634, 645, 647, 659, 665, 693, 695, 708, 746, 755, 757, 758, 762, 786, 787, 830, 843, 867, 889], "quickli": [26, 172, 174, 175, 259, 436, 665, 708, 762, 786, 787, 788, 867], "variou": [26, 27, 33, 77, 174, 175, 183, 189, 190, 195, 202, 230, 398, 436, 483, 658, 696, 752, 762, 763, 765, 784, 787, 788, 804], "tune": [26, 202, 211, 213, 616, 629, 637, 647, 665, 755, 762, 803, 835, 842, 848, 859], "identif": [26, 33, 47, 58, 70, 115, 128, 130, 174, 191, 192, 202, 207, 214, 604, 624, 645, 648, 752, 753, 754, 755, 762, 765, 774, 782, 783, 784, 787, 803, 832, 842, 849], "success": [26, 29, 55, 56, 57, 58, 60, 61, 62, 65, 70, 93, 151, 604, 610, 624, 631, 637, 645, 648, 652, 684, 752, 753, 762, 764, 784, 787, 807, 842], "access": [26, 70, 114, 116, 117, 119, 132, 141, 172, 174, 176, 182, 185, 188, 191, 192, 259, 536, 553, 563, 575, 587, 649, 665, 673, 692, 693, 746, 753, 762, 784, 786, 787, 805, 848, 876, 879], "underli": [26, 174, 186, 321, 332, 344, 345, 356, 361, 362, 363, 375, 376, 387, 392, 393, 394, 405, 408, 412, 419, 421, 430, 762], "individu": [26, 42, 51, 75, 125, 174, 175, 188, 201, 202, 475, 623, 629, 645, 647, 762, 779, 782, 864, 889, 892, 895, 899, 902, 904, 908], "reprocess": [26, 174, 624, 762, 784, 840], "try": [26, 128, 174, 191, 192, 195, 202, 469, 486, 487, 604, 648, 652, 658, 665, 668, 676, 692, 695, 737, 740, 751, 752, 755, 761, 762, 782, 784, 786, 787, 816, 823, 830, 842, 889], "find": [26, 73, 174, 182, 186, 191, 194, 195, 203, 204, 225, 230, 426, 439, 455, 458, 459, 466, 467, 477, 494, 504, 506, 511, 513, 524, 525, 531, 532, 537, 539, 540, 541, 548, 549, 554, 556, 557, 558, 564, 566, 568, 569, 574, 576, 578, 580, 581, 588, 590, 592, 593, 599, 601, 602, 604, 610, 616, 618, 619, 623, 624, 626, 628, 630, 631, 637, 645, 648, 651, 652, 656, 658, 659, 660, 664, 665, 671, 684, 692, 695, 704, 717, 751, 752, 762, 782, 784, 786, 787, 788, 806, 823, 832, 834], "best": [26, 62, 174, 177, 179, 180, 181, 186, 188, 191, 192, 202, 321, 332, 341, 357, 372, 388, 405, 415, 430, 455, 486, 536, 540, 546, 553, 557, 563, 568, 575, 580, 587, 592, 602, 616, 645, 647, 648, 649, 652, 665, 673, 692, 695, 697, 746, 747, 748, 750, 751, 760, 762, 784, 807, 830, 835, 836, 845], "simpl": [26, 46, 112, 113, 134, 135, 174, 188, 191, 192, 230, 437, 495, 497, 637, 639, 641, 643, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 695, 752, 762, 773, 784, 786, 823, 829, 835, 843, 859], "alig": [26, 174], "id_star": [26, 34, 70, 72, 75, 174, 191, 753, 755, 758, 760, 762, 779, 780, 781, 782, 783, 784, 787, 806, 811], "sid_summari": [26, 70, 174, 191, 753, 762, 784, 787], "estimate_attitud": [26, 31, 32, 70, 73, 174, 191, 753, 762, 784, 787, 811], "estimate_calibr": [26, 70, 174, 784], "calib_summari": [26, 70, 174, 784], "estimate_static_align": [26, 66, 70, 73, 174], "estimate_temperature_dependent_align": [26, 68, 70, 73, 174], "combin": [26, 127, 174, 177, 179, 180, 181, 189, 191, 208, 210, 215, 216, 233, 469, 542, 559, 570, 583, 595, 623, 647, 665, 695, 704, 752, 753, 755, 761, 762, 782, 816, 842, 844, 859, 866, 871], "requir": [26, 55, 58, 70, 77, 78, 94, 114, 115, 116, 117, 120, 122, 123, 126, 128, 139, 151, 153, 165, 174, 175, 178, 182, 183, 186, 188, 191, 192, 195, 202, 220, 231, 319, 330, 342, 358, 373, 389, 398, 413, 422, 432, 433, 436, 438, 444, 450, 455, 463, 475, 478, 483, 512, 515, 522, 544, 551, 561, 572, 585, 597, 604, 605, 610, 616, 619, 623, 626, 627, 631, 637, 639, 648, 650, 651, 656, 667, 678, 684, 686, 692, 708, 746, 751, 752, 753, 755, 762, 784, 785, 786, 788, 803, 807, 816, 823, 830, 835, 842, 844, 867, 882, 883, 884, 889], "off": [26, 71, 77, 78, 81, 83, 84, 85, 86, 89, 90, 93, 119, 120, 121, 125, 126, 128, 132, 141, 145, 174, 175, 177, 179, 180, 181, 186, 191, 192, 207, 211, 212, 224, 314, 325, 336, 341, 349, 357, 362, 367, 372, 380, 388, 393, 401, 413, 415, 421, 426, 451, 463, 483, 485, 487, 544, 551, 561, 572, 585, 597, 604, 627, 628, 637, 641, 648, 656, 680, 688, 737, 752, 753, 762, 782, 784, 786, 787, 788, 803, 808, 823, 835, 863], "queried_catalogue_star_record": [26, 27, 174, 755, 758, 759, 762, 763], "queried_catalogue_image_point": [26, 27, 29, 30, 38, 174, 755, 758, 762, 763, 764, 769], "queried_catalogue_unit_vector": [26, 27, 174, 755, 758, 762, 763], "ip_extracted_image_point": [26, 27, 174, 762, 763], "ip_image_illum": [26, 27, 174, 762, 763], "ip_psf": [26, 27, 174, 762, 763], "ip_stat": [26, 27, 174, 762, 763], "ip_snr": [26, 27, 174, 762, 763], "unmatched_catalogue_image_point": [26, 27, 29, 30, 38, 174, 755, 762, 763, 764, 769], "unmatched_image_illum": [26, 27, 174, 762, 763], "unmatched_psf": [26, 27, 174, 762, 763, 808], "unmatched_stat": [26, 27, 174, 762, 763, 808], "unmatched_snr": [26, 27, 174, 762, 763, 808], "unmatched_catalogue_star_record": [26, 27, 174, 755, 762, 763], "unmatched_catalogue_unit_vector": [26, 27, 174, 755, 762, 763], "unmatched_extracted_image_point": [26, 27, 174, 762, 763, 808], "matched_catalogue_image_point": [26, 27, 29, 30, 36, 38, 174, 755, 762, 763, 764, 767, 769], "matched_image_illum": [26, 27, 36, 174, 762, 763, 767], "matched_psf": [26, 27, 36, 174, 762, 763, 767, 808], "matched_stat": [26, 27, 36, 174, 762, 763, 767, 808], "matched_snr": [26, 27, 36, 174, 762, 763, 767, 808], "matched_catalogue_star_record": [26, 27, 36, 174, 755, 762, 763, 767], "matched_catalogue_unit_vectors_inerti": [26, 27, 29, 36, 174, 762, 763, 764, 767], "matched_catalogue_unit_vectors_camera": [26, 27, 29, 30, 36, 38, 174, 762, 763, 764, 767, 769], "matched_extracted_image_point": [26, 27, 29, 30, 36, 174, 755, 762, 763, 764, 767, 808], "enabl": [26, 174, 186, 401, 426, 439, 708, 762, 847], "advanc": [26, 114, 119, 132, 141, 172, 174, 188, 191, 192, 515, 628, 692, 693, 762], "analysi": [26, 34, 119, 132, 141, 174, 177, 179, 180, 181, 186, 188, 191, 192, 193, 314, 325, 336, 349, 367, 380, 401, 426, 439, 467, 693, 755, 762, 784, 866], "themselv": [26, 112, 113, 114, 150, 174, 191, 494, 500, 516, 645, 659, 762, 786, 848, 863], "relative_opnav": [26, 174, 186, 426, 513, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 762, 787, 788, 854], "routin": [26, 29, 30, 33, 47, 77, 78, 79, 80, 83, 84, 85, 86, 89, 90, 174, 175, 177, 179, 180, 181, 183, 184, 188, 189, 191, 192, 193, 195, 198, 199, 202, 209, 217, 624, 625, 627, 628, 630, 637, 645, 646, 748, 755, 757, 760, 762, 764, 765, 774, 784, 786, 787, 788, 867], "itself": [26, 58, 73, 78, 82, 87, 119, 132, 141, 174, 176, 183, 186, 207, 341, 357, 372, 388, 415, 467, 477, 500, 520, 526, 533, 550, 616, 625, 627, 628, 630, 641, 643, 647, 659, 660, 664, 665, 670, 671, 680, 682, 688, 690, 695, 704, 752, 755, 784, 786, 864, 867, 899, 908], "static_align": [26, 31, 73, 174], "temperature_dependent_align": [26, 32, 45, 73, 174], "image_mask": [26, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 174, 762, 782], "turn": [26, 29, 30, 33, 77, 78, 81, 83, 84, 85, 86, 89, 90, 92, 93, 119, 124, 126, 128, 129, 132, 136, 141, 149, 174, 175, 191, 192, 463, 544, 551, 561, 572, 585, 597, 604, 628, 629, 637, 645, 648, 653, 656, 695, 697, 698, 699, 700, 701, 702, 704, 706, 737, 752, 762, 764, 765, 781, 782, 784, 786, 787, 806, 811, 864], "most": [26, 34, 77, 78, 114, 118, 119, 132, 141, 172, 174, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 191, 192, 195, 201, 211, 230, 231, 400, 422, 424, 435, 436, 438, 442, 445, 446, 447, 449, 458, 459, 475, 483, 500, 504, 506, 517, 518, 519, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 604, 619, 624, 626, 628, 629, 645, 647, 652, 658, 659, 675, 692, 693, 694, 695, 697, 704, 752, 762, 784, 786, 788, 830, 835, 843, 867], "_kwarg": [26, 42, 174, 695, 704, 762], "dictionari": [26, 48, 49, 50, 52, 53, 54, 152, 174, 191, 202, 262, 604, 610, 619, 624, 625, 626, 627, 628, 631, 637, 645, 648, 659, 684, 692, 695, 707, 762, 775, 776, 777, 787, 803, 816, 823, 830, 908], "altern": [26, 77, 174, 624, 695, 704, 762, 785, 787, 843, 849, 889, 892, 895, 902, 904], "alreadi": [26, 27, 28, 33, 34, 71, 77, 108, 113, 114, 126, 174, 178, 182, 184, 191, 224, 259, 436, 440, 450, 453, 476, 479, 480, 486, 487, 511, 546, 628, 637, 665, 669, 672, 692, 695, 696, 704, 744, 762, 763, 765, 784, 785, 786, 804, 816, 823, 830, 840, 883, 884, 889], "attitudeestim": [26, 174, 751, 762], "starid": [26, 33, 34, 70, 174, 191, 746, 753, 762, 765, 859], "calibrationestim": [26, 174], "staticalignmentestim": [26, 174], "temperaturedependentalignmentestim": [26, 174], "want": [26, 29, 30, 34, 56, 77, 78, 82, 83, 84, 85, 86, 89, 90, 113, 114, 116, 117, 119, 126, 128, 132, 141, 174, 182, 185, 186, 188, 191, 192, 195, 220, 224, 229, 231, 400, 413, 435, 436, 455, 466, 467, 469, 472, 475, 476, 482, 483, 519, 522, 553, 563, 616, 619, 629, 645, 648, 665, 671, 672, 674, 692, 695, 714, 728, 738, 739, 748, 762, 764, 782, 784, 786, 787, 816, 823, 835, 837, 843, 867, 869, 871, 904], "control": [26, 58, 62, 145, 151, 174, 186, 188, 191, 204, 341, 357, 372, 388, 413, 415, 456, 459, 541, 549, 558, 569, 581, 593, 604, 610, 616, 619, 626, 628, 630, 631, 637, 645, 648, 656, 659, 665, 674, 676, 684, 692, 695, 699, 703, 704, 752, 755, 762, 823, 864], "document": [26, 29, 30, 33, 48, 49, 53, 54, 58, 60, 66, 77, 93, 94, 115, 118, 122, 123, 124, 128, 129, 137, 150, 174, 176, 182, 183, 186, 187, 188, 190, 191, 192, 195, 220, 259, 336, 367, 426, 437, 439, 440, 469, 496, 512, 513, 515, 518, 520, 543, 560, 571, 584, 596, 610, 619, 624, 625, 626, 627, 628, 629, 630, 637, 640, 645, 646, 647, 648, 656, 676, 684, 687, 692, 693, 694, 695, 699, 704, 717, 738, 748, 753, 759, 762, 764, 765, 775, 784, 787, 803, 816, 835, 842, 845, 848, 859, 865, 875, 876, 879, 899, 908], "util": [26, 72, 77, 126, 165, 166, 167, 168, 169, 170, 174, 182, 189, 574, 599, 600, 601, 602, 603, 610, 619, 631, 637, 676, 684, 743, 754, 755, 762, 784, 786, 787, 788, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918], "callabl": [26, 77, 92, 151, 174, 186, 202, 320, 331, 343, 359, 374, 390, 411, 427, 429, 435, 483, 491, 500, 604, 610, 616, 617, 619, 631, 637, 648, 656, 659, 672, 676, 684, 787, 803, 816, 823, 830, 835, 847, 859, 867, 875, 876, 879, 882, 883, 884, 886], "orient": [26, 77, 87, 174, 183, 187, 438, 439, 455, 461, 476, 483, 484, 489, 500, 519, 520, 624, 626, 627, 645, 648, 650, 651, 652, 653, 656, 692, 731, 733, 735, 786, 787, 788, 867], "inerti": [26, 31, 32, 68, 70, 77, 174, 182, 195, 476, 483, 491, 492, 493, 693, 731, 732, 733, 734, 735, 736, 742, 755, 756, 758, 760, 762, 784, 786, 787, 807, 808, 867, 876, 879, 902], "dict": [26, 48, 49, 50, 51, 52, 53, 54, 152, 174, 202, 259, 262, 604, 610, 631, 637, 648, 659, 684, 695, 707, 762, 775, 776, 777, 789, 803, 816, 823, 859], "constructor": [26, 39, 40, 41, 43, 44, 45, 70, 82, 174, 189, 259, 261, 672, 695, 705, 708, 753, 755, 762, 770, 771, 772, 784, 786], "davenportqmethod": [26, 66, 174, 746, 751, 752, 760, 762], "iterativenonlinearlstsq": [26, 62, 174, 186, 417], "meth": [26, 77, 174, 616, 643, 682, 690], "bodi": [26, 174, 186, 187, 191, 192, 195, 202, 230, 426, 439, 441, 500, 501, 505, 513, 574, 600, 601, 604, 606, 610, 612, 619, 625, 627, 630, 631, 634, 637, 641, 645, 647, 648, 656, 658, 665, 680, 684, 688, 693, 694, 739, 741, 742, 762, 786, 787, 788, 803, 806, 808, 816, 817, 820, 821, 823, 824, 826, 827, 830, 843, 858, 859, 892, 895, 899, 902, 908], "anoth": [26, 31, 32, 57, 58, 61, 65, 66, 68, 71, 77, 174, 177, 178, 179, 180, 181, 184, 186, 195, 469, 623, 626, 628, 637, 645, 646, 647, 692, 748, 751, 757, 782, 783, 786, 830, 859, 875, 876, 879, 906], "static": [26, 31, 32, 44, 66, 67, 70, 71, 73, 122, 123, 133, 143, 147, 148, 174, 186, 195, 196, 203, 356, 387, 419, 476, 477, 660, 851, 855, 875, 876, 879], "nonearrai": [26, 174, 604, 631, 637, 648, 684], "3x2": [26, 32, 174], "offset": [26, 32, 68, 174, 186, 349, 380, 409, 417, 502, 641, 680, 688, 739, 742, 803], "slope": [26, 32, 68, 174, 186, 349, 380, 409, 417, 448, 449, 639, 678, 686], "euler": [26, 32, 68, 69, 71, 174, 189, 713, 717, 723], "angl": [26, 32, 68, 69, 71, 73, 154, 155, 156, 157, 160, 161, 170, 174, 186, 189, 325, 367, 380, 441, 442, 445, 446, 447, 448, 449, 479, 618, 628, 641, 643, 645, 647, 648, 672, 674, 676, 680, 682, 684, 688, 690, 692, 713, 717, 720, 721, 722, 723, 726, 728, 808], "xyx": [26, 32, 174], "euler_to_rotmat": [26, 32, 174], "demonstr": [26, 174, 181], "22": [26, 32, 174, 724], "rotation_base_to_camera": [26, 32, 174], "frequent": [26, 174, 186, 191, 259, 355, 386, 410, 414, 437, 518, 519, 536, 553, 563, 575, 587, 647, 665, 692, 695, 762, 782, 786, 830, 865, 867], "meta": [26, 55, 172, 174, 630, 738, 744, 757, 785, 786, 787, 899, 908], "process_star": [26, 27, 41, 50, 174, 762, 763, 771, 776], "again": [26, 70, 73, 174, 177, 179, 180, 181, 192, 195, 436, 450, 519, 659, 665, 692, 753, 762, 784, 786, 805], "worri": [26, 55, 115, 128, 174, 186, 188, 362, 393, 421, 455, 475, 546, 582, 594, 623, 626, 651, 755, 762, 786, 787, 848], "its": [26, 31, 66, 75, 82, 115, 172, 174, 177, 179, 180, 181, 184, 191, 224, 259, 319, 330, 342, 358, 373, 389, 449, 450, 461, 464, 466, 489, 494, 500, 513, 519, 522, 627, 630, 648, 659, 668, 695, 704, 708, 710, 718, 755, 762, 784, 786, 787, 789, 848, 867, 875, 876, 879, 908], "ransac": [26, 174, 191, 192, 645, 648, 652, 656, 752, 755, 757, 761, 762, 866], "datafram": [26, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 149, 150, 165, 174, 182, 755, 758, 759, 762, 803, 808, 809, 842, 849, 864], "record": [26, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 132, 137, 138, 141, 143, 144, 146, 150, 165, 174, 443, 637, 698, 700, 701, 702, 706, 755, 758, 762], "recent": [26, 77, 231, 610, 627, 631, 762, 787], "panda": [26, 114, 120, 124, 125, 129, 131, 136, 137, 143, 146, 149, 150, 165, 174, 182, 231, 755, 758, 759, 762, 803, 808], "ra": [26, 114, 115, 120, 124, 129, 130, 136, 137, 148, 149, 150, 165, 167, 168, 170, 174, 756, 762, 803, 807, 808, 902], "deg": [26, 114, 130, 762, 902], "ascens": [26, 114, 124, 125, 129, 130, 136, 137, 147, 148, 149, 150, 165, 167, 168, 170, 174, 182, 756, 757, 758, 759, 762, 807, 808, 812, 902], "proper": [26, 28, 58, 62, 68, 87, 88, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 132, 136, 137, 141, 149, 150, 165, 174, 177, 179, 180, 181, 182, 503, 509, 739, 752, 757, 758, 759, 762], "motion": [26, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 132, 136, 137, 141, 149, 150, 165, 174, 182, 757, 758, 759, 762], "dec": [26, 114, 115, 120, 124, 129, 130, 136, 137, 148, 149, 150, 165, 167, 168, 170, 174, 756, 762, 803, 807, 808, 902], "declin": [26, 114, 120, 124, 125, 129, 130, 136, 137, 148, 149, 150, 165, 167, 168, 170, 174, 182, 756, 757, 758, 759, 762, 807, 808, 812, 902], "km": [26, 114, 130, 174, 648, 652, 732, 739, 742, 755, 762, 816, 819, 823, 858, 876, 879, 892, 895, 902, 904, 906], "solar": [26, 130, 174, 181, 195, 483, 500, 630, 755, 762, 786, 787, 816, 819, 843, 902], "system": [26, 58, 68, 117, 130, 174, 195, 231, 483, 500, 504, 506, 602, 630, 631, 647, 659, 665, 755, 762, 786, 787, 835, 848, 885, 912, 915], "barycent": [26, 130, 174, 195, 755, 762, 816, 823], "parallax": [26, 130, 174, 755, 758, 762], "default": [26, 34, 57, 61, 65, 77, 114, 116, 117, 119, 122, 123, 126, 130, 144, 151, 174, 182, 183, 186, 188, 191, 202, 215, 216, 231, 314, 325, 336, 349, 367, 380, 401, 413, 426, 458, 473, 483, 536, 539, 548, 553, 556, 563, 566, 578, 590, 604, 619, 624, 637, 645, 648, 649, 672, 673, 674, 676, 684, 695, 703, 737, 739, 740, 741, 742, 743, 744, 745, 755, 762, 784, 786, 802, 813, 815, 822, 823, 828, 830, 912, 915], "428047027e15": [26, 130, 762], "ra_proper_mot": [26, 114, 130, 165, 762], "year": [26, 114, 130, 162, 165, 166, 169, 174, 758, 759, 762], "dec_proper_mot": [26, 114, 130, 165, 762], "mag": [26, 114, 115, 130, 762], "appar": [26, 125, 130, 473, 475, 476, 483, 486, 487, 491, 612, 625, 627, 628, 630, 631, 634, 637, 639, 643, 678, 682, 684, 686, 690, 692, 693, 695, 697, 762, 787, 803, 808], "magnitud": [26, 34, 114, 116, 117, 120, 124, 125, 126, 127, 129, 130, 136, 137, 145, 149, 150, 174, 182, 191, 208, 643, 682, 690, 737, 752, 754, 755, 762, 779, 784, 803, 804, 808], "ra_sigma": [26, 114, 130, 762, 804, 808], "uncertainti": [26, 28, 114, 130, 174, 182, 191, 626, 628, 637, 641, 645, 648, 656, 680, 688, 692, 752, 755, 757, 758, 762, 784, 808, 858, 892, 899, 902, 908], "dec_sigma": [26, 114, 130, 762, 808], "distance_sigma": [26, 114, 130, 762], "9949433041226756e": [26, 130, 762], "ra_pm_sigma": [26, 114, 130, 762], "dec_pm_sigma": [26, 114, 130, 762], "match": [26, 29, 31, 32, 35, 36, 47, 174, 184, 186, 192, 204, 220, 222, 229, 611, 623, 624, 625, 627, 633, 640, 648, 687, 700, 701, 723, 752, 755, 757, 760, 762, 764, 766, 767, 774, 778, 779, 780, 781, 782, 783, 784, 785, 806, 808, 830, 842, 844], "down": [26, 55, 58, 62, 66, 114, 116, 174, 182, 436, 456, 619, 720, 721, 722, 723, 762, 781, 782, 830, 860, 862], "aberr": [26, 174, 195, 473, 475, 476, 482, 483, 492, 493, 755, 758, 762, 876, 879, 883, 884], "queried_weights_inerti": [26, 27, 174, 755, 757, 758, 762, 763], "represent": [26, 82, 118, 174, 182, 188, 189, 455, 518, 526, 533, 550, 708, 711, 712, 715, 716, 718, 719, 724, 725, 726, 751, 755, 759, 762, 786, 787], "sum": [26, 47, 58, 62, 152, 153, 174, 186, 314, 322, 325, 333, 336, 346, 349, 364, 367, 377, 380, 395, 400, 405, 426, 431, 434, 442, 447, 599, 631, 653, 744, 752, 760, 761, 762, 774, 803, 808, 890, 899, 900, 903, 908, 909], "trace": [26, 177, 179, 180, 181, 187, 435, 436, 437, 438, 439, 450, 455, 457, 461, 464, 467, 468, 469, 475, 478, 480, 483, 487, 494, 495, 496, 500, 505, 507, 512, 513, 514, 518, 519, 523, 530, 538, 547, 553, 555, 563, 565, 574, 575, 577, 582, 587, 589, 594, 601, 603, 604, 605, 606, 607, 616, 617, 624, 645, 647, 648, 650, 653, 656, 659, 660, 661, 663, 724, 762, 786], "covari": [26, 28, 55, 58, 62, 174, 186, 289, 314, 325, 329, 336, 341, 349, 357, 367, 371, 372, 380, 388, 400, 401, 407, 409, 415, 426, 610, 631, 648, 746, 748, 762, 813, 814, 817, 818, 820, 823, 824, 825, 826, 830, 835, 838, 840, 843, 847, 850, 854, 858], "queried_weights_pictur": [26, 27, 174, 755, 757, 758, 762, 763], "interest": [26, 31, 33, 47, 114, 121, 174, 191, 201, 202, 203, 206, 207, 210, 214, 483, 684, 693, 752, 755, 757, 760, 762, 765, 774, 782, 783, 842, 844], "identifi": [26, 29, 30, 33, 37, 46, 47, 55, 58, 62, 81, 127, 172, 174, 184, 186, 191, 192, 201, 202, 206, 209, 210, 211, 225, 228, 401, 405, 426, 450, 455, 466, 467, 475, 477, 483, 500, 529, 575, 587, 606, 610, 611, 616, 623, 624, 625, 626, 627, 628, 629, 631, 633, 637, 641, 645, 647, 648, 651, 657, 660, 672, 680, 684, 687, 688, 692, 693, 694, 704, 744, 752, 753, 755, 760, 762, 764, 765, 768, 773, 774, 786, 787, 803, 806, 807, 811, 830, 832, 842, 848, 859, 870, 902, 908], "potenti": [26, 33, 93, 174, 202, 630, 645, 648, 651, 684, 692, 752, 755, 762, 765, 784, 830, 842, 860], "connect": [26, 119, 125, 139, 145, 153, 202, 206, 209, 518, 536, 553, 563, 575, 587, 599, 600, 628, 692, 728, 762, 904], "stat": [26, 202, 206, 214, 762], "peak": [26, 186, 202, 206, 224, 225, 227, 228, 314, 321, 325, 332, 336, 349, 367, 380, 400, 401, 426, 604, 606, 616, 617, 624, 645, 648, 651, 656, 657, 684, 762, 787], "snr": [26, 202, 210, 214, 684, 762, 803, 808], "sublist": [26, 762], "spread": [26, 77, 175, 186, 188, 202, 210, 213, 215, 216, 314, 325, 336, 349, 367, 380, 400, 401, 413, 426, 427, 616, 630, 730, 752, 762, 786, 787, 803, 808], "save_psf": [26, 202, 210, 214, 684, 762], "psf": [26, 77, 186, 188, 191, 202, 224, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 354, 355, 357, 358, 359, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 385, 386, 388, 389, 390, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 606, 616, 684, 692, 762, 786, 787, 808], "attempt": [26, 27, 29, 31, 32, 58, 62, 78, 82, 116, 117, 174, 186, 188, 191, 192, 195, 202, 227, 260, 336, 341, 349, 357, 362, 367, 372, 380, 388, 393, 400, 413, 415, 421, 604, 624, 625, 627, 628, 639, 645, 648, 651, 652, 656, 662, 676, 678, 686, 693, 696, 697, 698, 700, 701, 702, 706, 752, 755, 757, 762, 763, 764, 787, 803, 804, 807, 808, 823, 830, 842, 848, 859, 862, 889], "made": [26, 174, 188, 400, 436, 619, 647, 664, 692, 693, 697, 699, 755, 762, 779, 830, 859, 867, 889], "successfulli": [26, 32, 58, 78, 126, 174, 191, 192, 604, 610, 626, 631, 637, 645, 648, 651, 684, 757, 762, 784, 786, 787, 859], "opencv": [26, 179, 196, 206, 220, 224, 231, 233, 235, 762, 787], "statist": [26, 186, 202, 210, 314, 325, 400, 600, 652, 739, 742, 762, 803, 830], "unmatch": [26, 47, 174, 192, 757, 762, 774, 782, 803, 807, 859], "centroid": [26, 186, 191, 202, 214, 314, 317, 322, 325, 328, 333, 336, 339, 346, 349, 352, 364, 367, 370, 377, 380, 383, 395, 398, 399, 400, 401, 405, 423, 426, 431, 434, 599, 628, 637, 676, 692, 762, 778, 808], "point_spread_funct": [26, 202, 224, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 692, 762, 787], "unmatched_weights_inerti": [26, 27, 174, 755, 762, 763], "unmatched_weights_pictur": [26, 27, 174, 755, 762, 763], "matched_weights_inerti": [26, 27, 36, 174, 755, 762, 763, 767], "matched_weights_pictur": [26, 27, 30, 36, 174, 755, 762, 763, 767], "calibration_class": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 174, 784], "parse_data": [27, 77, 78, 82, 183, 195, 260, 696, 763, 786, 804], "preprocessor": [27, 77, 78, 175, 260, 696, 763, 786, 804], "expand": [27, 78, 202, 696, 763, 804], "account": [27, 31, 32, 55, 58, 62, 73, 174, 435, 491, 628, 637, 646, 692, 696, 763, 804], "add": [27, 62, 77, 78, 168, 174, 175, 177, 179, 182, 186, 195, 260, 349, 380, 400, 407, 409, 417, 422, 424, 432, 435, 483, 490, 529, 630, 676, 696, 739, 763, 784, 787, 788, 804, 816, 843, 849], "consider": [27, 68, 69, 148, 151, 165, 174, 289, 632, 696, 697, 755, 763, 804], "extend": [27, 178, 191, 192, 627, 658, 696, 763, 803, 804, 806, 808, 835, 843, 844, 845, 859], "path": [27, 73, 74, 75, 77, 78, 82, 112, 113, 119, 122, 123, 126, 132, 139, 141, 152, 153, 174, 175, 191, 192, 195, 196, 231, 260, 460, 462, 469, 647, 664, 665, 670, 671, 696, 737, 739, 743, 744, 745, 755, 763, 779, 780, 781, 782, 784, 785, 786, 804, 830, 833, 844, 861, 864, 867, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 911, 912, 915], "pars": [27, 77, 78, 82, 183, 260, 696, 763, 786, 804, 888], "metadata": [27, 77, 78, 82, 87, 93, 174, 175, 183, 195, 197, 260, 696, 755, 763, 788, 804], "measurement_covari": [28, 55, 57, 58, 61, 62, 65, 174, 784, 830], "screen": [28, 72, 174, 178, 453, 456, 465, 483, 704, 863, 869], "displai": [28, 72, 73, 74, 174, 695, 744, 779, 780, 781, 859, 863, 864], "correl": [28, 77, 174, 184, 186, 202, 220, 221, 222, 225, 228, 229, 426, 604, 606, 615, 616, 617, 624, 625, 626, 627, 629, 639, 645, 646, 648, 651, 653, 656, 657, 658, 678, 686, 692, 695, 698, 784, 787, 788, 908], "One": [28, 174, 177, 179, 180, 181, 211, 436, 518, 645, 647, 659, 784, 786], "wasn": [28, 29, 152, 174, 604, 610, 619, 631, 637, 648, 684, 764, 899], "ensur": [28, 57, 58, 66, 77, 78, 82, 88, 91, 94, 126, 152, 174, 178, 186, 202, 231, 289, 314, 321, 325, 332, 336, 341, 349, 357, 367, 372, 380, 388, 415, 432, 483, 529, 608, 613, 621, 624, 625, 626, 627, 628, 635, 642, 648, 651, 654, 658, 672, 681, 689, 692, 704, 739, 746, 784, 785, 786, 787, 801, 866, 871], "post": [28, 55, 58, 62, 72, 174, 186, 314, 325, 336, 349, 367, 380, 426, 746, 748, 749, 752, 784, 787, 830, 833, 836, 902], "matric": [28, 174, 176, 189, 221, 444, 447, 718, 723, 724, 726, 812, 902], "nxn": [28, 58, 62, 174, 407, 409], "rotation_inertial_to_camera": [29, 32, 73, 92, 174, 191, 195, 755, 764, 786], "thorough": [29, 30, 116, 174, 177, 179, 180, 183, 764], "didn": [29, 478, 764], "error": [29, 37, 46, 62, 73, 174, 178, 191, 231, 400, 455, 610, 616, 625, 627, 628, 631, 637, 645, 648, 652, 656, 692, 704, 752, 755, 764, 768, 773, 786, 787, 830], "opnavimag": [29, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 172, 174, 175, 183, 207, 476, 482, 483, 606, 611, 612, 620, 633, 634, 640, 651, 652, 679, 687, 703, 755, 764, 788, 803, 832, 854], "pointing_post_fit": [29, 92, 93, 195, 764], "due": [29, 47, 55, 58, 62, 174, 181, 186, 191, 321, 332, 344, 345, 361, 363, 375, 376, 392, 394, 408, 412, 449, 450, 500, 518, 604, 628, 631, 656, 674, 752, 764, 774, 786, 787, 807, 819, 867], "lack": [29, 764], "fail": [29, 62, 174, 186, 213, 228, 341, 357, 372, 388, 415, 416, 430, 604, 610, 630, 631, 637, 648, 657, 684, 695, 698, 700, 701, 702, 706, 764], "overwrit": [29, 30, 76, 92, 94, 126, 174, 178, 195, 460, 712, 724, 764, 889, 892, 895, 902, 904], "sure": [29, 30, 78, 88, 115, 174, 201, 218, 400, 437, 467, 500, 604, 605, 606, 608, 610, 611, 621, 631, 633, 637, 640, 642, 648, 651, 654, 681, 684, 687, 689, 692, 695, 738, 744, 752, 755, 764, 784, 786, 823, 837, 902], "yourself": [29, 30, 116, 117, 122, 123, 174, 182, 186, 407, 409, 462, 469, 626, 692, 739, 764, 786], "temepratur": [31, 174], "Then": [31, 32, 174, 186, 192, 209, 361, 363, 392, 394, 412, 465, 478, 574, 601, 611, 616, 630, 633, 641, 643, 647, 665, 672, 680, 682, 688, 690, 786, 787, 788, 806, 811, 835], "unless": [31, 32, 119, 151, 174, 177, 179, 180, 181, 511, 515, 516, 522, 529, 604, 610, 619, 624, 628, 631, 637, 645, 647, 648, 665, 676, 684, 692, 694, 755, 782, 808, 823], "magic": [31, 32, 174], "howev": [31, 32, 34, 62, 73, 77, 78, 114, 151, 174, 182, 186, 191, 195, 214, 260, 289, 398, 400, 401, 436, 442, 445, 446, 447, 455, 518, 519, 608, 616, 618, 619, 621, 624, 626, 628, 642, 646, 648, 651, 654, 659, 675, 681, 689, 692, 693, 704, 714, 739, 779, 784, 786, 801, 830, 889, 916], "recommend": [31, 32, 73, 75, 77, 78, 113, 115, 151, 165, 174, 176, 177, 179, 180, 181, 186, 195, 231, 341, 357, 372, 388, 415, 436, 439, 473, 500, 518, 519, 604, 648, 672, 737, 738, 755, 781, 786, 803, 864, 867], "whose": [32, 81, 83, 84, 85, 86, 89, 90, 174, 752, 760, 784, 816, 823], "cal": [32, 70, 174, 784], "obvious": [32, 174], "incomplet": [32, 174], "concept": [32, 174], "thing": [32, 87, 96, 114, 115, 126, 174, 175, 177, 179, 180, 181, 183, 186, 187, 192, 195, 407, 409, 438, 439, 453, 456, 469, 481, 575, 587, 616, 619, 625, 626, 627, 628, 629, 647, 648, 651, 652, 665, 672, 674, 692, 693, 699, 704, 708, 741, 755, 784, 786, 787, 788, 807, 835, 843, 859, 864, 867, 915], "small": [32, 116, 117, 174, 181, 187, 191, 436, 439, 517, 624, 629, 641, 645, 647, 659, 665, 675, 680, 688, 739, 752, 755, 786], "variat": [32, 174, 619], "As": [32, 58, 115, 119, 132, 141, 151, 174, 183, 191, 536, 546, 553, 563, 625, 627, 629, 651, 659, 665, 692, 784, 787, 842, 852, 854, 856, 889], "extract": [33, 55, 172, 174, 188, 191, 195, 201, 202, 208, 209, 212, 221, 604, 610, 611, 612, 615, 616, 617, 619, 625, 626, 627, 628, 629, 630, 631, 633, 634, 637, 640, 645, 671, 684, 687, 692, 693, 695, 699, 744, 753, 755, 756, 757, 760, 765, 784, 786, 803, 805, 848, 854, 864], "locate_subpixel_poi_in_roi": [33, 174, 184, 202, 203, 207, 630, 684, 755, 765], "subpixel": [33, 184, 191, 202, 209, 210, 211, 212, 213, 214, 218, 225, 228, 472, 604, 616, 624, 625, 627, 645, 646, 657, 687, 765], "extracted_image_point": [33, 174, 755, 765], "further": [33, 174, 186, 202, 207, 424, 436, 495, 497, 625, 626, 627, 692, 695, 765, 784, 844], "posit": [33, 114, 116, 117, 165, 170, 174, 182, 183, 188, 189, 191, 195, 202, 455, 458, 473, 475, 476, 483, 484, 485, 491, 502, 504, 506, 507, 511, 519, 524, 531, 536, 539, 548, 553, 556, 563, 566, 575, 578, 587, 590, 604, 610, 611, 612, 616, 619, 623, 624, 625, 626, 627, 631, 632, 633, 634, 637, 645, 648, 651, 652, 653, 656, 658, 676, 684, 692, 694, 695, 699, 704, 708, 732, 734, 736, 752, 755, 765, 785, 786, 787, 814, 817, 818, 819, 820, 824, 825, 826, 833, 835, 843, 847, 852, 856, 858, 867, 876, 877, 878, 879, 880, 883, 884, 887, 899, 902, 908], "veloc": [33, 165, 174, 183, 195, 492, 493, 714, 755, 765, 786, 814, 818, 820, 825, 826, 833, 835, 847, 852, 856, 858, 867, 879, 884, 899], "min_magnitud": [34, 174, 752, 755, 759], "max_magnitud": [34, 174, 191, 752, 755, 759, 784, 787], "in_plac": [34, 174], "matched_": [34, 174, 778], "rare": [34, 174, 259, 436, 469, 518, 648, 665, 676, 755], "achiev": [34, 62, 64, 125, 174, 211, 314, 325, 336, 349, 367, 380], "complet": [34, 56, 60, 77, 94, 116, 117, 172, 174, 178, 187, 209, 231, 289, 483, 487, 605, 617, 631, 645, 648, 651, 665, 745, 748, 752, 785, 786, 840, 860], "now": [34, 174, 177, 179, 180, 181, 231, 483, 647, 692, 739, 784, 786, 787, 788, 867, 886], "filter": [34, 77, 81, 124, 129, 136, 137, 149, 150, 174, 175, 182, 188, 201, 207, 228, 625, 627, 631, 647, 657, 659, 662, 665, 672, 674, 692, 693, 743, 752, 784, 787, 816, 830, 831, 834, 835, 844, 845, 854, 858, 859, 862, 863], "plot": [34, 72, 73, 75, 174, 754, 778, 779, 780, 781, 784, 787, 849, 863, 864], "purpos": [34, 77, 115, 125, 174, 194, 195, 202, 435, 443, 450, 455, 468, 483, 512, 574, 605, 616, 647, 658, 659, 676, 694, 699, 735, 805, 830, 859], "expos": [34, 174, 191, 192, 195, 618, 692, 755, 787, 908], "fewer": [34, 174, 455, 661, 663], "edit": [34, 174, 693, 695], "preserv": [34, 87, 150, 174], "larg": [34, 111, 113, 114, 116, 117, 174, 187, 188, 191, 231, 436, 450, 455, 486, 500, 518, 624, 628, 629, 637, 645, 646, 647, 648, 651, 658, 659, 665, 692, 745, 752, 787, 830, 854, 865], "amount": [34, 174, 191, 192, 647, 739, 830], "memori": [34, 58, 62, 125, 142, 150, 174, 192, 469, 518, 647, 659, 665, 668, 669, 695, 739, 743, 745, 801, 805, 830, 859, 862, 864, 896, 905], "modifi": [34, 51, 55, 77, 158, 165, 174, 407, 409, 413, 417, 422, 424, 432, 455, 648, 649, 651, 673, 695, 704, 739, 848], "revers": [34, 174, 203, 840], "cannot": [34, 55, 94, 124, 128, 129, 136, 137, 149, 150, 174, 186, 426, 512, 514, 546, 599, 619, 640, 647, 687, 704, 823], "cautiou": [34, 174, 536, 553, 563, 575, 587, 742], "minimum": [34, 55, 72, 120, 124, 128, 129, 130, 136, 137, 149, 150, 174, 191, 202, 203, 400, 444, 456, 477, 487, 494, 495, 497, 499, 515, 522, 537, 554, 564, 575, 576, 587, 588, 604, 616, 623, 624, 628, 637, 645, 648, 656, 659, 660, 692, 745, 752, 755, 803, 816, 823, 830, 835, 839, 859, 908], "accept": [34, 48, 49, 50, 52, 53, 54, 174, 189, 228, 262, 483, 491, 511, 522, 604, 624, 645, 648, 656, 657, 692, 707, 755, 775, 776, 777, 830, 867, 886], "recal": [34, 120, 124, 129, 136, 137, 149, 150, 174, 181], "limit": [34, 125, 174, 187, 436, 455, 604, 616, 625, 627, 628, 637, 659, 752, 848], "brightest": [34, 114, 116, 125, 174], "maximum": [34, 58, 62, 93, 120, 124, 126, 127, 129, 136, 137, 145, 149, 150, 174, 186, 191, 202, 203, 213, 225, 226, 227, 228, 336, 341, 349, 357, 367, 372, 380, 388, 413, 415, 448, 449, 450, 455, 456, 487, 494, 495, 497, 499, 537, 554, 564, 574, 576, 588, 601, 603, 627, 631, 633, 645, 648, 656, 657, 659, 672, 674, 737, 739, 752, 755, 760, 786, 830, 840, 889, 908], "dimmest": [34, 174], "image_num": [35, 36, 766, 767, 783], "residu": [35, 55, 56, 58, 59, 60, 62, 63, 64, 71, 73, 174, 186, 314, 325, 336, 341, 349, 357, 367, 372, 380, 388, 400, 401, 407, 409, 415, 426, 602, 606, 610, 631, 633, 645, 648, 656, 749, 754, 761, 766, 779, 780, 781, 782, 783, 784, 787, 830, 833, 835, 836, 838, 840, 851, 855, 892], "star_indic": [36, 767], "sigma_cutoff": [37, 46, 768, 773, 870], "hard_threshold": [37, 46, 768, 773, 784], "outlier": [37, 46, 627, 631, 645, 648, 652, 754, 768, 773, 778, 783, 784, 865, 870], "get_outli": [37, 46, 631, 768, 773, 865], "hard": [37, 46, 174, 191, 628, 665, 768, 773, 859], "threshold": [37, 46, 83, 84, 85, 86, 89, 90, 174, 191, 202, 208, 209, 211, 224, 628, 630, 637, 665, 695, 752, 760, 768, 773, 808, 830, 870, 908], "simpli": [37, 42, 46, 51, 66, 70, 72, 77, 82, 114, 116, 117, 119, 132, 141, 174, 177, 179, 180, 181, 184, 186, 210, 224, 314, 320, 325, 331, 336, 343, 349, 359, 367, 374, 380, 390, 401, 411, 413, 426, 429, 436, 437, 438, 445, 446, 455, 469, 480, 483, 494, 498, 519, 536, 616, 652, 665, 671, 692, 708, 711, 748, 750, 753, 768, 773, 784, 786, 787, 788, 803, 835, 842, 849, 850, 870], "total": [37, 46, 47, 174, 186, 189, 202, 213, 314, 325, 336, 349, 367, 380, 400, 450, 465, 600, 647, 665, 710, 755, 768, 773, 774, 830, 889], "sigma": [37, 46, 202, 213, 215, 216, 319, 330, 342, 358, 373, 389, 645, 648, 768, 773, 830, 858, 870, 892, 899, 902, 908], "median": [37, 46, 201, 207, 450, 453, 631, 768, 773, 865, 870], "absolut": [37, 46, 58, 62, 64, 174, 186, 202, 211, 336, 341, 349, 357, 367, 372, 380, 388, 413, 415, 574, 601, 631, 647, 665, 671, 752, 755, 768, 773, 830, 865, 870], "deviat": [37, 46, 64, 75, 174, 186, 207, 314, 325, 336, 349, 367, 380, 400, 401, 426, 631, 768, 773, 787, 830, 833, 836, 865, 870], "check": [37, 46, 58, 81, 83, 84, 85, 86, 89, 90, 94, 151, 152, 174, 183, 187, 191, 195, 211, 223, 230, 231, 436, 450, 468, 483, 494, 495, 497, 500, 501, 503, 505, 509, 519, 546, 553, 563, 604, 605, 610, 631, 637, 647, 648, 651, 656, 658, 659, 665, 672, 674, 684, 692, 695, 698, 700, 701, 702, 706, 708, 719, 725, 738, 752, 768, 773, 784, 786, 851, 855], "reproject": [38, 769], "exist": [39, 40, 41, 43, 44, 45, 51, 75, 108, 112, 113, 114, 115, 119, 132, 141, 174, 182, 186, 195, 261, 341, 357, 372, 388, 415, 417, 514, 522, 626, 664, 684, 692, 705, 738, 739, 743, 745, 770, 771, 772, 786, 830, 843, 899, 908], "backward": [39, 40, 41, 43, 44, 45, 174, 261, 705, 770, 771, 772, 831, 835, 838, 840], "whatsoev": [39, 40, 41, 43, 44, 45, 174, 261, 705, 770, 771, 772], "calibration_estimator_upd": [40, 49, 51, 174], "suppli": [42, 48, 49, 50, 52, 53, 54, 58, 82, 174, 175, 186, 262, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 400, 423, 428, 467, 602, 637, 640, 687, 692, 695, 704, 707, 715, 741, 775, 776, 777, 847, 849], "shortcut": [42, 51, 174], "reset_xxx": [42, 174], "review": [46, 773, 778, 848], "gui": [46, 773, 863], "manual": [46, 58, 174, 183, 195, 231, 665, 672, 739, 754, 773, 784, 835, 912], "show_outli": [46, 773, 778], "autom": [46, 659, 773], "remove_outli": [46, 773, 784], "overal": [47, 186, 322, 333, 346, 364, 377, 395, 431, 434, 536, 553, 563, 575, 587, 774, 784], "stdout": [47, 742, 774, 784, 869, 912, 913, 914, 915, 916, 917, 918], "q": [47, 66, 67, 93, 174, 189, 625, 708, 712, 714, 715, 716, 718, 719, 724, 725, 728, 748, 750, 751, 774, 817, 824], "insid": [47, 111, 206, 455, 604, 610, 619, 631, 637, 648, 676, 684, 692, 752, 774], "outsid": [47, 222, 229, 604, 605, 610, 627, 631, 645, 665, 672, 674, 692, 774, 784], "poi": [47, 174, 202, 752, 760, 774], "u": [47, 58, 139, 153, 171, 174, 177, 179, 180, 181, 182, 186, 187, 191, 237, 321, 332, 436, 469, 628, 629, 637, 645, 692, 694, 737, 743, 774, 784, 785, 786, 787, 789, 874], "utc": [47, 77, 174, 758, 759, 774, 786, 808, 833, 873, 902, 908], "line": [47, 75, 77, 114, 126, 151, 186, 190, 221, 225, 231, 314, 316, 317, 325, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 400, 401, 403, 422, 423, 428, 504, 604, 610, 616, 617, 618, 625, 627, 631, 639, 648, 651, 656, 672, 674, 678, 686, 692, 693, 774, 784, 785, 787, 854, 892, 899, 902, 908, 912, 915], "fov": [47, 174, 645, 672, 675, 762, 774, 784], "fall": [47, 81, 191, 623, 637, 774, 899], "below": [47, 55, 174, 191, 193, 231, 517, 518, 692, 752, 755, 760, 774, 784, 786, 788, 908], "charact": [47, 604, 619, 626, 648, 676, 692, 694, 713, 774, 786, 892, 895, 908], "attitude_estimator_upd": [48, 51, 174, 775], "alon": [48, 49, 50, 52, 53, 54, 72, 174, 177, 179, 180, 181, 262, 692, 707, 752, 755, 775, 776, 777], "pair": [48, 49, 50, 52, 53, 54, 55, 93, 120, 124, 127, 129, 136, 137, 144, 148, 149, 150, 167, 168, 174, 191, 192, 207, 221, 262, 472, 483, 609, 610, 612, 614, 616, 617, 619, 622, 623, 626, 627, 628, 631, 633, 634, 636, 637, 644, 651, 655, 683, 691, 692, 694, 695, 697, 698, 700, 701, 702, 706, 707, 744, 746, 748, 749, 751, 752, 755, 757, 760, 775, 776, 777, 778, 782, 783, 784, 786, 803, 807, 808, 809, 830, 832, 834, 854, 859], "image_processing_upd": [50, 51, 174, 262, 707, 776], "star_id_upd": [51, 52, 174, 777], "static_alignment_estimator_upd": [51, 174], "temperature_dependent_alignment_estimator_upd": [51, 54, 174], "update_xxx": [51, 174], "alignment_estimator_upd": [53, 174], "templat": [55, 77, 174, 184, 186, 202, 204, 220, 222, 229, 426, 604, 606, 610, 619, 620, 624, 626, 631, 637, 645, 646, 648, 651, 653, 656, 658, 676, 679, 684, 692, 693, 695, 698, 704, 746, 788, 843], "abc": [55, 94, 115, 128, 174, 178, 186, 400, 413, 422, 424, 426, 432, 619, 626, 746, 850], "expect": [55, 77, 87, 119, 128, 132, 141, 174, 178, 186, 188, 191, 195, 202, 314, 325, 336, 341, 349, 357, 367, 372, 380, 388, 400, 415, 422, 426, 435, 443, 444, 455, 457, 463, 538, 544, 546, 547, 551, 555, 561, 565, 572, 577, 585, 589, 597, 605, 606, 619, 624, 628, 630, 631, 637, 640, 645, 648, 658, 684, 692, 695, 752, 755, 784, 786, 787, 808, 810, 813, 830, 843, 850], "consist": [55, 174, 442, 483, 500, 503, 665, 786, 807], "readabl": [55, 103, 174, 178, 483, 604, 610, 631, 637, 648, 684], "writeabl": [55, 174], "coupl": [55, 174, 191, 231, 435, 693, 752, 755, 782], "beyond": [55, 128, 174, 177, 179, 180, 181, 186, 188, 192, 417, 553, 563, 575, 587, 619, 624, 625, 627, 629, 647, 744, 835, 859], "probabl": [55, 114, 128, 174, 178, 195, 439, 450, 452, 454, 480, 645, 659, 786], "concret": [55, 58, 94, 95, 128, 174, 177, 178, 179, 180, 181, 186, 417, 422, 424, 432, 619, 626, 630, 692, 854], "nearli": [55, 62, 77, 114, 116, 174, 177, 179, 180, 181, 458, 459, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 604, 624, 648, 656, 719, 725, 752, 808], "own": [55, 75, 139, 152, 153, 174, 176, 182, 184, 188, 202, 224, 435, 494, 500, 623, 659, 692, 704, 741, 751, 813, 823, 843, 847, 854, 876, 879], "studi": [55, 174], "typeerror": [55, 94, 174, 186, 426, 787], "read": [55, 77, 94, 115, 119, 151, 174, 178, 188, 195, 196, 437, 460, 626, 665, 708, 739, 746, 752, 755, 784, 786, 787, 801, 803, 889, 892, 895, 899, 902, 904, 908, 911], "write": [55, 77, 94, 145, 174, 178, 184, 188, 626, 692, 746, 785, 801, 868, 869, 888, 889, 892, 895, 899, 902, 904, 908, 912, 915], "otherwis": [55, 58, 62, 93, 112, 114, 170, 174, 177, 179, 180, 181, 186, 341, 357, 372, 388, 407, 409, 415, 439, 495, 497, 507, 605, 648, 650, 684, 697, 748, 840, 851, 855, 870, 915], "weighted_estim": [55, 58, 62, 174, 746, 747, 748], "a_priori_state_covari": [55, 57, 58, 61, 62, 65, 174], "lxl": [55, 58, 62, 174], "len": [55, 58, 62, 174, 177, 179, 180, 233, 477, 693, 852, 856], "get_state_label": [55, 58, 62, 174], "nx2": [55, 58, 62, 174, 186, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 423, 428, 500, 626, 692], "camera_frame_direct": [55, 57, 58, 59, 60, 61, 62, 63, 65, 174], "uniqu": [55, 58, 62, 114, 174, 189, 450, 455, 466, 467, 475, 500, 529, 708, 752, 784, 803, 830, 854, 866, 871], "subsequ": [55, 57, 58, 62, 174, 191, 192, 224, 456, 468, 546, 745, 830, 832, 844, 870, 916], "reason": [55, 58, 62, 174, 553, 563, 604, 610, 619, 631, 637, 645, 648, 652, 659, 665, 684, 695, 737, 835, 908], "empti": [55, 58, 62, 77, 134, 174, 460, 645, 648, 653, 658, 695, 789], "drop": [55, 58, 62, 174, 867], "notifi": [55, 58, 62, 174, 648, 786], "although": [55, 58, 62, 77, 128, 174, 186, 341, 357, 372, 388, 415, 424, 616, 692, 755, 843, 847], "sometim": [55, 58, 62, 174, 455, 652, 786, 829], "avail": [55, 58, 62, 114, 117, 122, 123, 126, 145, 164, 174, 182, 193, 231, 289, 400, 519, 604, 610, 631, 637, 647, 648, 652, 665, 667, 684, 697, 743, 752, 755, 784, 786, 787, 845, 867, 872, 882, 883, 884, 904], "postfit_covari": [55, 56, 57, 58, 60, 61, 62, 65, 174], "yet": [55, 58, 62, 174, 665, 748, 749, 752, 784, 860], "postfit_residu": [55, 56, 57, 58, 60, 61, 62, 65, 174], "minim": [56, 60, 71, 174, 192, 495, 497, 602, 645, 647, 648, 652, 704, 751, 784, 889], "upon": [56, 60, 174], "unsuccess": [56, 58, 60, 62, 174, 186, 214, 321, 332, 344, 345, 361, 363, 375, 376, 392, 394, 408, 412, 430, 631], "everyth": [56, 174, 186, 191, 324, 335, 348, 366, 379, 397, 426, 440, 457, 538, 547, 555, 565, 577, 589, 629, 672, 692, 755, 786, 816, 838, 848], "els": [56, 174, 195, 400, 448, 625, 645, 692, 786], "whatev": [56, 174, 400, 469, 619, 692, 786, 850, 899, 908], "mix": [57, 58, 174, 604, 648, 672], "choos": [57, 174, 224, 475, 625, 627, 652, 693, 698, 700, 701, 702, 704, 706, 784, 787, 871], "max_it": [58, 62, 174, 186, 336, 341, 349, 357, 367, 372, 380, 388, 413, 415, 627, 631], "residual_atol": [58, 62, 174, 631], "residual_rtol": [58, 62, 174, 631], "state_atol": [58, 62, 174, 631], "state_rtol": [58, 62, 174, 631], "At": [58, 174, 231, 616, 658, 784, 830], "diverg": [58, 62, 174, 186, 341, 357, 372, 388, 415, 631, 851, 855], "pre": [58, 174, 400, 695, 704, 749, 785, 840, 902], "here": [58, 71, 75, 77, 112, 113, 165, 174, 192, 195, 212, 232, 440, 449, 483, 575, 587, 625, 627, 629, 645, 647, 652, 658, 665, 692, 694, 704, 748, 784, 785, 786, 787, 788, 830, 845, 855, 869], "show": [58, 174, 181, 191, 435, 483, 633, 648, 656, 741, 754, 778, 779, 781, 782, 784, 786, 787, 849, 864], "exactli": [58, 62, 71, 113, 174, 188, 619, 651, 692, 704], "guess": [58, 62, 174, 186, 192, 341, 357, 362, 372, 388, 393, 407, 409, 413, 415, 421, 486, 627, 784, 787, 835], "close": [58, 114, 116, 117, 174, 186, 228, 627, 657, 676, 692, 744, 752, 755, 778, 784, 788, 808, 809, 842, 843, 912, 915, 917, 918], "enough": [58, 77, 111, 116, 117, 174, 627, 629, 647, 648, 665, 692, 737, 785, 835], "broad": [58, 174, 192], "sens": [58, 68, 174, 221, 225, 228, 625, 657, 698, 700, 701, 702, 706], "imposs": [58, 174, 647, 786], "experi": [58, 62, 174, 181, 692, 740], "manufactur": [58, 174], "spec": [58, 151, 174], "even": [58, 81, 126, 174, 188, 453, 456, 472, 500, 536, 546, 553, 563, 604, 606, 608, 621, 624, 628, 642, 646, 647, 649, 652, 654, 665, 673, 681, 689, 692, 693, 784, 786, 830], "heavi": [58, 174, 177, 179, 180, 181], "anywai": [58, 174, 518, 647, 704], "wish": [58, 70, 96, 174, 400, 458, 459, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 753, 813, 815, 822, 828], "keep": [58, 174, 519, 627, 647, 652, 665, 757, 778, 784, 786, 809, 837], "reach": [58, 62, 174, 182, 186, 341, 357, 372, 388, 415, 455, 456, 633, 737], "le": [58, 174], "a_r": [58, 174], "r_r": [58, 174], "text": [58, 112, 113, 116, 167, 168, 170, 174, 186, 189, 232, 319, 325, 330, 342, 358, 373, 389, 455, 456, 625, 715, 719, 720, 721, 722, 724, 725, 726, 728, 756, 784, 785, 786, 787, 870, 902], "r_": [58, 174, 602], "nx1": [58, 174, 904], "toler": [58, 62, 64, 174, 186, 191, 336, 341, 349, 357, 367, 372, 380, 388, 413, 415, 574, 601, 631, 648, 656, 692, 752, 755, 784, 787], "rel": [58, 62, 64, 69, 174, 186, 191, 194, 195, 336, 341, 349, 357, 367, 372, 380, 388, 413, 415, 450, 455, 458, 483, 491, 492, 493, 504, 518, 519, 524, 531, 539, 548, 556, 566, 574, 578, 590, 600, 601, 604, 610, 612, 616, 619, 623, 624, 625, 626, 627, 629, 631, 634, 637, 645, 648, 651, 652, 653, 656, 659, 676, 684, 692, 693, 694, 695, 704, 739, 742, 748, 752, 786, 787, 835, 844, 857, 867, 878, 881, 891, 894, 895, 898, 901, 907, 910], "occur": [58, 174, 181, 494, 507, 630, 648, 695, 807, 830, 867, 908], "ceas": [58, 174, 186, 336, 349, 367, 380, 413], "those": [58, 114, 115, 174, 176, 187, 188, 191, 231, 451, 500, 517, 626, 645, 665, 693, 704, 717, 751, 752, 753, 758, 784, 834, 835, 844, 848], "correctli": [58, 83, 84, 85, 86, 89, 90, 174, 191, 475, 620, 628, 645, 679, 692, 752, 755, 760, 784], "criteria": [58, 62, 174, 186, 341, 357, 372, 388, 415, 631, 760], "3xj": [58, 62, 174], "3x1": [58, 62, 174, 469], "j": [58, 62, 174, 186, 318, 329, 340, 354, 355, 356, 371, 385, 386, 387, 410, 414, 419, 448, 449, 504, 724, 756, 785, 805, 817, 824], "ravel": [58, 62, 168, 174, 435, 692, 814, 818, 825], "fortran": [58, 62, 174, 867, 875, 876, 879], "x1": [58, 62, 174], "y1": [58, 62, 174], "x2": [58, 62, 174], "y2": [58, 62, 174], "xk": [58, 62, 174], "yk": [58, 62, 174], "varianc": [58, 62, 174, 858], "treat": [58, 62, 174, 186, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 423, 428, 455, 630, 637, 647, 786], "cov": [58, 62, 174], "effici": [58, 62, 116, 174, 182, 186, 187, 355, 386, 410, 414, 436, 437, 449, 452, 454, 455, 457, 461, 463, 464, 469, 494, 500, 513, 518, 538, 544, 547, 551, 555, 561, 565, 572, 577, 585, 589, 597, 625, 627, 641, 645, 647, 661, 663, 672, 680, 688, 714, 739, 743, 745, 784, 896, 905], "wai": [58, 62, 75, 77, 78, 88, 114, 139, 165, 174, 177, 179, 180, 181, 185, 186, 187, 189, 192, 194, 203, 210, 336, 349, 367, 380, 417, 436, 457, 462, 469, 484, 501, 517, 518, 538, 547, 555, 565, 574, 577, 589, 601, 612, 624, 629, 630, 633, 634, 645, 647, 648, 649, 651, 656, 672, 673, 674, 695, 704, 708, 714, 728, 739, 744, 745, 752, 784, 786, 787, 788, 838, 859, 864, 877, 878, 880, 881], "nonlinear": [60, 62, 174, 186, 407, 409, 413, 417, 652], "discuss": [60, 174, 176, 191, 211, 212, 435, 439, 610, 625, 627, 645, 665, 687, 693, 695, 715, 718, 719, 724, 725, 752, 755, 786, 788, 842], "clear": [61, 65, 174, 440, 784, 805, 859], "cach": [61, 65, 174, 708], "max_divergence_step": [62, 174], "levenberg": [62, 174], "marquardt": [62, 174], "analog": [62, 174, 186, 400], "damp": [62, 174], "perspect": [62, 174, 629], "answer": [62, 116, 117, 119, 132, 141, 174, 816], "slower": [62, 174, 201, 202, 625, 627, 646, 665], "rate": [62, 174], "robust": [62, 174, 652], "start": [62, 76, 77, 111, 140, 151, 174, 176, 183, 186, 194, 195, 201, 218, 229, 230, 437, 450, 467, 468, 469, 470, 471, 472, 473, 483, 507, 519, 615, 617, 623, 626, 645, 647, 675, 692, 714, 728, 739, 745, 748, 784, 785, 786, 787, 830, 840, 875, 914], "switch": [62, 174, 184, 188, 645, 695], "issu": [62, 75, 174, 192, 450, 628, 647, 665, 692, 782, 789], "lma": [62, 64, 174], "inspir": [62, 174, 915], "http": [62, 116, 174, 192, 200, 211, 212, 213, 215, 216, 219, 220, 224, 231, 443, 455, 458, 468, 495, 497, 513, 539, 548, 556, 566, 578, 590, 643, 682, 690, 694, 784, 785, 789, 801, 830, 842, 844, 848, 867, 868, 875, 876, 879, 915], "springer": [62, 174], "com": [62, 174, 192, 211, 212, 224, 231, 495, 497, 739, 789, 830, 842, 844, 848, 915], "articl": [62, 174, 211, 212, 455, 643, 682, 690], "1007": [62, 174], "s40295": [62, 174], "016": [62, 174], "0091": [62, 174], "postfit": [64, 174], "etc": [64, 174, 175, 178, 183, 191, 194, 202, 507, 629, 745], "less": [64, 117, 127, 151, 174, 186, 191, 214, 336, 349, 367, 380, 413, 441, 442, 445, 446, 447, 450, 453, 455, 456, 604, 616, 625, 627, 628, 630, 637, 648, 652, 658, 697, 714, 719, 725, 752, 755, 760, 784, 803], "prefit": [64, 72, 174], "frame1_unit_vec": [66, 174], "frame2_unit_vec": [66, 174], "davenport": [66, 67, 174, 748, 750, 751], "wahba": [66, 174, 748, 749, 750, 751], "problem": [66, 174, 191, 231, 625, 627, 645, 648, 651, 652, 656, 748, 749, 750, 752, 782, 789, 843], "target": [66, 68, 69, 139, 153, 174, 188, 195, 202, 435, 436, 438, 439, 455, 475, 476, 479, 480, 481, 486, 487, 491, 492, 493, 494, 500, 574, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 651, 652, 653, 654, 655, 656, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 704, 706, 741, 744, 745, 746, 748, 762, 786, 787, 803, 830, 835, 843, 845, 852, 853, 856, 857, 858, 859, 876, 877, 878, 879, 880, 881, 882, 883, 884, 899, 902, 908], "tear": [66, 174], "destin": [66, 174], "good": [66, 174, 188, 191, 192, 483, 494, 624, 625, 627, 645, 692, 752, 784, 786, 787, 830, 834], "frame_1_rot": [68, 69, 174], "frame_2_rot": [68, 69, 174], "xyz": [68, 73, 174, 494, 499, 713, 717, 723], "tait": [68, 73, 174], "bryan": [68, 73, 174], "_b": [68, 174, 181, 189], "_m": [68, 174], "theta_m": [68, 174], "theta_n": [68, 174], "theta_p": [68, 174], "_a": [68, 174, 189], "th": [68, 174, 192, 209, 500, 652, 756], "theta_i": [68, 174], "rang": [68, 75, 77, 81, 174, 177, 179, 180, 181, 191, 192, 624, 625, 627, 645, 692, 693, 858, 871], "t_1": [68, 174, 625], "t_2": [68, 174], "vdot": [68, 174, 625], "t_n": [68, 174], "theta_": [68, 174], "m0": [68, 174], "n0": [68, 174], "p0": [68, 174], "m1": [68, 174], "n1": [68, 174], "vphantom": [68, 174], "setup": [68, 174, 185, 522, 703, 786, 834], "convent": [68, 75, 168, 174, 692, 694, 704, 744, 786], "quaternion_to_eul": [68, 174], "under": [68, 69, 148, 151, 171, 174, 186, 232, 289, 323, 334, 347, 365, 378, 396, 398, 400, 439, 632, 659, 697, 752, 755], "angle_m_offset": [68, 174], "constant": [68, 71, 115, 118, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 174, 184, 186, 187, 193, 349, 380, 409, 417, 435, 437, 438, 483, 693, 714, 738, 816, 823, 867, 868], "radian": [68, 69, 155, 157, 160, 161, 167, 168, 170, 174, 186, 189, 325, 367, 380, 448, 449, 479, 500, 501, 616, 625, 627, 648, 656, 720, 721, 722, 723], "angle_m_slop": [68, 174], "angle_n_offset": [68, 174], "angle_n_slop": [68, 174], "angle_p_offset": [68, 174], "angle_p_slop": [68, 174], "angle_": [69, 174], "still": [69, 128, 172, 174, 191, 469, 483, 488, 518, 627, 628, 641, 645, 646, 652, 658, 668, 675, 680, 688, 695, 699, 752, 784, 902], "world": [70, 181, 455, 486, 487, 692, 788], "knowledg": [70, 77, 174, 176, 188, 195, 519, 610, 615, 616, 624, 625, 626, 627, 628, 631, 637, 645, 647, 648, 651, 652, 656, 684, 692, 693, 694, 695, 735, 755, 762, 784, 787, 788], "ti": [70, 739], "bu": 70, "highli": [70, 174], "interact": [70, 72, 73, 114, 184, 202, 400, 438, 439, 450, 512, 517, 529, 619, 629, 646, 647, 659, 665, 672, 676, 693, 753, 779, 780, 781, 784, 786, 830, 845, 848, 859, 863, 864, 869], "veri": [70, 114, 116, 117, 145, 174, 182, 187, 191, 192, 195, 202, 455, 469, 494, 513, 518, 599, 625, 627, 628, 629, 641, 645, 647, 648, 652, 658, 665, 675, 680, 688, 714, 742, 744, 752, 784, 787, 788, 807, 808, 842, 845], "similar": [70, 113, 174, 181, 191, 192, 231, 438, 483, 500, 518, 645, 659, 737, 752, 784, 787, 847], "preform": 70, "transfer": [70, 186, 647, 695, 753, 848], "creation": [70, 753], "aspect": [70, 753], "never": [70, 77, 174, 460, 462, 518, 522, 536, 618, 627, 660, 738, 739, 740, 741, 742, 743, 744, 745, 752, 753, 755], "directori": [70, 114, 116, 117, 122, 123, 126, 132, 139, 141, 153, 174, 191, 231, 647, 664, 670, 671, 693, 738, 743, 744, 745, 753, 784, 785, 786, 787, 823], "sample_data": [70, 174, 191, 693, 738, 753], "pickl": [70, 174, 177, 179, 180, 181, 191, 436, 450, 455, 460, 462, 494, 500, 645, 647, 665, 693, 738, 739, 740, 741, 742, 743, 744, 745, 752, 753, 755, 787, 867, 875, 876, 879], "open": [70, 151, 174, 191, 192, 232, 460, 462, 645, 693, 738, 739, 740, 741, 742, 743, 744, 745, 752, 753, 755, 781, 784, 785, 786, 787, 899, 908, 912, 915], "rb": [70, 174, 191, 645, 693, 753, 787], "ifil": [70, 912, 915], "signifi": 70, "def": [70, 185, 483, 692, 693, 784, 785, 786], "base_fram": 70, "arg": [70, 197, 786, 789, 795, 798], "hte": 70, "depth": [70, 174, 186, 188, 191, 192, 314, 325, 336, 349, 367, 380, 401, 426, 455, 456, 640, 647, 687, 693, 739, 753, 755], "examin": [70, 191, 518, 553, 563, 693, 752, 753, 787, 849], "api": [70, 172, 230], "abil": [71, 175, 186, 407, 409, 436, 438, 444, 708, 739, 751, 752, 787, 788, 854, 868, 869, 912], "monocular": [71, 188, 192, 842, 844, 848], "realli": [71, 119, 188, 191, 195, 623, 652, 695, 752, 782, 784, 786, 787, 847, 867], "known": [71, 114, 186, 192, 422, 623, 624, 625, 626, 630, 692, 694, 751, 752, 786, 808, 852, 856, 889], "inspect": [72, 112, 113, 195, 626, 692, 695, 754, 782, 784, 848], "pdf": [72, 73, 74, 75, 458, 513, 539, 548, 556, 566, 578, 590, 643, 682, 690, 779, 780, 781, 782, 784, 830, 842, 844, 848], "pdf_name": [72, 73, 74, 75, 779, 780, 781, 782], "leav": [72, 126, 174, 195, 213, 647, 692, 714, 728, 745, 748, 787, 816, 823, 844, 908], "comparison": [72, 151, 453, 744], "pertin": [72, 195], "visual": [73, 74, 75, 114, 116, 137, 150, 174, 182, 188, 191, 231, 695, 752, 778, 782, 783, 784, 787, 848, 859, 863, 864], "calib": [73, 75, 784], "roll": [73, 435, 899, 908], "yaw": [73, 899, 908], "compar": [73, 174, 186, 188, 202, 616, 625, 647, 752, 760, 851, 855, 870], "_align": 73, "observation_d": [73, 77, 81, 91, 92, 183, 195, 694, 786, 867, 885, 886, 887, 888, 902, 908], "versu": [73, 779, 780], "meaning": [73, 803], "param": [73, 74, 315, 337, 350, 669, 671, 779, 780, 781, 782, 784], "produc": [74, 174, 202, 455, 506, 514, 536, 553, 563, 575, 587, 624, 625, 627, 628, 633, 645, 653], "show_individual_focal_length": 75, "hold": [75, 181, 665, 816], "scatter": [75, 187, 643, 682, 690, 754, 779, 780, 864], "get_temperature_scal": 75, "addition": [75, 438, 494, 513, 536, 553, 563, 637, 647, 653, 665, 668, 693], "significantli": [75, 188, 604], "extra": [75, 174, 183, 186, 195, 321, 332, 398, 619, 626, 692, 695, 738, 757, 786, 842, 859, 908], "care": [75, 182, 186, 401, 455, 628, 637, 672, 692, 740, 744, 787], "mimic": [75, 131], "enumer": [76, 111, 140, 194, 201, 202, 218, 473, 610, 615, 623, 631, 675, 692, 784, 914], "quaternion": [76, 77, 93, 174, 189, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 724, 725, 728, 748, 751, 786, 808], "short": [76, 77, 85, 86, 89, 90, 93, 172, 189, 194, 195, 628, 693, 714, 786, 838], "exposur": [76, 77, 92, 93, 172, 174, 191, 194, 195, 693, 755, 784, 786, 808], "long": [76, 77, 83, 84, 85, 86, 92, 93, 115, 116, 117, 119, 122, 123, 126, 132, 139, 141, 151, 153, 167, 168, 177, 179, 180, 181, 182, 189, 194, 195, 214, 231, 400, 483, 511, 624, 625, 627, 630, 647, 651, 659, 668, 704, 714, 742, 745, 784, 786, 787, 830, 840, 861], "update_short_attitud": [76, 77, 195, 787], "closest": [76, 93, 174, 495, 497, 507, 628, 637, 692, 752], "propag": [76, 77, 93, 787, 813, 830, 835, 838, 839, 843, 859], "spheric": [76, 486, 628, 637, 639, 675, 678, 686, 692, 728, 816], "spacecraft_nam": [77, 786], "attitude_funct": [77, 92, 93, 784, 786, 787], "start_dat": [77, 81, 786], "end_dat": [77, 81, 786], "metadata_onli": [77, 78, 82], "default_image_class": [77, 82, 786], "relev": 77, "manipul": [77, 469, 708, 786, 788, 868], "physic": [77, 177, 179, 180, 181, 733, 734], "requisit": [77, 629], "task": [77, 172, 174, 184, 190, 230, 438, 752, 757], "image_list": 77, "random": [77, 174, 203, 204, 220, 222, 229, 658, 752, 755, 866, 870, 871], "randn": [77, 203, 204, 220, 222, 229, 658, 870], "cam": 77, "ind": [77, 88, 784], "array_equ": 77, "custom": [77, 82, 172, 176, 178, 183, 400, 604, 610, 619, 623, 626, 631, 637, 648, 676, 684, 692, 704, 843], "immedi": [77, 87, 93], "image_check": 77, "overrid": [77, 82, 114, 175, 183, 186, 195, 322, 333, 346, 364, 377, 395, 407, 409, 413, 434, 522, 608, 621, 642, 645, 654, 681, 689, 692, 786, 813, 815, 822, 823, 828, 899, 908], "__init__": [77, 185, 536, 553, 563, 692, 695, 786], "three": [77, 93, 189, 708, 714, 724, 728, 781], "Not": 77, "host": [77, 114, 195, 692, 694, 786, 902], "pointspreadfunct": [77, 186, 202, 214, 400, 401, 407, 409, 413, 417, 422, 424, 432, 616], "apply_1d": [77, 186, 314, 325, 400, 422, 616], "1d": [77, 168, 186, 221, 314, 316, 317, 325, 327, 328, 336, 338, 339, 341, 349, 351, 352, 357, 367, 369, 370, 372, 380, 382, 383, 388, 400, 401, 415, 422, 423, 428, 615, 617, 648, 660, 695, 814, 818, 825, 858], "scan": [77, 186, 209, 221, 314, 316, 317, 325, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 400, 401, 403, 422, 423, 428, 458, 459, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 610, 612, 615, 616, 617, 618, 625, 627, 631, 632, 634], "datetim": [77, 93, 124, 129, 136, 149, 158, 165, 166, 174, 195, 476, 483, 488, 491, 694, 714, 728, 731, 732, 733, 734, 735, 736, 757, 758, 759, 786, 808, 815, 822, 828, 830, 850, 854, 867, 873, 875, 876, 877, 878, 879, 880, 881, 885, 886, 887, 902, 908], "spice": [77, 483, 491, 741, 744, 784, 785, 786, 787, 788, 816, 823, 830, 843, 867, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 899, 902], "spice_interfac": [77, 786, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887], "helper": [77, 114, 116, 117, 134, 135, 151, 195, 466, 467, 511, 574, 601, 603, 676, 788], "create_callable_orient": [77, 867, 875], "et_callable_to_datetime_cal": [77, 867], "particular": [77, 121, 182, 467, 506, 695, 699, 746, 786, 787], "epoch": [77, 124, 129, 130, 136, 149, 158, 165, 166, 174, 182, 755, 757, 758, 759, 867, 873, 877, 878, 880, 881, 887], "python": [77, 151, 165, 166, 169, 174, 195, 202, 230, 231, 436, 460, 462, 463, 466, 467, 469, 483, 491, 495, 497, 499, 544, 551, 561, 572, 585, 597, 695, 714, 728, 738, 739, 740, 741, 742, 743, 744, 745, 752, 759, 784, 785, 786, 787, 801, 850, 867, 872, 875, 876, 879, 882, 883, 884, 885, 886, 887, 908], "apply_date_rang": 77, "stop": [77, 151, 631, 648, 752, 830], "core": [77, 94, 174, 195, 755, 786], "might": [77, 174, 186, 195, 345, 361, 363, 376, 392, 394, 408, 412, 652, 762, 786, 809], "page": [77, 172, 173, 183, 195, 230, 785], "add_imag": [77, 82, 91, 174, 784], "remove_imag": [77, 91], "stai": [77, 114, 652, 665], "sync": [77, 78, 88, 91, 174, 289, 757], "mask": [77, 208, 212, 223, 646, 648, 653, 658], "_on": 77, "_off": 77, "strongli": [77, 115, 128, 231, 483, 518, 648, 786], "protect": 77, "setter": 77, "anyth": [77, 195, 435, 478, 483, 514, 546, 646, 648, 786, 795, 870, 889, 892, 895, 899, 902, 904], "coerc": 77, "__call__": [77, 186, 400, 424, 847], "surfac": [77, 186, 187, 188, 202, 204, 220, 222, 225, 226, 227, 228, 229, 230, 321, 323, 332, 334, 344, 345, 347, 356, 361, 363, 365, 375, 376, 378, 387, 392, 394, 396, 405, 408, 412, 419, 430, 436, 437, 443, 447, 448, 449, 450, 453, 455, 456, 457, 458, 459, 463, 468, 469, 475, 480, 486, 495, 497, 500, 501, 503, 505, 507, 509, 518, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 596, 597, 598, 599, 600, 601, 604, 606, 610, 612, 616, 617, 623, 624, 627, 629, 631, 633, 634, 639, 645, 646, 647, 648, 651, 652, 653, 656, 657, 658, 659, 665, 678, 686, 692, 693, 694, 742, 743, 745, 787, 788, 868], "techniqu": [77, 93, 172, 184, 188, 191, 192, 201, 202, 205, 207, 224, 513, 604, 610, 612, 615, 616, 619, 620, 623, 626, 629, 631, 634, 637, 639, 641, 643, 648, 676, 678, 679, 680, 682, 684, 686, 688, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 745, 752, 787, 788, 807], "new_templ": 77, "two": [77, 94, 112, 174, 181, 191, 210, 211, 214, 479, 542, 559, 570, 583, 595, 708, 714, 715, 717, 719, 724, 725, 728, 740, 748, 753, 784, 786, 787, 867, 912], "update_attitude_from_funct": 77, "outdat": 77, "header": [77, 231], "wrapper": [77, 475, 647, 787, 803, 842, 854, 867, 882, 883, 884, 885], "ck": [77, 784, 785], "j2000": [77, 786, 808, 814, 818, 825, 867, 877, 878, 880, 881, 902], "mynavcam": 77, "furnish": [77, 744, 787], "metakernel": [77, 867], "describ": [77, 93, 165, 174, 181, 189, 213, 224, 231, 438, 443, 450, 455, 457, 459, 465, 468, 475, 517, 538, 541, 547, 549, 555, 558, 565, 569, 575, 577, 581, 587, 589, 593, 604, 645, 648, 692, 694, 695, 704, 708, 742, 752, 760, 781, 786, 787, 830, 843, 854, 864], "relat": [77, 174, 177, 179, 180, 181, 189, 483, 486, 487, 659, 672, 755, 787], "theori": 77, "assign": [77, 186, 426, 575, 587, 603, 704, 830], "remain": [78, 88, 91, 455, 752, 883, 884, 895, 904], "ad": [78, 94, 113, 186, 187, 231, 341, 357, 372, 388, 407, 409, 413, 415, 417, 422, 424, 432, 483, 485, 490, 498, 506, 507, 546, 641, 680, 688, 693, 785, 816, 823, 860], "similarli": [78, 692, 786, 787, 788], "raw": [78, 116, 117, 122, 123, 132, 137, 138, 141, 143, 144, 146, 150, 183, 604, 648, 782, 786], "attach": [78, 501], "broken": [78, 94], "regardless": [78, 92, 647, 659, 668, 715, 718, 719, 724, 725, 726], "taken": [81, 97, 98, 174, 183, 188, 195, 507, 694, 755, 787, 847, 874], "only_long_on": [81, 84, 89, 753, 787], "exposure_typ": [83, 84, 85, 86, 89, 90, 195, 786], "only_short_on": [83, 90, 693, 787], "dual": [84, 85, 86, 90, 194, 195], "long_on": 85, "short_on": 86, "global": [87, 201, 202, 207, 439, 442, 445, 446, 447, 517, 647, 648, 651, 658, 659, 665, 745, 904], "flip": [87, 453, 863], "transpos": 87, "put": [87, 195, 435, 455, 479, 483, 603, 626, 645, 651, 692, 786, 789], "dark": [87, 195, 207, 211, 786, 803, 808], "respons": [87, 182, 186, 314, 325, 477, 660], "slice": [88, 207, 469], "del": 88, "decreas": [88, 186, 191, 202, 314, 325, 336, 349, 367, 380, 455, 624, 637, 645, 647, 752, 787, 789], "truli": [91, 177, 179, 180, 181], "ot": 92, "attitudeupdatemethod": 93, "max_delta": 93, "timedelta": [93, 169, 786, 830], "select": [93, 174, 184, 186, 212, 223, 224, 401, 676, 757, 830, 917, 918], "sf": 93, "otim": [93, 712, 715, 716], "lf": 93, "ss": 93, "preced": [93, 648, 672], "sandwich": 93, "slerp": [93, 714], "prototyp": [94, 186, 426, 619], "compute_pixel_jacobian": [94, 178], "compute_unit_vector_jacobian": [94, 178], "distort_pixel": [94, 178], "undistort_imag": [94, 111, 178], "to_elem": [94, 113, 178], "from_elem": [94, 178], "sub": [94, 108, 113, 141, 174, 176, 177, 179, 180, 181, 188, 191, 198, 199, 209, 215, 216, 217, 435, 451, 455, 472, 604, 605, 607, 630, 648, 650, 656, 684, 687, 741, 787, 808], "__eq__": [94, 536, 553, 563], "equal": [94, 151, 214, 223, 323, 334, 347, 365, 378, 396, 453, 604, 648, 651, 656, 695, 708, 851, 855, 870], "attr": [94, 186, 325, 694, 702, 808], "reconstruct": [94, 178, 289], "unit_vectors_in_camera_fram": 96, "human": [103, 178, 604, 610, 631, 637, 648, 684, 752, 848], "know": [103, 119, 130, 151, 186, 195, 215, 216, 426, 439, 453, 619, 665, 694, 708, 784, 787, 889, 902], "kwarg": [108, 186, 314, 325, 336, 349, 367, 401, 409, 417, 432, 619, 695, 789, 795, 798], "lxml": [108, 231], "subel": 108, "fill": [111, 135, 138, 195, 197, 604, 610, 619, 631, 637, 648, 684, 695, 699, 786, 835, 847], "larger": [111, 187, 191, 398, 645, 714, 752, 851, 855], "smaller": [111, 181, 191, 436, 648, 692, 752, 787, 851, 855], "group": [112, 113, 114, 125, 126, 174, 206, 436, 630, 784, 867], "lookuperror": 112, "secur": [112, 113, 739], "risk": [112, 113, 139, 152, 153, 738, 739, 741], "exacerb": [112, 113], "eval": [112, 113], "tree": [112, 113, 178, 436, 450, 453, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 469, 739, 830], "untrust": [112, 113, 174, 460, 462, 665, 738, 739, 740, 741, 742, 743, 744, 745, 752, 755], "unverifi": [112, 113], "easili": [112, 113, 172, 184, 191, 230, 398, 626, 652, 659, 665], "verifi": [112, 113, 139, 152, 153, 174, 449, 665, 739, 752, 755], "malici": [112, 113], "editor": [112, 113, 784, 786, 787], "beforehand": [112, 113], "plain": 113, "node": [113, 436, 450, 451, 452, 453, 454, 455, 456, 465, 466, 467, 469], "root": [113, 400, 455, 456, 511, 784, 785], "abl": [113, 168, 185, 191, 230, 629, 692, 752, 805, 843, 889], "recreat": 113, "thu": [113, 186, 187, 192, 220, 222, 229, 314, 321, 325, 332, 336, 344, 349, 361, 367, 375, 380, 392, 430, 475, 493, 574, 648, 658, 784, 787, 843, 867], "usabl": [113, 116, 117, 122, 123, 137, 150], "mostli": [113, 191, 500, 553, 563, 600, 627, 645, 752, 830], "organ": [113, 172], "lookup": 113, "becom": [113, 114, 174, 208, 436, 624, 628, 645, 651, 752, 760, 787, 830], "distinguish": [113, 546, 645, 787], "though": [113, 114, 128, 131, 188, 191, 192, 195, 204, 231, 455, 483, 500, 512, 514, 517, 519, 522, 553, 563, 575, 587, 604, 616, 619, 624, 645, 646, 648, 659, 668, 740, 745, 751, 786, 787, 815, 822, 828], "accordingli": 113, "e": [113, 174, 186, 231, 314, 320, 321, 325, 331, 332, 343, 344, 349, 359, 361, 374, 375, 380, 390, 392, 441, 442, 446, 447, 448, 602, 692, 737, 739, 748, 785], "navig": [113, 172, 176, 178, 194, 195, 514, 519, 629, 630, 631, 645, 646, 647, 648, 651, 665, 671, 693, 695, 743, 745, 762, 786, 864, 868, 902], "blend": [114, 116, 117, 122, 123, 125, 126, 145, 737], "ucac4": [114, 117, 119, 122, 123, 126, 153, 164, 182, 737, 785], "tycho2": [114, 116, 119, 126, 139, 144, 145, 165], "strip": 114, "sqlite3": [114, 119, 125, 126, 145], "databas": [114, 117, 119, 120, 121, 125, 126, 145, 174, 746, 747, 749], "fast": [114, 117, 201, 467, 610, 631, 652, 665, 714, 835, 845], "appear": [114, 116, 117, 177, 179, 180, 181, 486, 676, 787, 803, 807], "16th": [114, 895], "suffici": [114, 177, 179, 180, 181, 182, 186, 188, 201, 202, 436, 439, 518, 624, 665, 695, 843, 847], "rnm": [114, 121], "neg": [114, 125, 170, 502, 507, 511, 658, 887], "zone": [114, 136, 142, 144, 146, 147, 148, 149, 150], "rnz": [114, 136, 144, 146, 149, 150], "doubl": [114, 131, 195, 443, 468, 494, 495, 497, 499, 518, 519, 563, 587, 694], "averag": [114, 164, 202, 486, 645, 647, 665, 745], "yr": [114, 713], "si": [114, 162, 163, 165, 166, 169, 784], "apasm_v": [114, 126, 145], "magm": [114, 145], "kilomet": [114, 159, 164, 474, 491, 492, 493, 610, 619, 626, 631, 645, 648, 656, 665, 692, 694, 786, 878, 881, 899, 908], "mirror": 114, "giant_column": [114, 115, 116, 117, 119, 120, 121, 124, 129, 131, 132, 136, 141, 149, 182], "guarante": [114, 450, 451, 459, 468, 541, 549, 558, 569, 574, 581, 593, 601, 616, 801, 852, 856], "built": [114, 117, 119, 126, 172, 202, 400, 455, 494, 522, 647, 693, 704, 785, 830], "gaia": 114, "dr2": 114, "sqlite": 114, "version": [114, 186, 201, 202, 207, 336, 349, 367, 380, 400, 426, 430, 463, 495, 497, 544, 551, 561, 572, 585, 597, 610, 631, 637, 684, 704, 739, 785, 786, 789, 885], "query_catalogu": [114, 115, 116, 117, 119, 120, 121, 128, 132, 137, 141, 150, 174, 182, 756, 758], "tycho": [114, 117, 122, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 182], "get_ucac4_record": [114, 119], "get_tycho2_record": [114, 119], "download": [114, 116, 117, 122, 123, 126, 132, 139, 141, 153, 182, 231, 739, 785, 787, 823], "aren": [114, 119, 141, 619, 624, 648, 651, 692], "build": [114, 119, 126, 142, 176, 178, 187, 202, 436, 453, 455, 465, 494, 626, 628, 629, 631, 647, 659, 692, 704, 737, 739, 745, 784, 785, 786, 787, 803, 847, 862], "build_catalogu": [114, 119, 125, 127, 145, 182, 785], "find_star_pair": [114, 125], "blend_star": 114, "won": [114, 438, 439, 440, 453, 505, 517, 519, 629, 645, 659, 746, 785, 787, 845], "script": [114, 125, 127, 145, 172, 174, 177, 179, 180, 181, 182, 187, 191, 230, 231, 436, 439, 455, 518, 629, 647, 659, 665, 692, 693, 729, 730, 737, 738, 739, 740, 741, 742, 743, 744, 745, 752, 785, 786], "command": [114, 126, 190, 231, 785], "who": [114, 174, 755], "giant_typ": 115, "include_proper_mot": [115, 119, 128, 132, 141], "translat": [115, 124, 129, 136, 149, 181, 435, 436, 437, 452, 455, 457, 463, 469, 483, 485, 494, 499, 500, 518, 519, 536, 553, 563, 604, 617, 647, 648, 652, 659, 662, 729, 784, 787], "technic": [115, 195, 519, 553, 563, 695], "bright": [116, 174, 182, 191, 192, 202, 610, 624, 628, 630, 637, 639, 640, 641, 643, 675, 676, 678, 680, 682, 684, 686, 687, 688, 690, 752, 787, 803, 806], "photometri": [116, 752], "million": [116, 117, 436, 830], "sky": 116, "sole": [116, 480, 641, 680, 688], "hipparco": [116, 165], "satellit": 116, "coverag": [116, 467, 647], "11": [116, 158, 166, 233, 483, 488, 491, 513, 724, 784], "csv": [116, 132, 803, 810, 833, 842, 844, 859, 861], "giant_catalogu": [116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 174, 191, 784, 787], "www": [116, 200, 211, 212, 215, 216, 219, 224, 495, 497, 643, 682, 690], "cosmo": 116, "esa": 116, "web": [116, 868], "mb": [116, 139], "disk": [116, 117, 178, 647, 665, 667, 848, 864], "ask": [116, 117, 119, 132, 141, 787, 823], "ye": [116, 117, 119, 132, 141], "awar": [116, 117, 151, 174, 182, 183, 186, 341, 357, 372, 388, 415, 756], "query_catalogue_raw": [116, 117, 132, 141], "entri": [116, 117, 695, 902], "113": 117, "105": 117, "16": [117, 786, 889], "slow": [117, 145, 177, 179, 180, 181, 187, 456, 781, 782], "area": [117, 202, 211, 213, 214, 218, 440, 472, 600, 624, 628, 630, 637, 645, 647, 692, 742, 808, 816], "binari": [117, 151, 208, 212, 224], "gb": [117, 153, 647, 785], "cross_ref_tycho": [117, 141], "submodul": [118, 174, 191, 192, 788], "focus": [118, 174, 188, 191, 192], "ie": [118, 151, 186, 211, 223, 224, 322, 333, 346, 364, 377, 395, 434, 652, 739], "bear": [118, 165, 170, 188, 604, 610, 619, 623, 624, 625, 626, 627, 629, 631, 637, 648, 659, 684, 692, 693, 694, 804, 808, 854], "db_file": 119, "posixpath": [119, 132, 141], "aliouni": [119, 132, 141, 166, 483, 488, 491], "repo": [119, 132, 141], "giant_cat": 119, "db": 119, "min_ra": [120, 124, 129, 136, 137, 149, 150], "max_ra": [120, 124, 129, 136, 137, 149, 150], "360": [120, 124, 129, 136, 137, 149, 150], "min_dec": [120, 124, 129, 136, 137, 149, 150], "90": [120, 124, 129, 136, 137, 149, 150, 665], "max_dec": [120, 124, 129, 136, 137, 149, 150], "min_mag": [120, 124, 129, 136, 149], "max_mag": [120, 124, 129, 136, 149], "search_cent": [120, 124, 129, 136, 137, 149, 150], "search_radiu": [120, 124, 129, 136, 137, 149, 150], "lower": [120, 124, 129, 136, 137, 149, 150, 172, 181, 191, 487, 659, 693, 752], "dimmer": [120, 124, 129, 136, 137, 149, 150, 174, 182, 191, 201, 737, 752, 864], "cone": [120, 124, 129, 136, 137, 149, 150], "radiu": [120, 124, 129, 136, 137, 149, 150, 486, 628, 637, 684, 745], "ucac_directori": [122, 123], "tycho_directori": 122, "too": [122, 186, 191, 192, 228, 321, 332, 455, 475, 604, 624, 628, 629, 637, 651, 657, 752], "dim": [122, 174, 191, 202, 755, 842], "new_epoch": [124, 129, 136, 149], "meet": [124, 129, 136, 137, 145, 149, 150, 436, 737], "apply_proper_mot": [124, 129, 136, 149], "vari": [124, 129, 182, 190, 191, 455, 647, 745], "database_connect": [125, 145], "limiting_mag": [125, 145], "ref_mag": 125, "memo": [125, 177, 179, 180], "sean": 125, "semper": 125, "se": 125, "database_fil": 126, "limiting_magnitud": [126, 737], "number_of_star": [126, 737], "use_tycho_mag": [126, 145], "limiting_separ": [126, 737], "04": [126, 737, 801], "blending_magnitud": [126, 737], "ucac_dir": 126, "ucac": [126, 128, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 737], "possibli": [126, 174, 186, 188, 400, 413, 469, 629, 645, 693, 781, 864], "period": [126, 195, 832], "interrupt": 126, "corrupt": [126, 152], "vt": 126, "vtmag": 126, "longer": [126, 175, 191, 546, 574, 601, 616, 784], "compil": [126, 231, 785], "ifov": [126, 807], "star_record": [127, 165], "max_separ": 127, "max": [127, 319, 330, 342, 358, 373, 389, 465, 472, 486, 487, 498, 499, 604, 684, 692, 870], "kdtree": [127, 187, 437, 450, 451, 452, 453, 454, 465, 466, 467, 468, 469, 483, 494, 500, 517, 518, 575, 587, 647, 659, 665, 693, 738, 739, 742, 743, 745, 787, 830], "brighter": [127, 145, 628, 752], "meta_catalogu": [128, 129, 182], "duck": [128, 186, 400, 426], "encourag": [128, 188, 483, 647, 648, 659, 745, 746, 784, 830, 863], "signatur": 128, "mjd": [130, 166, 174, 758, 759], "float64": [131, 224, 435, 692, 829], "precis": [131, 220, 398, 450, 499, 518, 553, 563, 575, 587], "releas": 131, "structur": [131, 187, 436, 437, 443, 455, 457, 463, 468, 478, 481, 494, 503, 509, 517, 518, 538, 544, 546, 547, 551, 555, 561, 565, 572, 577, 585, 589, 597, 619, 647, 649, 664, 670, 671, 673, 694, 785], "dtype": [131, 223, 224, 435, 443, 457, 468, 477, 478, 480, 481, 538, 547, 555, 565, 577, 589, 648, 658, 660, 692, 694, 695, 829, 874], "zip": [131, 785], "giant_nam": 131, "dat": [132, 889, 890, 891, 899, 908], "suppl_1": 132, "tyc2": [132, 137], "tycho_rec": 133, "yield": [136, 146, 149, 150, 609, 614, 622, 636, 644, 655, 683, 691], "df": [136, 146, 149, 150], "itertupl": [136, 146, 149, 150], "min_visual_mag": [137, 150], "max_visual_mag": [137, 150], "onlin": [137, 150], "tyc1": 137, "tyc3": 137, "tyc": 137, "tycho_id": 138, "supplement": 138, "target_directori": [139, 153], "vizier": [139, 152, 153], "ftp": [139, 153, 785], "internet": [139, 153], "cdsarc": [139, 153], "strasbg": [139, 153], "fr": [139, 153], "integr": [139, 152, 153, 398, 400, 746, 808, 815, 816, 822, 823, 828, 839, 843], "hash": [139, 174, 752, 803, 833], "servic": [139, 152, 153], "trust": [139, 152, 153, 659, 784, 786], "ascend": [140, 151], "descend": [140, 151, 455], "intend": [140, 186, 320, 331, 343, 359, 374, 390, 411, 429, 651, 704, 786, 816, 835], "binary_search": 140, "smallest": [140, 507, 637], "u4b": 141, "u4i": 141, "block": [142, 147, 148, 151, 176, 603, 786, 915], "seek": [142, 151, 651], "ucac_record": 143, "renam": 143, "ucac_label": 144, "tycho_cat": 144, "return_loc": 145, "return_mag": 145, "condit": [145, 174, 624, 648, 693, 695, 752, 787, 843, 845], "ra_ind": 147, "tell": [148, 182, 187, 188, 436, 692, 784, 786, 787], "44": 150, "column_convers": 151, "columnord": 151, "line_length": 151, "midpoint": 151, "confus": [151, 188, 648], "white": 151, "numer": [151, 233, 398, 447, 449, 784, 830, 843, 892, 895, 908], "byte": [151, 889, 895], "binaryio": 151, "mode": [151, 912, 915], "support": [151, 186, 417, 437, 469, 902, 915], "builtin": 151, "ai": 151, "greater": [151, 191, 223, 450, 604, 637, 658, 659, 668, 697, 752, 784, 870], "sep": 151, "enum": [151, 483, 619, 637, 676, 684, 914], "unus": 151, "skip": [151, 231, 752, 784, 785], "part": [151, 167, 174, 186, 191, 422, 447, 626, 648, 656, 658, 659, 676, 692, 695, 760, 820, 826, 835, 845, 867], "md5": [152, 153], "md5sum": 152, "insecur": [152, 153], "3600000": [154, 156, 157, 159, 161], "milli": [154, 156, 157, 161], "arc": [154, 156, 157, 161, 174, 213, 728, 756, 840], "angle_ma": [154, 156, 157, 161], "angle_deg": [154, 155, 156, 160], "017453292519943295": 155, "angle_rad": [155, 157, 160, 161], "pi": [155, 157, 159, 160, 161, 170, 323, 334, 347, 365, 378, 396, 479, 501, 616, 625, 627, 692, 708, 812], "180": [155, 157, 159, 160, 161, 479, 812], "7777777777777776e": 156, "8481368110953594e": 157, "09": [157, 739], "1858": [158, 166], "17": [158, 166, 171, 708], "julian": [158, 165], "novemb": [158, 166], "30856775814913": 159, "67": 159, "parsec": 159, "distance_km": 159, "distance_parsec": 159, "57": 160, "29577951308232": 160, "206264806": 161, "24709636": 161, "365": 162, "dai": [162, 163, 787], "86400": 163, "5428047027000000": 164, "new_tim": [165, 815, 822, 828], "formul": 165, "section": [165, 172, 186, 191, 192, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 423, 428, 692, 784, 816, 902], "increas": [165, 186, 188, 191, 314, 325, 336, 349, 367, 380, 668, 752, 789, 808, 889], "januari": [165, 887], "mjy": 165, "mjd_epoch": 166, "timedelta_to_si_year": 166, "fraction": [166, 169, 714, 728], "mambaforg": [166, 231, 483, 488, 491], "env": [166, 483, 488, 491], "lib": [166, 483, 488, 491], "python3": [166, 483, 488, 491], "ra1": 167, "dec1": 167, "ra2": 167, "dec2": 167, "great": [167, 436, 513, 647, 728, 845], "circl": [167, 692, 728], "angular": [167, 473, 616, 714], "co": [167, 168, 186, 189, 325, 442, 447, 448, 692, 715, 719, 720, 721, 722, 725, 726, 728], "delta_1": 167, "delta_2": 167, "alpha_1": 167, "alpha_2": 167, "sin": [167, 168, 170, 174, 186, 189, 325, 715, 719, 720, 721, 722, 725, 726, 728, 756], "broadcast": [167, 168, 437, 469, 511], "mixtur": 167, "common": [167, 172, 177, 178, 179, 180, 181, 186, 188, 189, 400, 413, 422, 424, 432, 436, 517, 518, 645, 692, 697, 704], "wouldn": 168, "complain": [168, 400], "total_second": 169, "cover": [169, 192, 195, 450, 647, 659, 786], "xy": [170, 180, 186, 209, 263, 267, 320, 331, 343, 359, 374, 390, 411, 429, 494, 499, 902], "z": [170, 174, 186, 189, 228, 320, 321, 322, 331, 332, 333, 341, 343, 344, 345, 346, 357, 359, 361, 362, 363, 364, 372, 374, 375, 376, 377, 388, 390, 392, 393, 394, 395, 405, 407, 408, 409, 412, 415, 421, 430, 431, 434, 435, 486, 487, 494, 499, 602, 626, 648, 657, 692, 694, 713, 722, 723, 756, 759, 808, 812, 833], "tan": 170, "invalid": [170, 228, 496, 657], "2021": 171, "govern": [171, 835], "administr": 171, "nation": 171, "aeronaut": 171, "No": [171, 692], "claim": 171, "titl": 171, "reserv": [171, 450, 503, 517], "high": [172, 185, 191, 195, 227, 228, 518, 604, 624, 645, 647, 648, 656, 657, 662, 665, 737, 742, 745, 788, 816], "tutori": [172, 174, 191, 230, 784, 786], "introduc": [172, 186, 191, 344, 345, 361, 363, 375, 376, 392, 394, 408, 412, 637, 645], "bar": [172, 625], "top": [172, 181, 192, 455, 786, 788, 864], "move": [172, 174, 192, 228, 435, 483, 500, 610, 627, 639, 657, 659, 676, 678, 684, 686, 757, 759, 784, 786, 787, 843, 859], "dawn": [172, 784, 785, 787], "our": [172, 177, 179, 180, 181, 187, 398, 455, 483, 617, 628, 645, 647, 652, 692, 753, 785, 787], "instal": [172, 230, 738, 787, 867, 882, 883, 884, 885], "dawn_giant": [172, 784, 785, 787], "acquir": 172, "kernel": [172, 186, 200, 202, 215, 216, 219, 314, 317, 319, 322, 325, 326, 328, 330, 333, 336, 339, 342, 346, 349, 352, 358, 364, 367, 368, 370, 373, 377, 380, 381, 383, 389, 395, 400, 406, 422, 423, 424, 425, 431, 432, 433, 434, 741, 744, 785, 787, 823, 830, 885, 902], "fc2": [172, 785, 786, 787], "scene": [172, 174, 187, 191, 192, 195, 435, 437, 439, 450, 460, 469, 473, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 500, 514, 519, 522, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 619, 620, 621, 622, 624, 626, 628, 629, 631, 633, 634, 636, 637, 639, 640, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 672, 674, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 697, 698, 699, 700, 701, 702, 703, 706, 741, 762, 788, 803, 830, 858, 859], "relnav": [172, 188, 604, 610, 619, 623, 626, 628, 630, 631, 637, 648, 676, 684, 693, 694, 695, 697, 699, 703, 704, 739], "conclus": 172, "particularli": [174, 177, 179, 180, 181, 188, 202, 398, 436, 604, 624, 647, 648], "lead": [174, 191, 604, 616, 645, 651, 672, 784], "clutter": [174, 191], "luckili": [174, 191, 752], "nitti": [174, 191, 192], "gritti": [174, 191, 192], "substep": [174, 191, 192], "happen": [174, 462, 612, 619, 626, 634, 640, 664, 665, 692, 698, 699, 700, 701, 702, 706, 842, 861], "scienc": [174, 191, 211, 212], "art": [174, 191], "inde": [174, 188], "urg": 174, "proceed": [174, 692], "familiar": [174, 230, 787, 868], "fairli": [174, 191, 192, 231, 625, 627, 665, 752, 782, 784, 787, 830, 835, 865], "straight": [174, 192, 230, 231, 835], "forward": [174, 192, 231, 830, 835], "strai": [174, 628], "light": [174, 181, 186, 187, 195, 211, 401, 426, 438, 443, 473, 474, 475, 476, 479, 482, 483, 491, 514, 604, 610, 616, 619, 628, 631, 637, 645, 648, 672, 674, 676, 684, 741, 787, 803, 816, 835, 867, 876, 877, 878, 879, 880, 881, 883, 884], "difficult": [174, 188, 191, 659, 744, 752], "pattern": [174, 472, 752, 784, 786, 787], "all_on": [174, 784], "all_off": [174, 784], "had": [174, 443, 653, 704], "poor": [174, 610, 624, 631, 645], "mayb": 174, "dataset": [174, 182], "help": [174, 186, 188, 191, 192, 231, 400, 426, 456, 518, 610, 624, 628, 631, 645, 647, 648, 652, 692, 752, 782, 788], "lot": [174, 186, 231, 314, 325, 336, 349, 367, 380, 401, 426, 436, 453, 456, 645, 692, 695, 742, 782, 784, 787, 830, 854, 862, 863], "subset": [174, 672, 674, 692, 743, 786, 844], "generate_sample_data": [174, 191, 693, 729, 730, 753], "pathlib": [174, 191, 785], "cwd": [174, 191, 785], "pfile": [174, 191], "giantcatalogu": [174, 191, 755, 784, 787], "centroid_s": [174, 191, 202, 214], "poi_threshold": [174, 191, 202, 206, 784, 787], "star_identification_kwarg": [174, 191, 784], "max_combo": [174, 191, 752, 755, 784, 787], "show_id_result": [174, 191, 752, 754, 784, 787], "reject": [174, 202, 648, 652, 755, 762, 784, 865], "interior": [174, 479, 658, 762], "reset_calibration_estim": 174, "update_calibration_estim": 174, "reset_static_alignment_estim": 174, "update_static_alignment_estim": 174, "reset_temperature_dependent_alignment_estim": 174, "update_temperature_dependent_alignment_estim": 174, "reset_set": 174, "update_set": 174, "limit_magnitud": 174, "target_frame_direct": [174, 746, 747, 748, 750], "base_frame_direct": [174, 746, 747, 748, 750], "textbf": [174, 748], "post_fit_covari": [174, 746, 748], "freedom": [174, 436, 748], "math": [174, 723, 748, 784], "behind": [174, 191, 192, 435, 748, 859], "w_i": [174, 746, 748, 751], "goe": [174, 192, 435, 639, 664, 678, 686, 748, 899], "compute_residu": 174, "r_i": [174, 749], "hasn": [174, 665, 749], "4x4": [174, 746, 748], "a_priori_rotation_cat2camera": [174, 755, 756, 758], "ransac_toler": [174, 191, 752, 755, 784, 787], "second_closest_check": [174, 191, 752, 755, 757, 784], "camera_veloc": [174, 755, 758], "camera_posit": [174, 755, 758], "unique_check": [174, 191, 752, 755, 757, 784], "use_mp": [174, 755], "lost_in_space_catalogue_fil": [174, 755], "critic": [174, 645, 755], "brief": [174, 212, 755, 868], "curiou": [174, 755], "whole": [174, 213, 624, 647, 755, 784, 844], "lost": [174, 620, 633, 640, 652, 679, 687, 752, 755, 757], "execut": [174, 460, 462, 665, 738, 739, 740, 741, 742, 743, 744, 745, 752, 755], "arbitrari": [174, 187, 436, 460, 462, 517, 665, 738, 739, 740, 741, 742, 743, 744, 745, 752, 755], "safe": [174, 186, 355, 386, 410, 414, 604, 665, 752, 755, 916], "tamper": [174, 665, 752, 755], "inlier": [174, 631, 652, 752, 755, 760, 761, 870], "multi": [174, 457, 538, 547, 555, 565, 577, 589, 628, 755, 862], "librari": [174, 231, 755, 784, 786, 787, 867], "acceler": [174, 187, 436, 455, 494, 512, 517, 518, 546, 574, 575, 587, 755, 819], "vice": [174, 658, 729, 755, 788], "versa": [174, 658, 729, 755, 788], "reject_satur": [174, 191, 202, 206, 755], "special": [174, 178, 462, 604, 619, 645, 648, 659, 676, 692, 755, 784, 786, 908], "exhaust": [174, 755, 871], "cpu": [174, 512, 755], "parallel": [174, 463, 544, 551, 561, 567, 572, 579, 585, 591, 597, 646, 755], "overhead": [174, 755, 830], "associ": [174, 755, 830], "swamp": [174, 755], "benefit": [174, 231, 400, 494, 692, 695, 704, 755, 859], "project_star": [174, 755, 759], "matched_catalogue_unit_vector": [174, 755], "lis_catalogu": 174, "ckdtree": [174, 862], "2000": [174, 757, 758, 759, 873], "compute_point": 174, "atan2": [174, 756], "yi": [174, 756], "xi": [174, 756], "asin": [174, 756], "zi": [174, 756], "quadrant": [174, 756], "tangent": [174, 756], "ji": [174, 756], "compute_weight": [174, 757, 758], "image_numb": [174, 472, 757, 758, 760, 778], "solve_li": 174, "_generate_hash": 174, "precomput": [174, 177, 179, 180, 181, 213], "build_lost_in_space_catalogu": 174, "far": [174, 228, 453, 495, 497, 627, 641, 657, 665, 680, 688, 752], "kept": [174, 475, 908], "continu": [174, 181, 456, 574, 601, 692, 693, 753, 786], "quarter": 174, "finish": [174, 784, 787], "met": [174, 486, 487, 574, 601, 624, 672, 692, 757, 760, 784], "criterion": [174, 757], "lost_in_spac": [174, 757], "nearest": [174, 192, 507, 628, 637, 640, 752, 757, 808], "neighbor": [174, 206, 640, 752, 757], "refin": [174, 177, 179, 180, 181, 186, 188, 191, 202, 209, 211, 212, 213, 214, 218, 344, 345, 361, 363, 375, 376, 392, 394, 408, 412, 624, 625, 627, 645, 651, 745, 752, 757, 787], "explicitli": [174, 739, 757], "image_loc": [174, 760], "catalogue_dir": [174, 760], "randomli": [174, 207, 752, 760], "count": [174, 435, 465, 752, 760], "equival": [174, 186, 325, 455, 599, 718, 752, 760, 830, 882, 883, 884, 886], "ransac_iter_test": 174, "iter_num": [174, 761], "lmaestim": 174, "piec": [175, 181, 626, 692], "By": [175, 202, 215, 216, 228, 436, 648, 657, 695, 752, 815, 822, 823, 828], "unifi": 175, "capabl": [175, 186, 187, 190, 314, 320, 325, 331, 343, 359, 374, 390, 411, 429, 624, 625, 626, 627, 645, 647, 664, 665, 676, 692, 695, 708, 785, 848, 854], "manag": [175, 192, 231, 450, 647, 659, 665, 672, 830, 842, 859, 869, 912, 915], "easier": [175, 176, 186, 188, 191, 202, 207, 231, 483, 708, 739, 786, 803], "reorient": 175, "bad": [175, 186, 324, 335, 348, 366, 379, 397, 627, 845], "subtract": [175, 186, 201, 207, 362, 393, 421, 483, 485], "flat": [175, 469, 483, 786], "extens": [176, 177, 179, 180, 181, 186, 195, 522, 739, 744, 786, 788, 895], "commonli": [176, 435, 438, 483, 518, 536, 553, 563, 575, 587, 692], "pinhole_model": [176, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 908], "owen_model": [176, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "opencv_model": [176, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "instruct": [176, 184, 231], "adequ": [176, 186, 341, 357, 372, 388, 415, 835], "almost": [176, 191, 618, 660, 786, 801, 867], "brownmodel": [176, 177, 178, 233, 245, 729, 784], "owenmodel": [176, 178, 180], "rai": [177, 179, 180, 181, 187, 233, 435, 436, 438, 439, 440, 443, 450, 452, 454, 455, 457, 459, 461, 463, 464, 466, 467, 472, 475, 477, 478, 480, 481, 483, 494, 495, 496, 497, 500, 503, 505, 507, 509, 512, 518, 519, 523, 527, 530, 534, 538, 541, 544, 547, 549, 551, 555, 558, 561, 565, 569, 572, 574, 575, 577, 581, 585, 587, 589, 593, 597, 601, 603, 604, 605, 606, 607, 616, 617, 624, 632, 645, 648, 650, 651, 653, 656, 658, 659, 660, 661, 662, 663, 669, 787, 896, 905], "eman": [177, 179, 180, 233], "checkout": [177, 179, 180], "unfortun": [177, 179, 180, 181, 231, 467, 692, 739, 752, 786], "bilinear": [177, 179, 180, 181], "signific": [177, 179, 180, 181, 182, 195, 645, 665], "test": [177, 179, 180, 181, 211, 436, 441, 672, 674, 786], "serial": [177, 179, 180, 181, 787, 915], "dill": [177, 179, 180, 181, 231, 740, 744], "smart": [177, 179, 180, 181], "stand": [177, 179, 180, 181, 782, 864], "synthet": [177, 179, 180, 181, 187], "quick": [177, 179, 180, 181, 230, 483], "repeatedli": [177, 179, 180, 181], "duti": [177, 179, 180, 181], "unchang": [177, 179, 180, 181], "dimens": [177, 179, 180, 181, 617, 715, 719, 724, 725], "sai": [177, 179, 180, 181, 185, 483, 648, 713, 858], "mm": [177, 179, 180, 181, 784, 908], "um": [177, 179, 180, 181], "1024x1024": [177, 179, 180, 181], "did": [177, 179, 180, 181, 231, 507, 649, 673, 693, 786, 787, 840], "prescrib": [177, 179, 180, 181, 784], "048754127234737": [177, 179], "511": [177, 179, 180, 181, 435], "11110425": [177, 179], "00251948": [177, 179], "09015368": [177, 179], "9875787": [177, 179], "99592468": [177, 179], "design": [178, 186, 191, 192, 214, 407, 409, 626, 786, 788], "guid": [178, 626], "compat": [178, 908], "machin": [178, 182, 738, 785], "opencvmodel": [178, 179], "footnot": 178, "partialmathbf": 178, "overridden": [178, 186, 195, 413, 619], "devic": 178, "k_4r": [179, 235, 237, 238], "k_5r": [179, 235, 237, 238], "k_6r": [179, 235, 237, 238], "s1r": [179, 235], "s2r": [179, 235], "s3r": [179, 235], "s4r": [179, 235], "s_": [179, 235], "thin": [179, 233, 235], "experess": [179, 899], "owen": [180, 263, 265], "jpl": [180, 513, 785, 867, 875, 876, 879], "epsilon_2r": [180, 265, 267, 269], "epsilon_4r": [180, 265, 267, 269], "epsilon_5y_i": [180, 265, 267, 269], "epsilon_6x_i": [180, 265, 267, 269], "epsilon_1r": [180, 265, 267, 269], "yx": [180, 263, 267, 902], "epsilon_2": [180, 263, 265, 267], "epsilon_4": [180, 263, 265, 267], "epsilon_5": [180, 263, 265, 267, 269], "epsilon_6": [180, 263, 265, 267, 269], "epsilon_1": [180, 263, 265, 267, 269], "epsilon_3": [180, 263, 265, 267], "pinwheel": [180, 263, 265], "focal_length": [180, 181, 233, 263, 275, 284, 289, 292, 300, 309, 435, 784, 902, 908], "050773898292755": 180, "1111288": 180, "00251967": 180, "09016027": 180, "98757318": 180, "99592408": 180, "free": 181, "eclips": 181, "damag": 181, "ey": [181, 483], "paper": [181, 192, 213, 458, 513, 539, 548, 556, 566, 578, 590, 830, 842, 844, 848], "hole": 181, "sheet": 181, "sun": [181, 187, 435, 514, 519, 615, 616, 617, 618, 625, 627, 639, 643, 672, 676, 678, 682, 686, 690, 693, 733, 734, 786, 787, 816, 817, 819, 902, 908], "obscur": [181, 610, 619, 631, 637, 676, 684], "moon": [181, 187, 439, 627, 867], "triangl": [181, 187, 436, 450, 466, 512, 517, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 641, 680, 688, 739, 743, 745, 896, 905], "diagram": 181, "thermal": 181, "expans": [181, 186, 202, 341, 357, 372, 388, 415], "discret": [181, 221], "receptor": 181, "050999753955251": 181, "11113154": 181, "00251969": 181, "090161": 181, "98757256": 181, "99592402": 181, "merg": [182, 536, 553, 563, 740], "sql": 182, "scenario": [182, 847], "18th": 182, "proce": [182, 436, 458, 459, 469, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601, 627, 784], "perhap": [182, 629, 641, 645, 680, 688, 692], "rebuild": 182, "wherev": [182, 186, 426], "normal": [182, 186, 187, 192, 195, 204, 220, 221, 222, 229, 322, 333, 346, 355, 364, 377, 386, 395, 410, 431, 434, 441, 442, 443, 445, 446, 447, 448, 449, 453, 455, 468, 469, 480, 486, 487, 503, 505, 507, 509, 518, 522, 536, 543, 553, 560, 563, 567, 571, 575, 579, 584, 587, 591, 596, 604, 624, 645, 647, 648, 658, 659, 661, 663, 665, 672, 674, 708, 714, 784, 787, 808, 814, 830, 864, 870, 890, 893, 897, 900, 906, 909, 915], "local": [182, 201, 202, 207, 208, 223, 231, 442, 445, 446, 447, 448, 449, 450, 453, 455, 503, 505, 509, 658, 738, 785, 892, 895], "project_stars_onto_imag": 182, "develop": [182, 231, 398, 513, 515, 516, 517, 536, 553, 563, 629, 752, 784, 786], "occasion": [182, 624, 645, 692, 694, 809, 845], "tool": [182, 184, 189, 231, 518, 629, 784, 787, 788], "among": [183, 439, 788, 867], "ufunc": 183, "cast": [183, 459, 541, 549, 558, 569, 574, 581, 593, 601, 604, 648, 652, 656], "notimpl": 183, "load_imag": [183, 195, 786], "find_poi_in_roi": [184, 195, 201, 202, 203, 210, 214], "refine_loc": [184, 210], "detect": [184, 198, 199, 202, 206, 209, 211, 212, 217, 218, 615, 624, 645, 684, 782, 803, 807, 808, 809, 830, 833, 842, 844, 848, 849, 859, 861, 862, 863, 864], "pae_edg": 184, "denois": [184, 191, 202, 205, 604, 625, 627, 648], "nois": [184, 186, 191, 195, 201, 202, 206, 207, 214, 215, 216, 227, 228, 321, 332, 604, 606, 624, 628, 645, 648, 656, 657, 684, 786, 787, 803, 808, 816, 817, 823, 824, 840], "flatten_image_and_get_noise_level": [184, 202, 206], "denoise_imag": [184, 210, 604, 625, 627, 648, 787], "swap": [184, 659, 665], "reli": [184, 615, 695], "foundat": 185, "super": [185, 186, 188, 259, 345, 361, 363, 376, 392, 394, 407, 408, 409, 412, 467, 469, 608, 619, 621, 642, 654, 681, 689, 692, 786], "relativeopnav": [185, 188, 604, 608, 610, 613, 619, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 635, 637, 642, 645, 648, 654, 676, 681, 684, 689, 692, 787], "myawesomenewopnav": 185, "new_attribut": 185, "hasattr": 185, "mtf": 186, "spatial": [186, 221, 229, 326, 368, 381, 425, 450, 645, 646, 651, 658, 787, 830, 862], "domain": [186, 221, 222, 645, 658, 835], "frequenc": [186, 221, 222, 227, 228, 604, 624, 645, 648, 651, 656, 657], "unresolv": [186, 188, 192, 202, 230, 426, 514, 519, 624, 626, 628, 633, 637, 640, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 697, 706, 787, 803, 842], "blur": [186, 191, 202, 215, 216, 227, 228, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 423, 428, 604, 624, 645, 648, 656, 657], "resembl": [186, 676], "popular": [186, 624, 629], "gaussian": [186, 191, 202, 215, 216, 224, 227, 228, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 407, 409, 422, 424, 604, 630, 648, 656, 657, 730, 787], "generalizedgaussian": [186, 367, 380], "iterativegaussian": 186, "iterativegeneralizedgaussian": 186, "iterativegaussianwbackground": [186, 392], "iterativegeneralizedgaussianwbackground": 186, "render": [186, 187, 426, 435, 438, 439, 475, 480, 487, 494, 495, 497, 500, 512, 514, 515, 518, 519, 522, 575, 587, 604, 605, 606, 616, 617, 619, 624, 639, 641, 645, 648, 650, 651, 656, 658, 662, 675, 678, 680, 686, 688, 695, 698, 729, 730, 788], "realist": [186, 426], "ve": [186, 400, 426, 692, 784, 786, 787], "save_residu": [186, 202, 314, 325, 336, 341, 349, 357, 367, 372, 380, 388, 400, 401, 407, 409, 415, 426], "image_1d": [186, 316, 317, 327, 328, 338, 339, 351, 352, 369, 370, 382, 383, 403, 423, 428], "generate_kernel": [186, 314, 325, 326, 336, 349, 367, 368, 380, 381, 400, 424, 425, 432], "volum": [186, 322, 323, 333, 334, 346, 347, 364, 365, 377, 378, 395, 396, 400, 431, 434, 599, 600, 742], "x_0": [186, 314, 318, 320, 321, 322, 324, 325, 329, 331, 332, 333, 335, 336, 340, 343, 344, 346, 348, 349, 354, 359, 361, 364, 366, 367, 371, 374, 375, 377, 379, 380, 385, 390, 392, 395, 397, 405, 431, 434], "y_0": [186, 314, 318, 320, 321, 322, 324, 325, 329, 331, 332, 333, 335, 336, 340, 343, 344, 346, 348, 349, 354, 359, 361, 364, 366, 367, 371, 374, 375, 377, 379, 380, 385, 390, 392, 395, 397, 405, 431, 434], "x0": [186, 202, 322, 333, 346, 364, 377, 395, 431, 434], "y0": [186, 202, 322, 333, 346, 364, 377, 395, 431, 434], "convolut": [186, 322, 333, 346, 364, 377, 395, 431, 434], "signal": [186, 206, 214, 314, 322, 325, 333, 336, 346, 349, 364, 367, 377, 380, 395, 431, 434, 648, 656, 684, 808], "height": [186, 228, 320, 321, 331, 332, 343, 344, 345, 359, 361, 362, 363, 374, 375, 376, 390, 392, 393, 394, 405, 408, 411, 412, 421, 429, 430, 657, 895], "rest": [186, 192, 202, 289, 356, 387, 416, 417, 419, 430, 438, 645, 785, 786, 787], "residual_rss": [186, 314, 325, 336, 349, 367, 380, 400, 401, 426], "rss": [186, 400, 401, 426], "residual_mean": [186, 314, 325, 336, 349, 367, 380], "residual_std": [186, 314, 325, 336, 349, 367, 380, 400, 401, 426], "perfect": [186, 624, 645, 658], "horribl": 186, "clip": 186, "pearson": [186, 604, 646, 648, 656, 658], "moment": [186, 198, 199, 213, 217, 438, 600, 604, 610, 627, 628, 630, 631, 637, 640, 641, 646, 648, 656, 658, 680, 688, 692, 702, 742], "sizedpsf": 186, "determine_s": [186, 432], "odd": [186, 314, 325, 336, 349, 367, 380, 432], "initialguessiterativenonlinearlstsqpsf": [186, 336, 345, 367, 376], "lstsq": [186, 407, 409], "bias": [186, 344, 345, 361, 363, 375, 376, 392, 394, 401, 407, 408, 409, 412, 624, 648, 676], "logarithm": [186, 191, 336, 349, 367, 380, 407, 409, 752, 782, 864], "unbias": [186, 407, 409], "bother": [186, 407, 409, 692], "fit_lstsq": [186, 407, 409], "_residu": [186, 407, 409], "_covari": [186, 407, 409], "update_st": [186, 341, 345, 353, 357, 363, 372, 376, 384, 388, 394, 408, 412, 413, 415, 417, 418], "initialguessiterativenonlinearlstsqpsfwbackground": [186, 349, 363, 380, 394], "bg_b_coef": [186, 349, 362, 380, 393, 409, 417, 421], "bg_c_coef": [186, 349, 362, 380, 393, 409, 417, 421], "bg_d_coef": [186, 349, 362, 380, 393, 409, 417, 421], "background": [186, 191, 192, 201, 202, 207, 209, 224, 349, 353, 355, 356, 360, 361, 362, 363, 380, 384, 386, 387, 391, 392, 393, 394, 409, 410, 412, 417, 418, 419, 420, 421, 628, 637, 640, 737, 738, 782, 808], "gradient": [186, 200, 201, 202, 207, 208, 211, 212, 219, 349, 380, 409, 417], "rough": [186, 191, 195, 202, 214, 361, 362, 363, 392, 393, 394, 412, 421, 610, 631, 648, 659, 787], "compute_jacobian_al": 186, "nxm": [186, 355, 386, 410, 414, 632, 695, 852, 856], "iterativenonlinearlstsqwbackground": [186, 362, 393, 409], "superposit": [186, 349, 380, 417], "compute_jacobian_bg": [186, 417], "evaluate_bg": [186, 417], "apply_update_bg": [186, 417], "f_": [186, 356, 387, 417, 419], "bg": [186, 356, 362, 387, 393, 417, 419, 421], "bx": [186, 225, 349, 360, 361, 380, 391, 392, 417, 420, 511], "cy": [186, 349, 360, 361, 380, 391, 392, 417, 420, 899, 908], "regular": [186, 353, 384, 417, 418, 439, 513, 600, 610, 625, 627, 692, 743], "update_states_bg": [186, 417], "portion": [186, 191, 195, 398, 417, 628, 648, 658, 708, 711, 715, 718, 744, 786, 787], "hstack": [186, 356, 387, 419], "nx3": [186, 356, 387, 419, 507, 536, 553, 563, 575, 587, 904], "bg_updat": [186, 353, 384, 418], "fed": [186, 188, 353, 384, 418, 862], "fit_bg": 186, "tri": [186, 362, 393, 421, 507, 513, 529, 575, 587, 599, 600, 625, 795], "iterativenonlinearlstsqpsf": [186, 407, 417], "atol": [186, 336, 341, 349, 357, 367, 372, 380, 388, 413, 415, 574, 601], "rtol": [186, 336, 341, 349, 357, 367, 372, 380, 388, 413, 415, 574, 601], "somewher": [186, 413, 453], "cut": [186, 336, 349, 367, 380, 413], "percent": [186, 336, 349, 367, 380, 413, 665, 714, 728], "taylor": [186, 341, 357, 372, 388, 415], "complic": [186, 289, 341, 357, 372, 388, 415, 437, 904], "kernelbasedcallpsf": [186, 325], "share": [186, 400, 422, 424, 467, 469, 536, 553, 563, 692, 789, 801], "convolv": [186, 200, 208, 219, 317, 326, 328, 339, 352, 368, 370, 381, 383, 423, 424, 425], "optim": [186, 224, 424, 455, 457, 538, 547, 555, 565, 577, 589], "kernelbasedapply1dpsf": 186, "apply_1d_s": [186, 422], "seen": [186, 188, 422, 651], "fourier": [186, 221, 222, 317, 326, 328, 339, 352, 368, 370, 381, 383, 423, 425], "sigma_x": [186, 224, 314, 318, 319, 320, 321, 323, 324, 325, 330, 334, 336, 340, 342, 343, 344, 347, 348, 349, 354, 358, 359, 361, 365, 366, 367, 373, 378, 380, 385, 389, 396, 397, 730, 787], "sigma_i": [186, 224, 314, 318, 319, 320, 321, 323, 324, 325, 330, 334, 336, 340, 342, 343, 344, 347, 348, 349, 354, 358, 359, 361, 365, 366, 367, 373, 378, 380, 385, 389, 396, 397, 730, 787], "amplitud": [186, 224, 314, 323, 325, 334, 336, 347, 349, 365, 367, 378, 380, 396, 730], "centroid_x": [186, 224, 314, 325, 336, 349, 367, 380, 401, 730], "centroid_i": [186, 224, 314, 325, 336, 349, 367, 380, 401, 730], "rm": [186, 314, 325, 336, 349, 367, 380, 892], "rsm": [186, 314, 325, 336, 349, 367, 380], "logspac": [186, 321, 332], "overweight": [186, 321, 332], "tail": [186, 321, 332], "constrain": [186, 321, 332], "hyperbol": [186, 321, 332, 344, 361, 375, 392], "mx5": [186, 318, 340], "a_coef": [186, 325, 367, 380], "b_coef": [186, 325, 367, 380], "c_coef": [186, 325, 367, 380], "2b": [186, 325, 329, 331, 332, 371, 374, 375, 390, 392, 602], "semi": [186, 325, 367, 380, 808], "major": [186, 325, 367, 380, 518, 788, 808, 908], "minor": [186, 325, 367, 380], "exponenti": [186, 325, 367, 380, 455], "5xn": [186, 329, 371], "cccccc": [186, 267, 329, 371], "2a": [186, 225, 329, 371, 511, 602], "2c": [186, 329, 371], "2f": [186, 329, 371], "5xm": [186, 329, 371], "energi": [314, 325, 336, 349, 367, 380], "normalize_amplitud": [314, 325, 336, 349, 367, 380], "gradiant": [186, 349, 380], "fact": [186, 349, 380, 436, 630, 645, 658, 659, 676, 692, 830], "mx8": [186, 354, 385], "cccccccc": [186, 354, 385], "unalt": [186, 401, 402, 403], "undefin": [186, 401, 501, 505, 553, 563, 582, 594, 604], "toward": [186, 195, 401, 459, 478, 506, 525, 532, 541, 549, 558, 569, 574, 581, 593, 601, 639, 676, 678, 686], "naiv": [186, 401], "3x3": [186, 191, 202, 406, 500, 513, 602, 604, 610, 631, 648, 652, 656, 708, 787, 858, 892, 895, 899, 908], "noth": [186, 406, 443, 462, 483, 488, 664, 671, 692, 698, 700, 701, 702, 706, 735, 736, 861, 916], "qquad": [186, 405], "2x2": [186, 268, 293, 401, 648, 830, 854], "bounc": [187, 438, 450, 478, 607, 624, 645, 651, 653], "geometri": [187, 435, 436, 450, 451, 453, 455, 456, 466, 467, 469, 478, 480, 514, 517, 518, 522, 523, 527, 530, 534, 624, 630, 645, 684, 784, 787], "exid": [187, 441, 442, 443, 446, 447, 448, 480], "incid": [187, 441, 442, 443, 445, 446, 447, 448, 449, 480, 641, 647, 672, 674, 680, 688], "albedo": [187, 442, 443, 445, 446, 447, 448, 449, 468, 500, 501, 503, 507, 509, 518, 536, 553, 563, 575, 582, 587, 594, 787, 895, 904], "intersect": [187, 436, 437, 450, 457, 466, 468, 469, 475, 477, 478, 481, 494, 495, 497, 500, 503, 505, 509, 523, 527, 530, 534, 538, 547, 555, 565, 574, 575, 577, 582, 587, 589, 594, 601, 648, 653, 658, 660, 662], "shadow": [187, 443, 467, 478, 480, 641, 680, 688], "intens": [187, 207, 212, 398, 435, 438, 441, 442, 443, 445, 446, 447, 478, 604, 615, 616, 617, 648, 653, 656, 684, 782], "imageri": 187, "collim": 187, "airless": 187, "atmospher": 187, "triaxial": [187, 439, 500, 505, 513, 625], "ellipsoid": [187, 435, 439, 455, 458, 486, 487, 511, 519, 524, 529, 531, 536, 539, 540, 542, 546, 548, 553, 556, 557, 559, 563, 566, 568, 570, 575, 578, 580, 583, 587, 590, 592, 595, 602, 625, 627, 697], "celesti": [187, 630, 808], "planet": [187, 439, 627, 823], "asteroid": [187, 625, 787], "comet": [187, 625], "tessel": [187, 436, 480, 516, 517, 518, 529, 546, 575, 587, 599, 600, 641, 675, 680, 688, 739], "planar": [187, 436], "primit": [187, 436, 450, 451, 453, 455, 456, 466, 467, 517, 518], "triangle32": [187, 439, 518, 553, 563, 587, 599, 600, 896, 905], "triangle64": [187, 439, 469, 518, 563, 575, 599, 600, 896, 905], "against": [187, 202, 204, 220, 222, 223, 229, 436, 468, 469, 478, 496, 669, 672, 674, 752, 870], "topographi": [187, 665, 743], "resolut": [187, 518, 616, 647, 662, 665, 742, 745], "axisalignedboundingbox": [187, 450, 455, 499, 500, 512, 522, 529, 536, 546, 553, 563, 575, 587, 659, 665], "wrap": [187, 491, 518, 659, 692, 787, 867], "sceneobject": [187, 435, 437, 438, 455, 475, 476, 500, 605, 607, 609, 612, 614, 617, 618, 622, 632, 634, 636, 638, 639, 641, 643, 644, 653, 655, 659, 677, 678, 680, 682, 683, 685, 686, 688, 690, 691, 693, 694, 787, 867], "illuminationmodel": [187, 480, 604, 616, 637, 648, 656, 676, 684], "mcewenillumin": [187, 435, 442, 637, 676, 684, 787], "ingest_shap": [187, 436, 439, 455, 518, 785, 787], "pleas": [187, 624, 625, 627, 628, 645, 692], "limb": [188, 194, 202, 209, 211, 230, 439, 458, 459, 500, 504, 506, 513, 524, 525, 531, 532, 539, 541, 546, 548, 549, 556, 558, 566, 569, 574, 575, 578, 581, 587, 590, 593, 601, 604, 610, 611, 612, 613, 615, 616, 617, 618, 619, 623, 625, 626, 627, 628, 631, 632, 633, 634, 637, 648, 658, 684, 692, 694, 695, 701, 704, 745, 787, 908], "3dof": [188, 625, 627], "unknown": [188, 627], "choic": [188, 494, 625, 627, 778], "auto_estim": [188, 693, 695, 698, 700, 701, 702, 706, 787], "deduc": [188, 674], "suit": [188, 513, 629, 714, 868], "understand": [188, 191, 192, 195, 439, 619, 744, 784, 787, 788], "certainli": [188, 191, 192, 787, 835], "fine": [188, 704, 714, 786, 830], "grain": 188, "deeper": 188, "relnav_class": [188, 624, 625, 627, 628, 630, 645, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 787], "especi": [188, 436, 494, 641, 645, 652, 675, 680, 688, 695], "extended_body_cutoff": [188, 695, 697], "knob": [188, 625, 627], "domin": [188, 630], "resolv": [188, 230, 625, 627, 628, 637, 695, 787], "slightli": [188, 455, 625, 627, 628, 648, 889], "q_x": 189, "q_y": 189, "q_z": 189, "q_": [189, 716, 718, 719, 724], "orthonorm": [189, 708], "_3": 189, "_2": [189, 716], "offer": 189, "overload": [189, 708], "content": [190, 231, 436, 626, 692, 754], "wide": [190, 191], "awai": [191, 192, 647], "said": [191, 192, 440, 469, 518, 575, 587, 624, 625, 627, 665, 835], "upcom": [191, 192], "stellar_class": [191, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 787], "star_identif": [191, 755, 756, 757, 758, 759, 760, 761], "often": 191, "experiment": [191, 480, 665, 741], "With": [191, 231, 664, 665, 692, 784, 786, 787], "hope": [191, 739, 849], "nob": 191, "goal": [191, 398], "practic": [191, 648, 784, 786], "shoot": 191, "briefli": 191, "image_denois": [191, 202, 205, 625, 627], "bit": [191, 784, 786, 889, 895], "smooth": [191, 215, 216, 787, 831, 835, 836, 838], "denoising_kwarg": [191, 202], "job": 191, "denoise_flag": [191, 202, 210, 625, 627], "big": [191, 231, 810, 889], "widow": 191, "centeroid": 191, "21x21": 191, "poi_max_s": [191, 202, 206], "blob": [191, 202, 206, 210, 214, 692, 808], "exclud": [191, 658], "low": [191, 202, 436, 604, 665, 745], "10x10": 191, "window": [191, 231, 784, 787, 864], "poi_min_s": [191, 202, 206], "spike": [191, 624, 808], "faint": 191, "satur": [191, 195, 202, 206, 786, 804, 808], "overexpos": 191, "sever": 191, "degrad": [191, 624, 627], "accuraci": [191, 209, 211, 226, 227, 228, 436, 459, 541, 549, 558, 569, 581, 593, 616, 641, 657, 675, 680, 688], "1000": [191, 752, 784, 786, 787], "tradeoff": 191, "crucial": 191, "encompass": 191, "suggest": [191, 752], "conserv": [191, 192, 752, 784, 787], "rememb": [191, 455, 752, 784], "pick": [191, 692, 693, 752], "sopnav": [191, 779, 780, 781, 782, 783, 787, 803, 806, 811], "spot": [192, 202, 443, 665, 684, 687, 803, 806], "autonom": [192, 807, 830, 848], "ekf": [192, 823, 830, 831, 833, 834, 835, 836, 837, 840, 843, 845, 850, 859], "save_result": [192, 803, 842, 844, 848, 859], "visualize_detection_result": [192, 859], "neighboor": 192, "miss": 192, "excess": 192, "spuriou": 192, "dynam": [192, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 835, 845, 847, 850, 854, 859], "topic": 192, "intial": [192, 693], "state_initi": [192, 830, 835, 837, 858, 859], "euclidean": [192, 830, 859], "overwhelm": [192, 201, 641, 665, 680, 688], "tracker": [192, 844, 848, 850, 854, 859, 861, 862], "agupub": [192, 830, 842, 844, 848], "onlinelibrari": [192, 830, 842, 844, 848], "wilei": [192, 830, 842, 844, 848], "doi": [192, 213, 830, 842, 844, 848], "1029": [192, 830, 842, 844, 848], "2019ea000843": [192, 830, 842, 844, 848], "environ": [192, 739, 872], "deal": [192, 500, 518], "classifi": 194, "sfn": [194, 513, 624, 645, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 693, 695, 697, 743, 744, 745], "dark_pixel": [195, 201, 207, 786], "instrument": [195, 786], "exposuretyp": 195, "came": [195, 803, 808, 854], "favor": [195, 493], "region": [195, 201, 202, 203, 206, 207, 210, 604, 624, 628, 630, 637, 645, 648, 651, 658, 684, 692, 808], "middl": [195, 215, 786, 908], "tag": 195, "timestamp": [195, 744], "isoformat": [195, 786, 867, 886], "__add__": 195, "__sub__": 195, "_observation_d": 195, "encod": [195, 450, 468, 469, 475, 478, 481, 513], "_rotation_inertial_to_camera": 195, "central": [195, 449, 817, 820, 823, 824, 826, 830, 858, 859], "image_path": 196, "pyfit": 196, "grayscal": [196, 202, 224, 741], "color": [196, 864], "notimplementederror": [197, 789], "0147": [198, 199], "0933": [198, 199], "1253": [198, 199], "0469": [198, 199], "064": [198, 199], "imaginari": [198, 507], "zernik": [198, 199, 202, 213, 217, 218], "horizont": [200, 208, 212], "sobel": [200, 208, 219], "researchg": [200, 215, 216, 219], "net": [200, 215, 216, 219, 752, 801], "public": [200, 215, 216, 219, 699], "239398674_an_isotropic_3x3_image_gradient_oper": [200, 219], "image_flattening_noise_approxim": [201, 202], "unnecessari": 201, "analys": 201, "gaussianblur": [202, 787], "denoising_arg": 202, "pae_threshold": [202, 211], "pae_ord": [202, 211], "cv2_correlator_2d": 202, "correlator_kwarg": 202, "subpixel_method": [202, 218, 625, 627], "subpixeledgemethod": 202, "pae": [202, 211, 212, 215, 216, 218], "return_stat": [202, 206, 210, 684], "zernike_edge_width": [202, 213], "otsu_level": [202, 628], "minimum_segment_area": [202, 628, 637, 692], "minimum_segment_dn": [202, 628], "200": [202, 204, 220, 222, 229, 645, 658, 692, 785], "imageflatteningnoiseapprox": 202, "flattening_kernel_s": [202, 207], "roi": [202, 203], "coars": 202, "locate_poi": 202, "ramp": [202, 213, 218], "histogram": [202, 224, 628, 754, 781], "otsu": [202, 208, 209, 628, 692], "segment": [202, 224, 628, 637, 640, 692], "foreground": [202, 209, 628, 637, 640, 692], "illum": 202, "denoised_imag": 202, "original_imag": 202, "suppress": 202, "66": [202, 213, 224], "cor_surf": 202, "5x5": [202, 803, 808], "clump": [202, 628], "particl": [202, 830, 834, 844, 847, 848], "row_corn": 203, "column_corn": 203, "gimp": 203, "im": [203, 223, 224, 784], "local_row_corn": 203, "local_column_corn": 203, "score": [204, 604, 624, 626, 645, 646, 648, 656, 658, 692], "local_imag": 204, "local_templ": 204, "30": [204, 220, 222, 229, 658], "60": [204, 220, 222, 224, 229, 442, 447, 658], "45": [204, 220, 222, 229, 319, 330, 342, 358, 373, 389, 658], "surf": [204, 220, 222, 229], "temp_middl": [204, 220, 222, 229], "floor": [204, 220, 222, 229, 319, 330, 342, 358, 373, 389, 692], "template_point": [204, 220, 222, 229], "unravel_index": [204, 220, 222, 229, 658], "argmax": [204, 220, 222, 229, 658], "standard_devi": 206, "nnnnn": 206, "nyyyn": 206, "nyoyn": 206, "wherea": 206, "connectedcomponentswithstat": 206, "000": [207, 887], "apart": [207, 752], "split_horizontal_vert": 208, "return_gradi": 208, "vertic": [208, 212, 219, 455, 466, 467, 480, 486, 487, 494, 499, 512, 518, 536, 537, 540, 543, 545, 553, 554, 557, 560, 562, 563, 564, 568, 571, 573, 575, 576, 580, 584, 586, 587, 588, 592, 596, 598, 602, 647, 659, 739, 904, 906], "strongest": 208, "strong": [208, 808], "maxima": [208, 223], "illum_dir": 209, "num_obj": 209, "encount": 209, "incom": [209, 645, 672, 674], "sunlight": 209, "feed": [210, 785, 848, 850, 854], "abruptli": 211, "transit": 211, "sciencedirect": [211, 212], "pii": [211, 212], "s0262885612001850": [211, 212], "identify_subpixel_limb": [211, 612, 615, 625, 627, 634], "pixel_edg": [212, 213], "horizontal_mask": 212, "vertical_mask": 212, "horizontal_gradi": 212, "vertical_gradi": 212, "explain": [212, 784, 788], "parabol": [212, 228, 657], "surround": [212, 214, 223, 808], "identify_pixel_edg": 212, "aiaa": 213, "org": [213, 220, 231, 443, 455, 468, 513, 643, 682, 690, 694], "2514": 213, "a33692": 213, "mobileui": 213, "roughli": [213, 222, 319, 330, 342, 358, 373, 389, 493, 628, 675, 830], "image_sub": 214, "conjunct": [214, 659], "experienc": [215, 216], "233397974_accurate_subpixel_edge_location_based_on_partial_area_effect": [215, 216], "0625": 216, "0177": 217, "0595": 217, "0507": 217, "0492": 217, "1004": 217, "1516": 217, "refine_edges_pa": 218, "zernike_ramp": 218, "refine_edges_zernike_ramp": 218, "matchtempl": 220, "cv2": [220, 692], "tm_ccoeff_norm": 220, "doc": [220, 231, 443, 468, 694], "master": [220, 867], "d4": 220, "dc6": 220, "tutorial_py_template_match": 220, "html": [220, 231, 443, 468, 694, 867, 875, 876, 879], "example_imag": [220, 222, 229, 658], "example_templ": [220, 222, 229, 658], "overlap": [220, 222, 229, 647, 658, 665, 744, 745], "extracted_lin": 221, "predicted_lin": 221, "fliplr": 222, "flipud": 222, "data_grid": 223, "multilevel": 224, "chosen": [224, 625, 627, 637, 639, 678, 684, 686, 704, 784, 866], "ieee": [224, 513], "tran": 224, "syst": 224, "man": [224, 619, 693], "cybern": 224, "1979": [224, 874], "62": 224, "bin": [224, 784], "uint8": 224, "threhold": 224, "matlab": 224, "mathwork": 224, "matlabcentr": 224, "fileexchang": 224, "26532": 224, "s_tid": 224, "prof_contriblnk": 224, "thresh": 224, "labeled_im": 224, "24723526470339388": 224, "235294117647059": 224, "correlation_lin": [225, 226], "fit_siz": [225, 228, 657], "pixel_level_peak_finder_1d": 225, "parabola": 225, "equat": [225, 228, 495, 497, 504, 506, 507, 511, 599, 602, 657], "algebra": [225, 228, 602, 657, 784], "x_p": [225, 228, 657], "side": [225, 453, 472, 498, 499, 512, 575, 579, 587, 591, 604, 648, 656, 676, 745, 787, 892, 895, 904], "shift_limit": [228, 657], "quadric": [228, 624, 645, 657], "pixel_level_peak_finder_2d": [228, 657], "cxy": [228, 657], "dx": [228, 657], "ei": [228, 657], "y_p": [228, 657], "4ab": [228, 657], "ce": [228, 657, 718, 720, 721, 722, 723, 726, 727], "2bd": [228, 657], "cd": [228, 231, 657, 785, 786], "2ae": [228, 657], "paraboloid": [228, 657], "whichev": [229, 326, 368, 381, 425], "kind": [230, 840], "plan": [230, 437, 659], "written": [231, 801, 889, 891, 894, 898, 899, 901, 907, 908, 910], "cython": [231, 436, 512, 513, 515, 516, 517, 518], "improv": 231, "unix": [231, 789, 869], "untest": 231, "subsect": [231, 786], "mamba": 231, "forg": 231, "interfer": 231, "fom": 231, "github": [231, 789], "conda": 231, "miniforg": 231, "anaconda": 231, "home": 231, "admin": 231, "privileg": 231, "maco": 231, "cpath": 231, "xcode": 231, "app": 231, "platform": [231, 789], "macosx": 231, "sdk": 231, "usr": 231, "commandlinetool": 231, "studio": 231, "2017": [231, 874], "knowledge_bas": 231, "imagemagick": 231, "php": 231, "giant_env": [231, 786], "pyqt": 231, "astropi": 231, "sphinx": 231, "spiceypi": [231, 784, 786, 787, 867, 872, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886], "openmp": 231, "astroqueri": 231, "psutil": 231, "mac": [231, 789], "linux": 231, "repositori": 231, "vs2017": 231, "git": 231, "clone": 231, "nasa": [231, 232, 513, 785, 867, 875, 876, 879], "pip": [231, 787], "omit": 231, "unittest": 231, "wignor": 231, "discov": 231, "ok": [231, 458, 539, 548, 556, 566, 578, 590], "readi": [231, 784, 786, 787], "softwar": [232, 436, 629, 665, 752, 868, 902], "agreement": 232, "nosa": 232, "radial2n": 233, "radial4n": 233, "radial6n": 233, "k4": 233, "k5": 233, "k6": 233, "radial2d": 233, "radial4d": 233, "radial6d": 233, "s1": [233, 716], "s2": [233, 716], "s3": 233, "s4": 233, "thinprism_1": 233, "thinprism_2": 233, "thinprism_3": 233, "thinprism_4": 233, "subclasss": 233, "retangular": 233, "k_4": 233, "denomin": 233, "k_5": 233, "k_6": 233, "s_1": [233, 237, 238], "twelv": 233, "s_2": 233, "s_3": [233, 237, 238], "s_4": 233, "numerator": 233, "cccccccccccc": 237, "2x_il": 237, "4x_il": 237, "6x_il": 237, "2x_iul": 237, "4x_iul": 237, "6x_iul": 237, "2y_il": 237, "4y_il": 237, "6y_il": 237, "2y_iul": 237, "4y_iul": 237, "6y_iul": 237, "2k_4": [237, 238], "4k_5r": [237, 238], "6k_6r": [237, 238], "2s_2r": [237, 238], "2s_4r": [237, 238], "opnav_class": [259, 260, 261, 262, 788], "tangential_x": 263, "tangential_i": 263, "pinwheel1": 263, "pinwheel2": 263, "e1": 263, "e2": 263, "e3": 263, "e4": 263, "e5": 263, "e6": 263, "eh": 263, "k_xk_y": 263, "k_yp_x": 263, "k_xp_y": 263, "epsilon_3r": [267, 269], "ii": 267, "400": [275, 284, 292, 300, 309, 435], "00112269": 275, "00224537": 275, "33680555": [275, 284], "89814814": [275, 284], "00417843": 275, "02185185": 275, "216": 275, "01044606": 275, "0437037": 275, "378": 275, "33680556": [275, 284], "25352754": [275, 284], "506": [275, 284], "55555555": [275, 284], "564": [275, 284], "79999998": [275, 284], "89814815": [275, 284], "504": [275, 284], "17842513": [275, 284], "517": [275, 284], "48148149": [275, 284], "651": [275, 284], "20000003": [275, 284], "00112268": 275, "00417839": 275, "02185166": 275, "21599806": 275, "00224535": 275, "01044597": 275, "04370331": 275, "3779966": 275, "33680252": [275, 284], "25351625": [275, 284], "55549654": [275, 284], "7994167": [275, 284], "89814006": [275, 284], "1783875": [275, 284], "48132409": [275, 284], "19863896": [275, 284], "1e5": 284, "_gaussianskeleton": [314, 325], "popul": [314, 325, 336, 349, 367, 380, 610, 619, 631, 692, 866, 871, 889, 890, 893, 897, 899, 900, 903, 906, 908, 909], "widest": [319, 330, 342, 358, 373, 389, 453], "95": [319, 330, 342, 358, 373, 389], "curv": [319, 330, 342, 358, 373, 389], "border": [326, 368, 381, 425], "replic": [326, 368, 381, 425], "profil": [398, 615, 895], "strictli": [398, 400, 619, 692], "cumbersom": 398, "cost": 398, "fwhm": 398, "distinct": [398, 546], "neglig": 398, "predefin": [400, 517, 639, 678, 686, 786], "reinvent": 400, "wheel": 400, "checker": [400, 619], "inherit": [400, 436, 522, 546], "iff": 400, "inf": 400, "psf_meta": [407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "illum_dtyp": [435, 448, 449, 478, 480, 604, 648, 656], "get_illumination_input": [435, 438, 475, 607, 653], "electron": [435, 803], "photon": 435, "conceiv": [435, 483, 786], "workflow": [435, 848], "ray_trac": [435, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 624, 645, 665, 693, 787, 788, 858], "compute_rai": [435, 437, 604, 607, 653], "principal_ax": [435, 500], "800": 435, "target_obj": [435, 469, 475, 477, 478, 479, 481, 604, 606, 607, 610, 611, 619, 631, 637, 639, 641, 643, 648, 651, 653, 656, 659, 678, 680, 682, 684, 686, 688, 690, 693, 695, 703, 787], "light_obj": [435, 475, 478, 479, 659, 693, 787], "illum_input": 435, "round": 435, "astyp": [435, 692], "imshow": 435, "cmap": 435, "lommel": [435, 442, 447], "seelig": [435, 442, 447], "lambertian": [435, 442, 447], "circumst": 435, "rawsurfac": [436, 455, 469, 517, 559, 570, 574, 583, 595], "ground": [436, 645, 647, 665, 672, 674, 745, 892, 895], "ten": 436, "thousand": [436, 830], "prohibit": 436, "ton": [436, 864], "travers": [436, 664], "kdnode": [436, 455, 456, 466, 467, 469], "children": [436, 450, 456, 830], "branch": [436, 450, 455, 456], "leaf": [436, 450, 455, 456, 465, 469], "box": [436, 450, 451, 452, 454, 455, 469, 486, 487, 494, 495, 496, 497, 498, 499, 500, 508, 510, 512, 536, 537, 542, 553, 554, 559, 563, 564, 570, 575, 576, 583, 587, 588, 595, 605, 647, 650, 659, 662, 665, 672, 674, 697, 786], "dramat": [436, 455, 518, 647], "emphas": 436, "compute_intersect": [436, 494, 500, 505, 507, 582, 594], "find_limb": [436, 500, 546, 574, 612, 616, 618, 634], "compute_limb_jacobian": [436, 500, 546], "tile_shap": [436, 439, 518, 629, 647, 659, 665], "spc_to_feature_catalogu": [436, 439, 518, 629, 647, 659, 665], "tracer": [437, 440, 494, 495, 497, 512, 651, 896, 905], "certain": [437, 647, 752, 784, 786], "facet": [437, 450, 453, 465, 466, 467, 468, 469, 475, 480, 481, 518, 536, 537, 540, 553, 554, 557, 563, 564, 567, 568, 575, 576, 579, 580, 582, 587, 588, 591, 592, 594, 641, 676, 680, 688], "solid": [437, 468, 469, 536, 546, 553, 563, 575, 587, 665], "carefulli": [437, 665, 786, 823], "facilit": 438, "tie": 438, "besid": [438, 646, 695], "track": [439, 475, 519, 647, 788, 830, 835, 842, 843, 844, 845, 847, 848, 859, 861], "sphere": [439, 486, 487, 500, 605, 643, 650, 675, 682, 690, 697, 808], "terrain": [439, 517, 518, 787, 895, 904], "patch": [439, 517, 629, 647, 659, 665, 676], "hood": 439, "benefici": [439, 624], "skim": 439, "herein": 440, "dispers": 440, "useabl": 440, "ashikhmin": 441, "shirlei": 441, "diffus": 441, "law": [441, 643, 682, 690], "visibl": [441, 442, 443, 445, 446, 447, 459, 475, 506, 514, 525, 532, 541, 549, 558, 569, 574, 581, 593, 601, 625, 627, 629, 645, 647, 648, 651, 653, 659, 672], "cosin": [441, 442, 445, 446, 447, 448], "thoroughli": 441, "natur": [441, 518, 619, 693], "global_albedo": [442, 445, 446, 447], "phase": [442, 447, 448, 449, 479, 628, 630, 637, 639, 640, 641, 643, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 786], "alpha_0": [442, 445, 446, 447, 448], "beta": [442, 447, 448], "typo": 442, "spc": [442, 665, 743, 744, 745, 785, 788, 868, 888, 889, 890, 892, 893, 895, 897, 899, 900, 902, 903, 904, 906, 908, 909], "therein": 442, "f8": [443, 468, 694], "datatyp": [443, 468, 694], "overview": [443, 468, 694, 787], "stabl": [443, 468, 694], "rec": [443, 468, 694], "struck": [443, 468, 475, 477, 478, 495, 497, 653, 660], "struct": [443, 648], "wrong": [443, 830], "photoclinometri": 447, "rotation_to_inerti": [448, 449], "max_inc": [448, 449], "2217304763960306": [448, 449], "max_emi": [448, 449], "max_phas": [448, 449], "443460952792061": [448, 449], "update_weight": 448, "005": 448, "h_x": [448, 449], "h_y": [448, 449], "east": [448, 449], "north": [448, 449], "emiss": [448, 449], "prior": [448, 625, 627, 631, 917, 918], "x3": [448, 449], "06": [449, 631, 858], "finit": [449, 450], "differenc": 449, "compute_photoclinometry_jacobian": 449, "prefer": [449, 492, 604, 629, 648, 656, 672, 674, 739, 867, 875, 876, 879], "perturb": [449, 823], "_left": 450, "_right": 450, "_bounding_box": [450, 455, 500], "_order": 450, "_id": [450, 500], "_id_ord": 450, "_center": 450, "subdivis": 450, "compris": [450, 475, 575, 587], "extent": [450, 455, 483, 616, 625, 627, 631], "xxxxxxxxyyyyyyyi": 450, "id_ord": [450, 455], "digit": [450, 455, 475], "child": [450, 452, 453, 454], "unpickl": [450, 455, 494, 500], "face": [450, 536, 553, 563, 575, 582, 587, 594, 599, 600, 904], "picl": 450, "bounding_box": [450, 451, 455, 494, 500, 502, 522, 529, 536, 537, 543, 545, 546, 553, 554, 560, 562, 563, 564, 571, 573, 575, 576, 584, 586, 587, 588, 596, 598, 659, 665, 667], "has_surfac": 450, "largest": [450, 574], "encapsul": [451, 455], "anymor": [452, 454, 908], "forc": [453, 456, 652, 665, 693], "print_progress": [453, 456], "grow": [453, 629, 645, 840], "distribut": [453, 472, 616, 618, 624, 645, 870, 885], "ridden": 453, "past": [453, 658, 784, 902], "progress": [453, 456], "let": [453, 469, 483, 692, 784, 786, 787, 859], "stuck": 453, "array_lik": [454, 459, 461, 464, 494, 496, 498, 500, 508, 526, 528, 533, 535, 536, 541, 543, 545, 549, 550, 552, 553, 558, 560, 562, 563, 569, 571, 573, 574, 575, 581, 582, 584, 586, 587, 593, 594, 596, 598], "max_depth": [455, 456, 739], "_root": 455, "_rotat": [455, 494, 496], "_posit": 455, "_reference_ellipsoid": 455, "kd": 455, "alter": 455, "subsurfac": 455, "hierarch": 455, "wikipedia": 455, "en": [455, 867], "wiki": [455, 868], "d_tree": 455, "conceptu": [455, 625, 629], "ineffici": 455, "trial": 455, "reference_ellipsoid": [455, 486, 500, 536, 540, 543, 545, 546, 553, 557, 560, 562, 563, 568, 571, 573, 575, 580, 584, 586, 587, 592, 596, 598], "sum_": 455, "opposit": 455, "confid": [456, 808, 844], "restructur": [457, 538, 547, 555, 565, 577, 589], "surc": [457, 538, 547, 555, 565, 577, 589], "intersect_dtyp": [457, 463, 469, 475, 477, 478, 481, 503, 509, 523, 527, 530, 534, 538, 544, 547, 551, 555, 561, 565, 572, 577, 585, 589, 597, 660, 662, 669], "scan_center_dir": [458, 459, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601], "scan_dir": [458, 459, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601], "limb_point": [458, 504, 524, 531, 539, 548, 556, 566, 578, 590], "observer_posit": [458, 459, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601], "seal": [458, 539, 548, 556, 566, 578, 590], "rpi": [458, 539, 548, 556, 566, 578, 590], "edu": [458, 539, 548, 556, 566, 578, 590, 784, 785, 868], "site": [458, 539, 548, 556, 566, 578, 590, 823], "workshop": [458, 539, 548, 556, 566, 578, 590], "2018": [458, 539, 548, 556, 566, 578, 590], "20base": [458, 539, 548, 556, 566, 578, 590], "20optic": [458, 539, 548, 556, 566, 578, 590], "20navig": [458, 539, 548, 556, 566, 578, 590], "20for": [458, 539, 548, 556, 566, 578, 590], "20irregular": [458, 539, 548, 556, 566, 578, 590], "20bodi": [458, 539, 548, 556, 566, 578, 590], "why": [458, 494, 539, 548, 556, 566, 578, 590, 604, 610, 631, 637, 648, 684, 867], "orthogon": [458, 459, 504, 506, 524, 525, 531, 532, 539, 541, 548, 549, 556, 558, 566, 569, 574, 578, 581, 590, 593, 601], "nx3x3": [458, 504, 524, 531, 539, 548, 556, 566, 578, 590, 723, 727], "panel": [458, 504, 524, 531, 539, 548, 556, 566, 578, 590], "find_limbs_surfac": [459, 541, 549, 558, 569, 581, 593], "strike": [459, 478, 507, 541, 549, 558, 569, 574, 581, 593, 601], "ideal": [459, 483, 541, 549, 558, 569, 574, 581, 593, 601], "filenam": [460, 462], "omp": [463, 544, 551, 561, 572, 585, 597], "min": [465, 472, 487, 494, 498, 499, 692], "tabular": 465, "get_facet": 466, "facet_id": 466, "transvers": [466, 467], "debug": [466, 648, 656], "vertex_id": 467, "vertex": [467, 494, 499, 536, 553, 563, 575, 579, 587, 591, 904], "i8": [468, 694], "hit": [468, 494, 495, 497, 574, 601, 653], "int64": 468, "duplic": [469, 536, 809], "tricki": 469, "get_ignore_ind": 469, "syntax": 469, "inv_direct": 469, "mush": 469, "affect": [471, 616, 658, 665, 784], "grid_siz": [472, 604, 624, 645, 648, 656, 787, 904], "evenli": [472, 616, 618], "ltp": [473, 476, 482, 483], "lt": [473, 476, 482, 867, 876, 879], "undo": 473, "impart": 473, "299792": 474, "458": 474, "obscuring_obj": 475, "position_funct": [475, 483, 488, 693, 787], "orientation_funct": [475, 483, 488, 693, 787], "calculate_apparent_posit": 475, "correctionstyp": [476, 482, 483], "traced_rai": [477, 660], "pertain": [477, 660, 911], "trace_rai": [478, 481], "return_intersect": 478, "presum": [478, 710, 843], "target_index": [479, 609, 614, 622, 636, 644, 655, 674, 683, 691], "arcco": 479, "dot": [479, 506], "target_ind": [480, 604, 607, 610, 612, 631, 634, 637, 639, 641, 643, 648, 652, 653, 678, 680, 682, 684, 686, 688, 690, 692], "illumination_model": 480, "raster": [480, 637, 639, 641, 675, 676, 678, 680, 684, 686, 688], "occlus": [480, 641, 680, 688], "reduc": [481, 536, 648, 830], "head": 481, "current_posit": 483, "current_orient": 483, "change_posit": [483, 488], "change_orient": [483, 488], "orien": 483, "intellig": 483, "sceneobj": [483, 876], "g_rai": 483, "g_scene": 483, "demo": 483, "ll": [483, 651, 784, 785, 786, 787, 788, 843], "scene_obj": 483, "whenev": [483, 647], "new_loc": 483, "new_orient": [483, 484], "98283723": 483, "55366624": 483, "88338665": 483, "42296095": 483, "05284171": 483, "90460588": 483, "update_po": 483, "05": [483, 729], "03283723": 483, "08338665": 483, "update_orient": 483, "001": [483, 816, 823, 858], "0323073": 483, "55371729": 483, "08386553": 483, "42381181": 483, "05416946": 483, "90412898": 483, "utcnow": 483, "75609837": 483, "64204013": 483, "12688471": 483, "And": [483, 784, 786, 787], "bari": [483, 786, 787], "interti": [483, 902], "get_bounding_pixel": 483, "get_apparent_diamt": 483, "diamet": [483, 486, 487, 612, 625, 627, 628, 630, 631, 634, 637, 639, 643, 678, 682, 684, 686, 690, 692, 693, 695, 697, 787], "log": [483, 665, 864, 869], "new_posit": 485, "focu": [486, 487], "assumpt": [486, 487, 628, 637], "nonsens": [486, 487], "circumscribing_spher": [487, 500], "circumscrib": [487, 605, 650, 697], "target_location_inerti": 491, "camera_location_inerti": 491, "flight": 491, "travel": 491, "unexpect": [491, 492, 493, 672, 740], "camera_to_target_position_inerti": [492, 493], "camera_velocity_inerti": [492, 493], "aber": 492, "mess": [492, 493, 665, 692, 784, 787, 848], "correct_stellar_aberration_fsp": 492, "secon": [492, 493], "ssb": [492, 493, 732, 734, 736, 786], "correct_stellar_aberr": 493, "axis_aligned_bounding_box": [494, 495, 496, 497, 498, 499], "min_sid": [494, 499], "max_sid": [494, 499], "aabb": [494, 495, 497, 498, 499, 502], "henc": 494, "3x6": [494, 499], "yz": [494, 499], "xz": [494, 499], "min_max_to_bounding_box": 494, "return_dist": [495, 497], "scratchapixel": [495, 497], "lesson": [495, 497], "undergo": 498, "un": [499, 692, 808], "3x8": 499, "ellipsoid_matrix": 500, "albedo_map": [500, 501], "p_c": 500, "nav": 500, "irregular": [500, 599, 612, 625, 627, 631, 634], "limb_match": [500, 610, 624, 625, 626, 628, 631, 632, 633, 634, 635, 636, 693, 695, 701], "decompos": 500, "principl": [500, 908], "init": [500, 546, 786], "latitud": [500, 501], "longitud": [500, 501], "body_centered_vec": 501, "lenght": 501, "_d": [504, 506], "1x3": 504, "loc": 505, "underdetermin": 506, "_0": [506, 714, 728], "bd": [506, 507, 785], "_h": 506, "axial": [507, 513, 529, 575, 587, 625], "c_n": 508, "rout": 511, "pm": 511, "4ac": 511, "discrimin": 511, "complex": [511, 848], "scalar_or_arrai": [511, 648], "traceabl": [513, 522, 574, 601, 647, 659, 665], "ellipse_match": [513, 610, 611, 612, 613, 614, 615, 616, 617, 618, 626, 627, 695, 697, 700], "anytim": 513, "ieeexplor": 513, "9326288": 513, "tr": [513, 724], "gov": [513, 785, 867, 875, 876, 879], "bitstream": 513, "2014": 513, "41942": 513, "0589": 513, "heavili": 513, "resort": [516, 529], "concern": [516, 842], "surface64": [517, 536, 546], "surface32": [517, 536, 546, 563], "commun": [518, 695, 708, 786, 788], "vast": 518, "ubiquit": 518, "wavefront": 518, "obj": [518, 739, 745, 902], "loss": 518, "exact": [518, 651], "aforement": 518, "unrender": 519, "shell": [519, 739, 786], "seri": [527, 534, 860], "compute_bounding_box": [536, 542, 553, 559, 563, 570, 575, 583, 587, 595], "compute_reference_ellipsoid": [536, 542, 553, 559, 563, 570, 575, 583, 587, 595], "backbon": [536, 553, 563], "__reduce__": [536, 553, 563], "stacked_vertic": [536, 553, 563, 575, 587], "num_fac": [536, 553, 563, 575, 587], "mxp": [536, 553, 563, 575, 587], "mx3": [536, 553, 563, 575, 587], "mx3xp": [536, 553, 563, 575, 587], "swapax": [536, 553, 563, 575, 587], "ref_ellips": [540, 557, 568, 580, 592], "characterist": 546, "explicit": [546, 830], "worthless": [553, 563], "initial_step": [574, 601], "max_iter": [574, 601], "beg": [574, 601], "ellips": [574, 602, 611, 625, 627, 692, 700], "he": [574, 601], "program": [575, 587, 626, 665, 692, 788, 869], "mx3x2": [575, 587], "face_index": [582, 594], "barycentr": [582, 594], "ic": [582, 594], "mass": [599, 600, 742, 816, 843], "uniform": 599, "densiti": 599, "tetrahedron": [599, 600], "analyz": [599, 604, 648, 695], "triangular": 599, "inertia": [600, 742], "kg": [600, 816, 858], "vert": 602, "g": [602, 739, 741, 742, 745], "h": [602, 737, 738, 739, 740, 741, 742, 743, 744, 745, 888], "c_0": 602, "c_1": 602, "c_2": 602, "val": 603, "contigu": [603, 647], "rag": 603, "cross_correl": [604, 605, 606, 607, 608, 609, 626, 628, 645, 693, 695, 697, 698], "brdf": [604, 607, 616, 624, 628, 630, 637, 645, 648, 653, 656, 676, 684, 787], "peak_find": [604, 616, 617, 624, 645, 648, 656], "quadric_peak_finder_2d": [604, 648, 656], "min_corr_scor": [604, 624, 645, 648, 656], "search_region": [604, 624, 645, 648, 656, 787], "template_overflow_bound": 604, "observed_bear": [604, 610, 612, 619, 620, 626, 631, 634, 637, 640, 648, 651, 679, 684, 687, 692, 693], "computed_bear": [604, 610, 619, 620, 626, 631, 637, 640, 648, 653, 679, 684, 687, 692, 693], "messag": [604, 610, 631, 637, 648, 665, 684, 918], "present": [604, 610, 631, 637, 648, 656, 684, 784, 786, 787, 808, 854, 870], "failur": [604, 610, 631, 637, 648, 684], "xcorrcenterfindingopt": 604, "dataclass": [604, 648, 656, 672, 674], "subsampl": [604, 605, 648, 650, 652, 656], "finder": [604, 616, 645, 648, 659], "overflow": [604, 645, 672, 674], "observable_typ": [604, 610, 619, 623, 626, 631, 637, 648, 676, 684, 692, 693, 699, 703, 704], "relnavobservablestyp": [604, 610, 619, 626, 631, 637, 648, 676, 684, 692, 693, 699, 703, 704], "center_find": [604, 619, 623, 637, 676, 684, 692, 693], "generates_templ": [604, 610, 619, 626, 631, 637, 648, 676, 684, 692, 693], "impact": 604, "relnav_handl": [604, 610, 619, 623, 631, 637, 648, 676, 684], "handler": [604, 610, 619, 623, 631, 637, 648, 676, 684, 692, 704], "regist": [604, 610, 619, 626, 631, 637, 648, 676, 684, 692, 693, 695, 699], "image_ind": [604, 610, 619, 631, 637, 648, 652, 676, 684, 692, 697, 698, 699, 700, 701, 702, 703, 706, 832], "include_target": [604, 606, 609, 610, 611, 614, 619, 620, 622, 631, 633, 636, 637, 640, 644, 648, 651, 655, 676, 679, 683, 684, 687, 691, 692, 693, 697, 698, 699, 700, 701, 702, 703, 706], "lowercas": [604, 619, 648, 676], "myestim": [604, 619, 648, 676], "isidentifi": [604, 619, 648, 676], "reloc": [605, 651], "accident": [608, 613, 621, 635, 642, 654, 681, 689, 842], "limb_scann": [610, 631], "extraction_method": [610, 612, 625, 627, 631, 634], "limbextractionmethod": [610, 631], "edge_detect": [610, 612, 615, 631, 634], "_rgi": [610, 631], "moment_algorithm": [610, 616, 626, 627, 631, 637, 638, 639, 640, 641, 642, 643, 644, 692, 693, 695, 702], "sight": [610, 617, 618, 625, 627, 631, 639, 648, 651, 656, 672, 674, 678, 686, 692, 693], "mod": [610, 713, 859], "observed_posit": [610, 619, 620, 626, 631, 679, 692, 693], "computed_posit": [610, 619, 620, 626, 631, 679, 692, 693], "limbscann": [610, 612, 625, 627, 631, 634], "limb_scan": [610, 612, 615, 631, 634], "relative_posit": [610, 623, 631, 632, 692, 693], "procedur": [612, 634], "extract_limb": [612, 616, 618, 634], "ever": [612, 634, 786], "number_of_scan_lin": [616, 617, 618, 625, 627], "51": 616, "scan_rang": [616, 618, 625, 627], "356194490192345": 616, "number_of_sample_point": [616, 625, 627], "parabolic_peak_finder_1d": 616, "image_interpol": [616, 617], "gross": [616, 648, 865], "limbmatch": [616, 625, 627, 695], "camera_temperatur": [617, 618], "scan_cent": [617, 618], "line_of_sight_sun": [617, 618], "predict_limb": 617, "fft_correlator_1d": 617, "adventur": 618, "estimator_interface_abc": [619, 620, 621, 622, 623], "planetari": [619, 823], "boil": [619, 860, 862], "mad": [619, 870], "relnavobserv": [619, 676], "ironi": [620, 633, 640, 679, 687], "me": [620, 633, 640, 679, 687, 896, 905], "relnavestim": [623, 676, 692, 693, 703, 704], "landmark": [604, 610, 619, 623, 626, 631, 637, 648, 656, 684, 692, 694, 695, 704, 743, 744, 745, 895, 902, 908], "te": 623, "opportunist": 623, "categori": [623, 625, 627, 784, 787], "highest": 624, "extrem": [624, 787, 867], "od": [624, 815, 822, 828, 843], "bidirect": [624, 645], "restrict": [624, 645, 787], "Of": [624, 645], "smallish": 624, "mistakenli": 624, "power": [625, 627, 629, 784, 835, 845, 854], "insensit": 625, "unlik": 625, "t_m": 625, "c_p": 625, "diag": 625, "quit": [625, 627], "tweak": [625, 627], "letter": [626, 692], "underscor": [626, 692], "_estim": [626, 692, 693, 695, 699, 704], "_detail": [626, 692, 693, 695, 696], "investig": [626, 692, 695], "necessarili": [626, 692], "context": [626, 692, 869, 912, 915], "freeform": [626, 692], "flesh": [626, 692], "sister": 627, "pnp": [627, 645, 648, 651, 652, 656], "triangul": [627, 629], "sensit": 627, "exceed": 627, "idea": [627, 647, 786], "pole": [627, 739, 742], "spin": 627, "convex": 627, "recov": 627, "discard_outli": [627, 631], "subtend": 628, "use_apparent_area": [628, 637, 692], "segment_imag": [628, 637, 640, 692], "moder": 628, "search_dist": [628, 630, 637, 658, 684], "ambigu": [628, 637, 752], "margin": [628, 637, 692], "safeti": [628, 637, 692], "apparent_area_margin_of_safeti": [628, 637, 692], "shrink": [628, 637], "apply_phase_correct": [628, 630, 637, 684], "phase_correction_typ": [628, 630, 637, 639, 676, 678, 684, 686], "reliabl": [629, 789, 793, 800], "recogn": [629, 713, 738], "oldest": 629, "crater": 629, "rock": 629, "stereophotoclinometri": [629, 744, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911], "dr": 629, "robert": 629, "gaskel": 629, "surfacefeaturenavig": [629, 646, 647, 656, 658, 659, 665, 672, 695], "featurecatalogu": [629, 645, 647, 648, 650, 651, 665, 672, 697, 745], "visiblefeaturefind": [629, 645, 647, 651, 659, 674], "hint": 629, "exce": [630, 665], "earli": 630, "approach": [630, 752, 786, 787], "celnav": 630, "0001": 631, "create_gif": [631, 633], "gif_fil": 631, "limb_match_summary_": 631, "gif": [631, 633, 635, 787], "ab": 631, "horizon": 631, "rid": [631, 809], "target_object": 632, "center_direct": 632, "limb_points_imag": 632, "limb_points_camera": 632, "scan_vector": 632, "d_i": 632, "pair_limb": 633, "fashion": 633, "phasecorrectiontyp": [637, 676, 684], "mark": [637, 665, 752], "compute_phase_correct": [637, 676], "closer": [637, 639, 678, 684, 686], "mcewen": [637, 643, 676, 682, 684, 690], "line_of_sight_sun_imag": [639, 643, 678, 682, 686, 690], "akin": [639, 678, 686], "receiv": [639, 665, 678, 686, 787], "simple_phase_correct": [639, 676, 678, 686], "rastered_phase_correct": [639, 676, 678, 686], "parallelogram": [641, 680, 688], "inaccur": [641, 680, 688], "get_apparent_diamet": [643, 682, 690, 692], "phase_angl": [643, 682, 690, 692], "aanda": [643, 682, 690], "aa": [643, 682, 690], "2004": [643, 682, 690], "aah4644": [643, 682, 690], "contribut": 645, "stronger": 645, "trajectori": 645, "think": [645, 695], "feature_find": [645, 651, 659], "sfn_correl": [645, 648, 651], "vers": 645, "conciev": 645, "off_boresight_angle_maximum": [645, 672, 674], "boresight": [645, 672, 674, 902], "gsd_scale": [645, 672, 674], "permiss": 645, "reflectance_angle_maximum": [645, 672, 674], "incident_angle_maximum": [645, 672, 674], "percent_in_fov": [645, 672, 674], "percentag": [645, 647, 659, 672, 674], "feature_list": [645, 672, 674], "wast": 645, "mistaken": 645, "solver": [645, 648, 651, 656], "run_pnp_solv": [645, 648, 656], "pnp_ransac_iter": [645, 648, 656], "second_search_region": [645, 648, 656], "measurement_sigma": [645, 648, 656], "position_sigma": [645, 648, 656], "attitude_sigma": [645, 648, 656], "state_sigma": [645, 648, 656], "max_lsq_iter": [645, 648, 656], "lsq_relative_error_toler": [645, 648, 656], "lsq_relative_update_toler": [645, 648, 656], "cf_result": [645, 648, 656], "cf_index": [645, 648, 656], "second_search_dist": 645, "_sigma": 645, "plai": [645, 787, 867], "role": 645, "surface_featur": [645, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 745], "in_fil": [645, 753], "fc": [645, 784, 785], "fft": 646, "seach": 646, "worthi": 647, "surfacefeatur": [647, 659, 664, 694, 745], "dem": [647, 659, 661, 663, 664, 665, 669, 670, 671], "despit": 647, "huge": 647, "infeas": [647, 665], "modern": [647, 665, 784, 908], "overcom": 647, "referenc": 647, "footprint": [647, 665, 668], "feasibl": 647, "hundr": [647, 830], "eventu": 647, "ultim": [647, 665], "defeat": 647, "mechan": [647, 659, 665], "modest": 647, "bypass": [647, 692], "brittl": 647, "update_feature_path": 647, "update_path": [647, 664, 670], "consult": [647, 784], "insight": 647, "sfn_class": [648, 649, 650, 651, 652, 653, 654, 655, 656, 657], "08": [648, 656], "show_templ": [648, 656], "thought": 648, "surfacefeaturenavigationopt": [648, 649], "blank": [648, 656, 805], "live": [648, 656], "visible_featur": [648, 653], "ones": [649, 673, 675, 692, 743, 834], "feature_catalogu": [650, 672, 745], "feature_ind": 650, "degener": 651, "send": 651, "seed": 651, "pnp_solver": 651, "simpler": [652, 692], "fickl": 652, "noisi": 652, "greatest": 652, "prevent": [652, 789], "outlandish": 652, "min_": 652, "sum_i": 652, "lowest": 652, "apply_opt": [656, 674], "eas": [656, 674, 786], "space_mask": 658, "center_predict": 658, "overlaid": 658, "logic": 658, "shot": 658, "notion": 658, "intersect_mask": 658, "52": 658, "postiv": 658, "map_info": 659, "mini": 659, "confusingli": 659, "meant": 659, "include_featur": [659, 662], "feature_norm": [659, 661], "feature_loc": [659, 661, 663], "feature_bound": [659, 661, 663], "lazi": [659, 662, 664, 665, 671], "unload": [659, 664, 665, 668], "stale_count_unload_threshold": [659, 665, 668], "memory_percent_unload_threshold": [659, 665, 668], "not_found": [659, 665], "disabl": [648, 659], "resourc": [659, 742, 845], "fight": 659, "total_result": 660, "shrunk": 660, "shortest": 662, "smartli": [662, 708], "new_path": [664, 671], "director": 664, "join": 664, "body_fixed_cent": 665, "ground_sample_dist": 665, "export": [665, 745, 803], "orbit": 665, "tile": [665, 745], "ingest": [665, 693, 739, 830, 833, 838, 840, 845, 902], "maplet": [665, 743, 744, 745, 892, 905], "allevi": 665, "biggest": 665, "hog": 665, "invis": 665, "findvisiblefeatur": 665, "On": 665, "drive": [665, 867], "older": 665, "sweet": 665, "stress": 665, "somehow": 665, "compromis": 665, "slight": 665, "delai": 665, "n_not_found": [666, 668], "counter": [666, 668, 789, 801, 802], "visualfeaturefind": [666, 668], "ioerror": 667, "increment": 668, "poster": 668, "new_fil": 670, "pointer": 670, "update_fil": 671, "70": [672, 674], "gsd": [672, 745], "visiblefeaturefinderopt": [672, 673], "throw": [672, 674, 692, 752, 784, 786], "tor": 674, "newli": 675, "useless": 675, "compute_line_of_sight_sun_imag": 676, "reader": 684, "Will": 684, "plenti": 692, "accommod": 692, "architectur": 692, "boilerpl": 692, "laid": [692, 704], "decor": [692, 693, 704], "grab": 692, "opportun": [692, 695], "carri": 692, "momentcenterfindingsimpl": 692, "simple_mo": 692, "search_rang": 692, "prep": 692, "fudg": 692, "scope": [692, 784, 835], "address": [692, 789], "image_processing_original_segment_area": 692, "minimum_area": 692, "target_gener": 692, "apparent_diamet": 692, "apparent_radiu": 692, "termin": [692, 785, 830, 834], "predicted_area": 692, "segment_stat": 692, "segment_centroid": 692, "closest_ind": 692, "closest_dist": 692, "segment_ind": 692, "closet_dist": 692, "tenth": [692, 892, 908], "fudge_factor": 692, "cc_stat_area": 692, "top_left": 692, "cc_stat_top": 692, "cc_stat_left": 692, "bottom_right": 692, "ceil": 692, "cc_stat_height": 692, "cc_stat_width": 692, "use_imag": 692, "keep_imag": 692, "simple_moments_estim": 692, "simple_moment_kwarg": 692, "simple_moment_detail": 692, "Or": [692, 867], "default_estim": [692, 698, 700, 701, 702, 706], "fanci": 692, "setattr": 692, "module_nam": 693, "cross_correlation_estim": [693, 787], "decis": [693, 697], "input_fil": 693, "target_posit": 693, "target_orient": 693, "sun_posit": [693, 786, 787], "sun_orient": [693, 786, 787], "itokawa": [693, 735, 736], "my_relnav": 693, "center_finding_result": [693, 695, 696, 698, 706], "relative_position_result": [693, 695, 696, 700, 701, 702], "landmark_result": [693, 695, 696], "limb_result": [693, 695, 696, 700, 701], "saved_templ": [693, 695, 696, 698], "mynewtechniqu": 693, "my_new_techniqu": 693, "statu": 693, "taget_obj": 693, "my_new_technique_estim": 693, "registr": [693, 704], "relnav_estim": [693, 695, 704], "u3": 694, "m8": 694, "u64": 694, "clearli": [619, 694], "3dp": 694, "cof": [694, 739], "lim": 694, "lmk": [694, 892, 893], "con": 694, "4g": 694, "const": 694, "save_templ": [695, 698, 787], "cross_correlation_kwarg": 695, "unresolved_kwarg": 695, "ellipse_matching_kwarg": 695, "limb_matching_kwarg": [695, 787], "moment_algorithm_kwarg": 695, "sfn_kwarg": 695, "xcorrcenterfind": [695, 787], "ellipsematch": 695, "momentalgorithm": 695, "unresolvedcenterfind": 695, "mission": [695, 784, 786, 787], "technique_nam": [695, 704], "technique_inst": 695, "cross_correlation_detail": [695, 698], "worker_nam": 699, "worker": [699, 703], "partialmethod": 699, "process_imag": 699, "ellipse_matching_detail": [695, 700], "limb_matching_detail": [695, 701], "moment_algorithm_detail": [695, 702], "technique_class": 704, "mynewclass": 704, "standalon": 704, "outlin": [704, 788], "rotation_a2b": 708, "rotation_b2c": 708, "rotation_a2c": 708, "07106781e": 708, "32978028e": 708, "enforc": [708, 740, 816, 823], "q_vector": 708, "q_scalar": 708, "mutabl": [709, 830], "negat": [711, 715, 840], "quaternion_invers": 711, "inplac": [712, 886], "_o": 712, "hamiltonian": [712, 716], "quaternion_multipl": 712, "xr": 713, "zr": 713, "rot_x": 713, "rot_i": 713, "rot_z": 713, "quaternion0": [714, 728], "quaternion1": [714, 728], "time0": [714, 728], "time1": [714, 728], "_1p": 714, "interv": [714, 786], "invert": 715, "quaternion_1_in": 716, "quaternion_2_in": 716, "q_from_a_to_c": 716, "q_from_b_to_c": 716, "q_from_a_to_b": 716, "v2": 716, "v1": 716, "4xn": 716, "quaternion_1": 716, "quaternion_2": 716, "quaternion_to_rotmat": 717, "rotmat_to_eul": 717, "acord": 717, "_v": [718, 719, 724], "2q_": 718, "stack": [718, 723], "0th": 718, "1st": 718, "33333333": 718, "hand": [720, 721, 722], "_x": 720, "41614684": [720, 721, 722], "90929743": [720, 721, 722], "87758256": [720, 721, 722], "47942554": [720, 721, 722], "_y": 721, "_z": 722, "rotation_matrix": 724, "copysign": 724, "t_": 724, "33": 724, "32": 724, "23": [724, 882, 883, 884], "31": 724, "21": 724, "sign": [724, 895], "rot_vec": 725, "omega": 728, "3470": 729, "1260": 729, "950": 729, "8e": 729, "1944": 729, "2592": 729, "07957747154594767": 730, "simul": [733, 734, 735], "frome": 733, "pure": [735, 786], "deliv": 737, "nohup": [737, 738, 745], "ucac_path": 737, "stamp": 738, "usag": 738, "shape_info": [739, 742], "txt": [739, 742, 906, 912, 915], "understood": 739, "icq": [739, 904], "dsk": [739, 785], "somedai": 739, "configur": [739, 741], "scrip": 739, "dskexp": 739, "naif": [739, 784, 785, 786, 787, 788, 823, 843, 867, 875, 876, 879, 882], "websit": 739, "hack": 739, "conv": 739, "gm": [739, 742, 816, 823], "tpc": [739, 742, 784, 785], "na": 739, "18": [739, 785], "89e": 739, "fix_offset": 739, "memory_effici": [739, 743, 745], "compute_statist": 739, "mosaic": 741, "fun": 741, "target_object_fil": 741, "w": [741, 912, 915], "meta_kernel": [741, 744, 784, 787], "mosaic_scal": 741, "sub_grid_check": 741, "target_camera": 741, "auto": 741, "png": [741, 863, 864], "crop_mosa": 741, "allow_rot": 741, "398600": 742, "4418": 742, "info": 742, "catalog": [743, 745], "output_dir": 743, "spc_map": 743, "autoregist": [744, 902], "regard": 744, "dir": 744, "sumfil": [744, 908, 909], "tframe": 744, "lmk_displai": 744, "tm": [744, 784, 787, 867], "bennu": 744, "iau_bennu": 744, "featurecatalgou": 745, "uniformli": 745, "lidar": 745, "reduct": 745, "unhind": 745, "feature_output": 745, "catalogue_output": 745, "shape_radiu": 745, "stuff": [745, 784, 899], "meter": [745, 816], "75": [745, 787], "201": 745, "250": 745, "faction": 745, "seamless": 746, "stellarclass": 746, "min_tj": 751, "sum_iw_i": 751, "eigenvalu": 751, "eigenvector": 751, "tailor": [751, 786], "consensu": 752, "anomali": 752, "astrometri": 752, "remot": 752, "lis_fil": 752, "my_sid": 753, "residual_histogram": [754, 784], "plot_residuals_vs_magnitud": [754, 784], "review_outli": [754, 784], "outlier_numb": 778, "via": 778, "review_residu": 778, "question": 778, "individual_imag": [779, 781], "span": 779, "flattened_imag": 782, "log_scal": [782, 864], "marker": [782, 783], "drawn": [782, 783], "outliercallback": 783, "entitl": 784, "fc2_calibr": 784, "favorit": [784, 786, 787], "glob": [784, 787], "annoi": [784, 787], "manner": 784, "plot_distortion_map": 784, "truth": [784, 787], "dawnfccamera": [784, 786, 787], "fc2_attitud": [784, 786, 787], "pd": 784, "pvl": [784, 786], "__name__": [784, 785, 787], "__main__": [784, 785, 787], "filterwarn": [784, 787], "userwarn": [784, 787], "deprecationwarn": [784, 787], "dawn_fc_sis_20160815": 784, "sbnarchiv": [784, 785], "psi": [784, 785, 868], "pds3": [784, 785], "dwnxfc2_1a": [784, 785], "150": 784, "14e": 784, "focal_length_pixel": 784, "nrow": 784, "ncol": 784, "skill": 784, "later": [784, 786], "kpl": 784, "mk": 784, "begindata": 784, "path_valu": 784, "path_symbol": 784, "kernels_to_load": [784, 830], "lsk": [784, 785], "naif0012": [784, 785, 874], "tl": [784, 785, 874, 885], "pck": [784, 785], "pck00008": [784, 785], "spk": [784, 785], "de432": [784, 785], "bsp": [784, 785], "sb_vesta_ssd_120716": [784, 785], "dawn_vesta_v02": [784, 785], "fk": [784, 785], "dawn_v14": [784, 785], "tf": [784, 785], "dawn_vesta_v00": [784, 785], "sclk": [784, 785], "dawn_203_sclkscet": [784, 785], "00090": [784, 785], "tsc": [784, 785], "dawn_rec_070927": [784, 785], "070930_081218_v1": [784, 785], "dawn_rec_070930": [784, 785], "071201_081218_v1": [784, 785], "dawn_rec_071201": [784, 785], "080205_081218_v1": [784, 785], "dawn_rec_100208": [784, 785], "100316_100323_v1": [784, 785], "dawn_rec_100316": [784, 785], "100413_100422_v1": [784, 785], "dawn_rec_100413": [784, 785], "100622_100830_v1": [784, 785], "dawn_rec_100622": [784, 785], "100824_100830_v1": [784, 785], "dawn_rec_100824": [784, 785], "101130_101202_v1": [784, 785], "dawn_rec_101130": [784, 785], "110201_110201_v1": [784, 785], "110419_pred_110419": [784, 785], "110502_110420_v1": [784, 785], "110606_pred_110606": [784, 785], "110628_110609_v1": [784, 785], "dawn_rec_110201": [784, 785], "110328_110328_v1": [784, 785], "dawn_rec_110328": [784, 785], "110419_110419_v1": [784, 785], "110419_110420_v1": [784, 785], "dawn_rec_110416": [784, 785], "110802_110913_v1": [784, 785], "dawn_rec_110802": [784, 785], "110831_110922_v1": [784, 785], "dawn_rec_110831": [784, 785], "110928_111221_v1": [784, 785], "dawn_rec_110928": [784, 785], "111102_111221_v1": [784, 785], "111102_120615_v1": [784, 785], "dawn_rec_111102": [784, 785], "111210_120618_v1": [784, 785], "dawn_rec_111211": [784, 785], "120501_120620_v1": [784, 785], "dawn_fc_v3": [784, 785], "bc": [784, 785], "dawn_sc_071203_071209": [784, 785], "dawn_sc_071210_071216": [784, 785], "dawn_sc_071217_071223": [784, 785], "dawn_sc_071224_071230": [784, 785], "dawn_sc_071231_080106": [784, 785], "dawn_sc_100705_100711": [784, 785], "dawn_sc_100712_100718": [784, 785], "dawn_sc_100719_100725": [784, 785], "dawn_sc_100726_100801": [784, 785], "dawn_sc_110502_110508": [784, 785], "dawn_sc_110509_110515": [784, 785], "dawn_sc_110516_110522": [784, 785], "dawn_sc_110523_110529": [784, 785], "dawn_sc_110530_110605": [784, 785], "dawn_sc_110606_110612": [784, 785], "dawn_sc_110613_110619": [784, 785], "dawn_sc_110620_110626": [784, 785], "dawn_sc_110627_110703": [784, 785], "dawn_sc_110704_110710": [784, 785], "dawn_sc_110711_110717": [784, 785], "dawn_sc_110718_110724": [784, 785], "dawn_sc_110725_110731": [784, 785], "dawn_sc_110801_110807": [784, 785], "dawn_sc_110808_110814": [784, 785], "dawn_sc_110815_110821": [784, 785], "dawn_sc_110822_110828": [784, 785], "dawn_sc_110829_110904": [784, 785], "begintext": 784, "furnsh": [784, 787, 816, 823, 867], "took": 784, "bin_imag": 784, "image_fil": [784, 808], "groupd": 784, "filepath": 784, "lbl": [784, 785, 786], "image_acquire_mod": 784, "exposure_dur": [784, 786], "uniq_exposur": 784, "expo": 784, "batch": [648, 784, 902], "exp": 784, "binned_imag": 784, "earlier": 784, "journei": 784, "twice": [784, 840, 842], "80": 784, "comment": [784, 787], "Be": 784, "repr": 784, "indentif": 784, "dawn_camera_model": [784, 787], "kclear": 784, "download_data": 785, "bs4": [785, 786], "beautifulsoup": 785, "ftplib": 785, "download_imag": 785, "web_loc": 785, "20071203_perform": 785, "20100720_chkout_virgeomc": 785, "dwnvfc2_1a": 785, "2011123_approach": 785, "2011123_opnav_001": [785, 787], "2011165_opnav_007": [785, 787], "2011198_opnav_017": [785, 787], "2011218_opnav_023": 785, "local_loc": 785, "cal1": 785, "cal2": 785, "filt": 785, "f1": 785, "addr": 785, "dest": 785, "soup": 785, "local_dir": 785, "mkdir": [785, 786], "exist_ok": 785, "parent": 785, "find_al": 785, "href": 785, "local_fil": 785, "stream": 785, "status_cod": 785, "wb": 785, "chunk": 785, "3f": 785, "flush": [785, 795, 912, 915], "download_spic": 785, "login": 785, "pub": [785, 867, 875, 876, 879], "old_vers": 785, "vesta_gaskell_512_110825": 785, "joinpath": 785, "ofil": 785, "retrbinari": 785, "retr": 785, "shape_model": [785, 787], "vesta": [785, 786, 787], "dawn_vesta_02": 785, "contact": 785, "andrew": 785, "liouni": 785, "agnost": 786, "spint": [786, 867], "support_typ": 786, "spiceyerror": [786, 867], "person": 786, "loader": 786, "behaviour": 786, "incred": 786, "dawnfcimag": 786, "ext": 786, "splitext": 786, "lbl_file": 786, "lfile": 786, "escap": 786, "analyst": 786, "start_tim": 786, "tzinfo": 786, "t_lens_barrel": 786, "273": 786, "kelvin": 786, "frmame": 786, "target_nam": [786, 902], "instrument_id": 786, "dawn_fc2": 786, "dawn_fc1": 786, "ephemeri": [786, 814, 817, 818, 820, 823, 824, 825, 826, 867, 873, 877, 878, 880, 881, 883, 884, 885, 886, 902], "et": [786, 808, 867, 882, 883, 884, 886, 902], "str2et": [786, 867, 885, 886], "unabl": 786, "sc": [786, 817, 902], "spkezr": [786, 867, 879, 880, 881, 884], "mid": [786, 808], "shortli": 786, "properli": 786, "dispos": 786, "attent": 786, "unmodifi": 786, "wrt": 786, "spiceposit": [786, 867], "fc1_attitud": 786, "spiceorient": [786, 867], "dawn_attitud": 786, "dawn_spacecraft": 786, "dawn_stat": 786, "spicest": [786, 867], "dawn_posit": 786, "vesta_attitud": [786, 787], "vesta_fix": 786, "vesta_st": 786, "vesta_posit": [786, 787], "easiest": 786, "setuptool": 786, "py_modul": 786, "install_requir": 786, "nice": [695, 786, 788, 867], "limb_summary_gif": 787, "template_summary_gif": 787, "show_center_finding_residu": 787, "campaign": 787, "sequenti": 787, "got": 787, "pop": 787, "tree_fil": 787, "vesta_shap": 787, "vesta_obj": 787, "sun_obj": 787, "opnav_scen": 787, "behav": [787, 788], "9x9": 787, "noisei": 787, "xcorr_kwarg": 787, "ellipse_matching_estim": 787, "limb_matching_estim": 787, "moment_algorithm_estim": 787, "unresolved_estim": 787, "resiud": 787, "nonetyp": 787, "upgrad": 787, "layout": 788, "grasp": 788, "blue": 788, "yellow": 788, "intertwin": 788, "convei": [619, 788], "cook": 788, "toolbox": 788, "ufo": [789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845, 850, 851, 852, 853, 854, 855, 856, 857, 858, 864], "clearable_queu": [789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "portabl": 789, "multiprocess": [789, 793, 800, 801], "queue": [789, 791, 793, 800], "multithread": 789, "semant": 789, "qsize": 789, "sem_getvalu": 789, "synchron": [789, 801], "borrow": 789, "kera": 789, "team": 789, "autokera": 789, "368": 789, "stackoverflow": [789, 915], "36018632": 789, "3431189": [789, 915], "holder": 795, "item": 799, "lock": 801, "thread": 801, "ctype": 801, "atom": 801, "modif": 801, "eli": 801, "benderski": 801, "blog": 801, "thegreenplac": 801, "2012": [801, 874], "dn_offset": 803, "image_information_funct": 803, "magnitude_funct": [803, 808], "update_attitude_kwarg": [803, 811], "find_ufos_kwarg": [803, 806], "unmatched_star_threshold": [803, 807], "hot_pixel_threshold": [803, 807], "create_hashed_index": 803, "cooper": [803, 835, 845], "update_attitud": [803, 806, 842, 860], "find_ufo": [803, 808, 842, 860], "package_result": [803, 806, 807, 842, 860], "remove_dupl": [803, 842, 860], "tack": 803, "quantiz": 803, "x_raw": [803, 807, 808, 862], "y_raw": [803, 807, 808, 862], "hot": [803, 807, 808, 859], "image_file_": 803, "invalid_imag": [804, 808], "summed_dn": [804, 808], "fit_chi2_valu": [804, 808], "summed_dn_uncertainti": [804, 808], "summed_dn_count": [804, 808], "max_dn": [804, 808], "integrated_psf": [804, 808], "declination_sigma": [804, 808], "x_raw_sigma": [804, 808], "y_raw_sigma": [804, 808], "occult": [804, 808], "saturation_dist": [804, 808], "trail_length": [804, 808], "trail_principal_angl": [804, 808], "star_summed_dn": [804, 808], "star_observed_magnitud": [804, 808], "star_fit_chi2_valu": [804, 808], "star_summed_dn_uncertainti": [804, 808], "star_satur": [804, 808], "star_summed_dn_count": [804, 808], "star_max_dn": [804, 808], "star_bear": [804, 808], "star_integrated_psf": [804, 808], "star_ra_sigma": [804, 808], "star_declination_sigma": [804, 808], "star_x_raw_sigma": [804, 808], "star_y_raw_sigma": [804, 808], "star_occult": [804, 808], "star_saturation_dist": [804, 808], "detection_data_fram": [805, 807, 808, 860, 862, 864], "unidentifi": [806, 842, 848], "unmatched_": 806, "bring": [807, 830, 864], "quality_cod": [807, 808, 809], "integrated_psf_uncertainti": 808, "star_integrated_psf_uncertainti": 808, "mid_exposure_utc": 808, "mid_exposure_et": 808, "peak_dn": 808, "maxim": 808, "summed_dn_sigma": 808, "n_pix_sum": 808, "integrated_psf_sigma": 808, "psf_fit_qual": 808, "qualiti": [808, 844, 859, 863, 864], "chi": 808, "is_satur": 808, "trail": 808, "identify_hot_pixels_and_unmatched_star": [808, 859, 860], "x_inert2cam": 808, "y_inert2cam": 808, "z_inert2cam": 808, "s_inert2cam": 808, "compute_dynam": 813, "rk45": [815, 822, 828], "center_bodi": [816, 823], "process_nois": [816, 823, 835], "other_bodi": [816, 823], "gravity_paramet": [816, 823], "load_data": [816, 823], "minimum_time_step": [816, 823], "radiat": [816, 819, 843], "pressur": [816, 819, 843], "spicegravitydynam": [816, 843], "cannonbal": [816, 819, 843], "sr": 816, "c_ra": 816, "phi": 816, "cmd_": 816, "c_r": 816, "au": [816, 817, 819], "kw": 816, "d_": 816, "fidel": 816, "cram": [816, 818, 820, 858], "arithmet": 816, "6x6": [648, 816], "graviti": [816, 817, 823, 824, 843], "sec": [816, 823, 902], "datafil": [816, 823], "et_tim": [817, 820, 824, 826], "radial_distance_cb": [817, 820, 824, 826], "position_sc_to_bodi": [817, 820, 824, 826], "radial_distance_sc_to_bodi": [817, 820, 824, 826], "direction_sun_to_sc": [817, 819], "distance_sun_to_sc": [817, 819], "56": 818, "return_intermediari": [820, 826], "cb": [820, 826], "intermedi": [820, 826, 859], "elsewher": [820, 826], "dposit": [820, 826], "dt": [820, 826], "dveloc": [820, 826], "dcram": 820, "position_cp_to_bodi": [820, 826], "radial_distance_cb_to_bodi": [820, 826], "sun_to_sc_posit": 820, "sun_to_sc_dist": 820, "learn": 823, "7x7": 823, "42": 825, "36": 825, "default_factori": 829, "ekf_track": [830, 831, 832, 833, 834, 845, 848], "search_distance_funct": [830, 859], "observation_tre": 830, "observation_id": 830, "initial_euclidean_threshold": 830, "maximum_image_timedelta": 830, "3600": 830, "maximum_paths_per_imag": 830, "maximum_paths_tot": 830, "maximum_forward_imag": 830, "maximum_track_length": 830, "maximum_mahalanobis_distance_squar": 830, "expected_convergence_numb": 830, "reduced_paths_forward_per_imag": 830, "minimum_number_of_measur": 830, "maximum_residual_standard_devi": 830, "maximum_time_out": 830, "maximum_tracking_time_per_imag": 830, "dens": 830, "confirmed_filt": [830, 862], "confirmed_particl": 830, "confirmed_standard_devi": [830, 844, 862], "extendedkalmanfilt": [830, 831, 845, 847, 850, 859], "artifici": 830, "mahalanobi": 830, "stringent": 830, "gone": 830, "subprocess": 830, "pool": [830, 834], "subsist": 830, "hashabl": [830, 850, 854], "variant": 830, "confirm": 830, "ekfs_to_filt": 831, "number_of_ekf": 831, "movement": 832, "uuid": 833, "std": 833, "teardown": 834, "extended_kalman_filt": [835, 836, 837, 838, 839, 840, 843], "initial_measur": [835, 837], "kalman": [835, 844, 845], "process_measur": [835, 840], "rich": 835, "histori": [836, 837, 838, 840], "delet": 837, "pre_update_st": 838, "pre_update_predicted_measur": 838, "backwards_index": 838, "insert": 838, "maximum_sigma_upd": 840, "collaps": 840, "long_residu": 840, "long_state_histori": 840, "state_histori": 840, "solradandgravitydynam": [843, 858], "extran": 844, "confirmed_track": 844, "finicki": 845, "ekftrack": 845, "osiri": 847, "rex": 847, "show_detect": [849, 863], "observer_loc": [850, 854, 857], "linearli": [852, 856], "observed_measur": 854, "initial_rang": 858, "initial_cram": 858, "range_vari": 858, "measurement_covariance_multipli": 858, "initial_velocity_vari": 858, "initial_cram_vari": 858, "minimum_initial_radiu": 858, "ufo_class": [859, 860, 861, 862, 863], "detector_kwarg": 859, "tracker_kwarg": 859, "initial_image_processing_kwarg": 859, "initial_star_id_kwarg": 859, "tracking_quality_code_minimum": [859, 862], "clear_detector_before_track": 859, "visual_inspection_quality_code_minimum": [859, 863], "detection_result": 861, "tracking_result": 861, "save_fram": [863, 864], "frame_output": [863, 864], "overlai": 863, "arrow": 864, "interfa": 867, "perfer": 867, "parti": 867, "readthedoc": 867, "io": [867, 912, 915], "preset": 867, "toolkit_doc": [867, 875, 876, 879], "spicelib": [867, 875, 876, 879], "suppos": 867, "earth": 867, "po": 867, "spkpo": [867, 876, 877, 878, 883, 884], "moon_pos_earth": 867, "leap_second": 867, "datetime_to_et": [867, 877, 878, 880, 881], "leap": [867, 874, 885, 887], "apropri": 867, "create_callable_posit": [867, 876], "create_callable_st": [867, 879], "pxform": [867, 875, 882], "anonym": 867, "moon_pos_earth_et": 867, "spc_wiki": 868, "homepag": 868, "terminologi": 869, "pipe": 869, "stderr": [869, 912, 913, 914, 915, 916, 917, 918], "doublete": 869, "outlier_identifi": 870, "widetild": 870, "4826": 870, "sigma_": 870, "10000": 870, "NOT": 870, "random_combin": 871, "combo_length": 871, "number_of_combo": 871, "1972": 874, "01t00": 874, "000000": 874, "1973": 874, "1974": 874, "1975": 874, "1976": 874, "1977": 874, "1978": 874, "1980": 874, "1981": 874, "1982": 874, "1983": 874, "1985": 874, "1988": 874, "1990": 874, "1991": 874, "1992": 874, "1993": 874, "1994": 874, "1996": 874, "1997": 874, "1999": 874, "2006": 874, "2009": 874, "2015": 874, "datetime64": [874, 885], "from_fram": [875, 882], "to_fram": [875, 882], "TO": 875, "reference_fram": [876, 877, 878, 879, 880, 881], "light_tim": [876, 879], "position_light_tim": 876, "targ": [876, 879, 883, 884], "j200": [876, 879], "ref": [876, 879, 883, 884], "cn": [876, 879], "abcorr": [876, 879, 883, 884], "ob": [876, 879, 883, 884], "tdb": [877, 878, 880, 881, 887], "state_light_tim": 879, "xlt": 879, "transmiss": 879, "xcn": 879, "rot": 882, "emul": 885, "hardcod": 885, "datetimeindex": 885, "func": 886, "file_nam": [889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910], "maximum_illumin": 889, "integer_s": 889, "endia": 889, "discern": 889, "255": 889, "65535": 889, "imagefil": [889, 890], "imagenam": [889, 890, 899, 900, 908, 909], "foolproof": 889, "infer": 889, "endian": 889, "sigkm": 892, "rmslmk": 892, "vlm": [892, 902], "rot_map2bodi": 892, "sigma_lmk": 892, "fifth": [892, 908], "rot_map2bod": 892, "ux": 892, "ui": 892, "uz": 892, "vstack": [892, 899, 908], "simga_lmk": 892, "lmkfile": 893, "mapletnam": [893, 897], "position_objmap": 895, "rotation_maplet2bodi": 895, "hscale": 895, "storag": 895, "16bit": 895, "unsign": 895, "11th": 895, "12th": 895, "32bit": 895, "7th": 895, "10th": 895, "28th": 895, "29th": 895, "55th": 895, "16byte": 895, "56th": 895, "mapfil": 897, "image_nam": [899, 908, 911], "position_camera_to_target": [899, 908], "rotation_target_fixed_to_camera": [899, 908], "sig_pos_camera_to_target": [899, 908], "sig_rot_target_fixed_to_camera": [899, 908], "nom": [899, 900], "member": [899, 908], "clarif": [899, 908], "scobj": [899, 908], "cx": [899, 908], "cz": [899, 908], "sigma_vso": [899, 908], "sigma_ptg": [899, 908], "spc_image_id": 902, "orig_image_nam": 902, "camera_nam": 902, "ephemeris_tim": 902, "titv_mat": 902, "tpmi_mat": 902, "sf_pos_sc2obj": 902, "sf_camera_ra": 902, "sf_camera_dec": 902, "sf_camera_twist": 902, "pos_sigma": 902, "pointing_sigma": 902, "twist_sigma": 902, "nom_pos_sc2obj": 902, "nom_camera_ra": 902, "nom_camera_dec": 902, "nom_camera_twist": 902, "sun_dir": 902, "lmk_body_fixed_vec": 902, "lmk_body_fixed_vec_sigma": 902, "lmk_observed_pixlin": 902, "lmk_pred_pixlin": 902, "lmk_jacobian": 902, "kernel_list": 902, "summaris": 902, "twist": 902, "mmfl": [902, 908], "nln": [902, 908], "npx": [902, 908], "ctr": [902, 908], "titv": 902, "tpmi": 902, "litho": [902, 911], "dc": 902, "tw": 902, "sig": 902, "pnt": 902, "ln": 902, "dpx": 902, "implicitli": 904, "quadrilater": 904, "offici": 904, "shapefil": 906, "vertici": 906, "num_col": 908, "num_row": 908, "min_illum": 908, "max_illum": 908, "principle_point": 908, "direction_target_to_sun": 908, "near_dist_param": 908, "wiht": 908, "millimet": 908, "obsolet": 908, "flown": 908, "NEAR": 908, "limb_fit": 908, "thrsh": 908, "princ_point": 908, "eighth": 908, "sz": 908, "ninth": 908, "discard": 908, "weirdli": 908, "deprec": 908, "eleventh": 908, "twelfth": 908, "thirteenth": 908, "lithos_fil": 911, "tee": [912, 913, 914], "buff": [912, 915], "sy": 912, "mylog": [912, 915], "taco": [912, 915], "readlin": [912, 915], "buffer": [912, 915], "redirect": [915, 917, 918], "teed": 915, "myte": 915, "24583265": 915, "qualnam": [76, 111, 140, 194, 201, 218, 473, 615, 623, 675, 914], "boundari": [76, 111, 140, 194, 201, 218, 473, 615, 623, 675, 914], "giant_publ": [119, 132, 141, 166, 483, 488, 491], "results_dtyp": [648, 695], "unresolved_detail": 695, "sfn_detail": 695, "limbs_camera": [610, 631], "worst": 637, "max_nfev": 648, "least_squar": 648, "ftol": 648, "lie": 648, "n_imag": 648, "n_feature_catalogu": 648, "admit": 648, "unsuit": 648}, "objects": {"giant": [[174, 0, 0, "-", "calibration"], [175, 0, 0, "-", "camera"], [176, 0, 0, "-", "camera_models"], [182, 0, 0, "-", "catalogues"], [183, 0, 0, "-", "image"], [184, 0, 0, "-", "image_processing"], [185, 0, 0, "-", "opnav_class"], [186, 0, 0, "-", "point_spread_functions"], [187, 0, 0, "-", "ray_tracer"], [188, 0, 0, "-", "relative_opnav"], [189, 0, 0, "-", "rotations"], [190, 0, 0, "-", "scripts"], [191, 0, 0, "-", "stellar_opnav"], [192, 0, 0, "-", "ufo"], [193, 0, 0, "-", "utilities"]], "giant.calibration": [[174, 1, 1, "", "Calibration"], [174, 1, 1, "", "CalibrationEstimator"], [174, 1, 1, "", "DavenportQMethod"], [174, 1, 1, "", "IterativeNonlinearLSTSQ"], [174, 1, 1, "", "LMAEstimator"], [174, 1, 1, "", "StarID"], [174, 1, 1, "", "StaticAlignmentEstimator"], [174, 1, 1, "", "TemperatureDependentAlignmentEstimator"], [70, 0, 0, "-", "calibration_class"], [71, 0, 0, "-", "estimators"], [72, 0, 0, "-", "visualizer"]], "giant.calibration.Calibration": [[174, 2, 1, "", "alignment_base_frame_func"], [174, 3, 1, "", "calib_summary"], [174, 4, 1, "", "calibration_estimator"], [174, 3, 1, "", "estimate_calibration"], [174, 3, 1, "", "estimate_static_alignment"], [174, 3, 1, "", "estimate_temperature_dependent_alignment"], [174, 3, 1, "", "limit_magnitude"], [174, 4, 1, "", "model"], [174, 2, 1, "", "process_stars"], [174, 3, 1, "", "reset_calibration_estimator"], [174, 3, 1, "", "reset_settings"], [174, 3, 1, "", "reset_static_alignment_estimator"], [174, 3, 1, "", "reset_temperature_dependent_alignment_estimator"], [174, 2, 1, "", "scene"], [174, 2, 1, "", "static_alignment"], [174, 4, 1, "", "static_alignment_estimator"], [174, 2, 1, "", "temperature_dependent_alignment"], [174, 4, 1, "", "temperature_dependent_alignment_estimator"], [174, 3, 1, "", "update_calibration_estimator"], [174, 3, 1, "", "update_settings"], [174, 3, 1, "", "update_static_alignment_estimator"], [174, 3, 1, "", "update_temperature_dependent_alignment_estimator"], [174, 2, 1, "", "use_weights"]], "giant.calibration.CalibrationEstimator": [[174, 4, 1, "", "a_priori_state_covariance"], [174, 4, 1, "", "camera_frame_directions"], [174, 3, 1, "", "estimate"], [174, 4, 1, "", "measurement_covariance"], [174, 4, 1, "", "measurements"], [174, 4, 1, "", "model"], [174, 4, 1, "", "postfit_covariance"], [174, 4, 1, "", "postfit_residuals"], [174, 3, 1, "", "reset"], [174, 4, 1, "", "successful"], [174, 4, 1, "", "temperatures"], [174, 4, 1, "", "weighted_estimation"]], "giant.calibration.DavenportQMethod": [[174, 2, 1, "", "base_frame_directions"], [174, 3, 1, "", "compute_residuals"], [174, 3, 1, "", "estimate"], [174, 4, 1, "", "post_fit_covariance"], [174, 2, 1, "", "rotation"], [174, 2, 1, "", "target_frame_directions"], [174, 2, 1, "", "weighted_estimation"], [174, 2, 1, "", "weights"]], "giant.calibration.IterativeNonlinearLSTSQ": [[174, 4, 1, "", "a_priori_state_covariance"], [174, 4, 1, "", "camera_frame_directions"], [174, 3, 1, "", "compute_residuals"], [174, 3, 1, "", "estimate"], [174, 2, 1, "", "max_iter"], [174, 4, 1, "", "measurement_covariance"], [174, 4, 1, "", "measurements"], [174, 4, 1, "", "model"], [174, 4, 1, "", "postfit_covariance"], [174, 4, 1, "", "postfit_residuals"], [174, 3, 1, "", "reset"], [174, 2, 1, "", "residual_atol"], [174, 2, 1, "", "residual_rtol"], [174, 2, 1, "", "state_atol"], [174, 2, 1, "", "state_rtol"], [174, 4, 1, "", "successful"], [174, 4, 1, "", "temperatures"], [174, 4, 1, "", "weighted_estimation"]], "giant.calibration.LMAEstimator": [[174, 3, 1, "", "estimate"], [174, 2, 1, "", "max_divergence_steps"], [174, 2, 1, "", "max_iter"], [174, 2, 1, "", "residual_atol"], [174, 2, 1, "", "residual_rtol"], [174, 2, 1, "", "state_atol"], [174, 2, 1, "", "state_rtol"]], "giant.calibration.StarID": [[174, 2, 1, "", "a_priori_rotation_cat2camera"], [174, 2, 1, "", "camera_position"], [174, 2, 1, "", "camera_velocity"], [174, 2, 1, "", "catalogue"], [174, 3, 1, "", "compute_pointing"], [174, 2, 1, "", "extracted_image_points"], [174, 3, 1, "", "id_stars"], [174, 2, 1, "", "lis_catalogue"], [174, 2, 1, "", "matched_catalogue_image_points"], [174, 2, 1, "", "matched_catalogue_star_records"], [174, 2, 1, "", "matched_catalogue_unit_vectors"], [174, 2, 1, "", "matched_extracted_image_points"], [174, 2, 1, "", "matched_weights_inertial"], [174, 2, 1, "", "matched_weights_picture"], [174, 2, 1, "", "max_combos"], [174, 2, 1, "", "max_magnitude"], [174, 2, 1, "", "min_magnitude"], [174, 2, 1, "", "model"], [174, 3, 1, "", "project_stars"], [174, 2, 1, "", "queried_catalogue_image_points"], [174, 2, 1, "", "queried_catalogue_star_records"], [174, 2, 1, "", "queried_catalogue_unit_vectors"], [174, 2, 1, "", "queried_weights_inertial"], [174, 2, 1, "", "queried_weights_picture"], [174, 3, 1, "", "query_catalogue"], [174, 3, 1, "", "ransac"], [174, 3, 1, "", "ransac_iter_test"], [174, 2, 1, "", "ransac_tolerance"], [174, 2, 1, "", "second_closest_check"], [174, 3, 1, "", "solve_lis"], [174, 2, 1, "", "tolerance"], [174, 2, 1, "", "unique_check"], [174, 2, 1, "", "unmatched_catalogue_image_points"], [174, 2, 1, "", "unmatched_catalogue_star_records"], [174, 2, 1, "", "unmatched_catalogue_unit_vectors"], [174, 2, 1, "", "unmatched_extracted_image_points"], [174, 2, 1, "", "unmatched_weights_inertial"], [174, 2, 1, "", "unmatched_weights_picture"], [174, 2, 1, "", "use_mp"]], "giant.calibration.StaticAlignmentEstimator": [[174, 2, 1, "", "alignment"], [174, 3, 1, "", "estimate"], [174, 2, 1, "", "frame1_unit_vecs"], [174, 2, 1, "", "frame2_unit_vecs"]], "giant.calibration.TemperatureDependentAlignmentEstimator": [[174, 2, 1, "", "angle_m_offset"], [174, 2, 1, "", "angle_m_slope"], [174, 2, 1, "", "angle_n_offset"], [174, 2, 1, "", "angle_n_slope"], [174, 2, 1, "", "angle_p_offset"], [174, 2, 1, "", "angle_p_slope"], [174, 3, 1, "", "estimate"], [174, 2, 1, "", "frame_1_rotations"], [174, 2, 1, "", "frame_2_rotations"], [174, 2, 1, "", "order"], [174, 2, 1, "", "temperatures"]], "giant.calibration.calibration_class": [[26, 1, 1, "", "Calibration"]], "giant.calibration.calibration_class.Calibration": [[27, 3, 1, "", "add_images"], [26, 2, 1, "", "alignment_base_frame_func"], [26, 4, 1, "", "attitude_estimator"], [28, 3, 1, "", "calib_summary"], [26, 4, 1, "", "calibration_estimator"], [26, 4, 1, "", "camera"], [29, 3, 1, "", "estimate_attitude"], [30, 3, 1, "", "estimate_calibration"], [31, 3, 1, "", "estimate_static_alignment"], [32, 3, 1, "", "estimate_temperature_dependent_alignment"], [33, 3, 1, "", "id_stars"], [26, 4, 1, "", "image_processing"], [26, 4, 1, "", "ip_extracted_image_points"], [26, 4, 1, "", "ip_image_illums"], [26, 4, 1, "", "ip_psfs"], [26, 4, 1, "", "ip_snrs"], [26, 4, 1, "", "ip_stats"], [34, 3, 1, "", "limit_magnitude"], [26, 4, 1, "", "matched_catalogue_image_points"], [26, 4, 1, "", "matched_catalogue_star_records"], [26, 4, 1, "", "matched_catalogue_unit_vectors_camera"], [26, 4, 1, "", "matched_catalogue_unit_vectors_inertial"], [26, 4, 1, "", "matched_extracted_image_points"], [26, 4, 1, "", "matched_image_illums"], [26, 4, 1, "", "matched_psfs"], [26, 4, 1, "", "matched_snrs"], [35, 3, 1, "", "matched_star_residuals"], [26, 4, 1, "", "matched_stats"], [26, 4, 1, "", "matched_weights_inertial"], [26, 4, 1, "", "matched_weights_picture"], [26, 4, 1, "", "model"], [26, 2, 1, "", "process_stars"], [26, 4, 1, "", "queried_catalogue_image_points"], [26, 4, 1, "", "queried_catalogue_star_records"], [26, 4, 1, "", "queried_catalogue_unit_vectors"], [26, 4, 1, "", "queried_weights_inertial"], [26, 4, 1, "", "queried_weights_picture"], [36, 3, 1, "", "remove_matched_stars"], [37, 3, 1, "", "remove_outliers"], [38, 3, 1, "", "reproject_stars"], [39, 3, 1, "", "reset_attitude_estimator"], [40, 3, 1, "", "reset_calibration_estimator"], [41, 3, 1, "", "reset_image_processing"], [42, 3, 1, "", "reset_settings"], [43, 3, 1, "", "reset_star_id"], [44, 3, 1, "", "reset_static_alignment_estimator"], [45, 3, 1, "", "reset_temperature_dependent_alignment_estimator"], [46, 3, 1, "", "review_outliers"], [47, 3, 1, "", "sid_summary"], [26, 4, 1, "", "star_id"], [26, 2, 1, "", "static_alignment"], [26, 4, 1, "", "static_alignment_estimator"], [26, 2, 1, "", "temperature_dependent_alignment"], [26, 4, 1, "", "temperature_dependent_alignment_estimator"], [26, 4, 1, "", "unmatched_catalogue_image_points"], [26, 4, 1, "", "unmatched_catalogue_star_records"], [26, 4, 1, "", "unmatched_catalogue_unit_vectors"], [26, 4, 1, "", "unmatched_extracted_image_points"], [26, 4, 1, "", "unmatched_image_illums"], [26, 4, 1, "", "unmatched_psfs"], [26, 4, 1, "", "unmatched_snrs"], [26, 4, 1, "", "unmatched_stats"], [26, 4, 1, "", "unmatched_weights_inertial"], [26, 4, 1, "", "unmatched_weights_picture"], [48, 3, 1, "", "update_attitude_estimator"], [49, 3, 1, "", "update_calibration_estimator"], [50, 3, 1, "", "update_image_processing"], [51, 3, 1, "", "update_settings"], [52, 3, 1, "", "update_star_id"], [53, 3, 1, "", "update_static_alignment_estimator"], [54, 3, 1, "", "update_temperature_dependent_alignment_estimator"], [26, 2, 1, "", "use_weights"]], "giant.calibration.estimators": [[55, 1, 1, "", "CalibrationEstimator"], [58, 1, 1, "", "IterativeNonlinearLSTSQ"], [62, 1, 1, "", "LMAEstimator"], [66, 1, 1, "", "StaticAlignmentEstimator"], [68, 1, 1, "", "TemperatureDependentAlignmentEstimator"]], "giant.calibration.estimators.CalibrationEstimator": [[55, 4, 1, "", "a_priori_state_covariance"], [55, 4, 1, "", "camera_frame_directions"], [56, 3, 1, "", "estimate"], [55, 4, 1, "", "measurement_covariance"], [55, 4, 1, "", "measurements"], [55, 4, 1, "", "model"], [55, 4, 1, "", "postfit_covariance"], [55, 4, 1, "", "postfit_residuals"], [57, 3, 1, "", "reset"], [55, 4, 1, "", "successful"], [55, 4, 1, "", "temperatures"], [55, 4, 1, "", "weighted_estimation"]], "giant.calibration.estimators.IterativeNonlinearLSTSQ": [[58, 4, 1, "", "a_priori_state_covariance"], [58, 4, 1, "", "camera_frame_directions"], [59, 3, 1, "", "compute_residuals"], [60, 3, 1, "", "estimate"], [58, 2, 1, "", "max_iter"], [58, 4, 1, "", "measurement_covariance"], [58, 4, 1, "", "measurements"], [58, 4, 1, "", "model"], [58, 4, 1, "", "postfit_covariance"], [58, 4, 1, "", "postfit_residuals"], [61, 3, 1, "", "reset"], [58, 2, 1, "", "residual_atol"], [58, 2, 1, "", "residual_rtol"], [58, 2, 1, "", "state_atol"], [58, 2, 1, "", "state_rtol"], [58, 4, 1, "", "successful"], [58, 4, 1, "", "temperatures"], [58, 4, 1, "", "weighted_estimation"]], "giant.calibration.estimators.LMAEstimator": [[62, 4, 1, "", "a_priori_state_covariance"], [62, 4, 1, "", "camera_frame_directions"], [63, 3, 1, "", "compute_residuals"], [64, 3, 1, "", "estimate"], [62, 2, 1, "", "max_divergence_steps"], [62, 2, 1, "", "max_iter"], [62, 4, 1, "", "measurement_covariance"], [62, 4, 1, "", "measurements"], [62, 4, 1, "", "model"], [62, 4, 1, "", "postfit_covariance"], [62, 4, 1, "", "postfit_residuals"], [65, 3, 1, "", "reset"], [62, 2, 1, "", "residual_atol"], [62, 2, 1, "", "residual_rtol"], [62, 2, 1, "", "state_atol"], [62, 2, 1, "", "state_rtol"], [62, 4, 1, "", "successful"], [62, 4, 1, "", "temperatures"], [62, 4, 1, "", "weighted_estimation"]], "giant.calibration.estimators.StaticAlignmentEstimator": [[66, 2, 1, "", "alignment"], [67, 3, 1, "", "estimate"], [66, 2, 1, "", "frame1_unit_vecs"], [66, 2, 1, "", "frame2_unit_vecs"]], "giant.calibration.estimators.TemperatureDependentAlignmentEstimator": [[68, 2, 1, "", "angle_m_offset"], [68, 2, 1, "", "angle_m_slope"], [68, 2, 1, "", "angle_n_offset"], [68, 2, 1, "", "angle_n_slope"], [68, 2, 1, "", "angle_p_offset"], [68, 2, 1, "", "angle_p_slope"], [69, 3, 1, "", "estimate"], [68, 2, 1, "", "frame_1_rotations"], [68, 2, 1, "", "frame_2_rotations"], [68, 2, 1, "", "order"], [68, 2, 1, "", "temperatures"]], "giant.calibration.visualizer": [[73, 5, 1, "", "plot_alignment_residuals"], [74, 5, 1, "", "plot_distortion_map"], [75, 5, 1, "", "plot_focal_length_temperature_dependence"]], "giant.camera": [[76, 1, 1, "", "AttitudeUpdateMethods"], [77, 1, 1, "", "Camera"]], "giant.camera.AttitudeUpdateMethods": [[76, 2, 1, "", "INTERPOLATE"], [76, 2, 1, "", "PROPAGATE"], [76, 2, 1, "", "REPLACE"]], "giant.camera.Camera": [[78, 3, 1, "", "add_images"], [79, 3, 1, "", "all_off"], [80, 3, 1, "", "all_on"], [81, 3, 1, "", "apply_date_range"], [77, 4, 1, "", "attitude_function"], [77, 2, 1, "", "end_date"], [82, 3, 1, "", "image_check"], [77, 4, 1, "", "image_mask"], [77, 4, 1, "", "images"], [83, 3, 1, "", "long_off"], [84, 3, 1, "", "long_on"], [77, 4, 1, "", "model"], [77, 2, 1, "", "name"], [85, 3, 1, "", "only_long_on"], [86, 3, 1, "", "only_short_on"], [87, 3, 1, "", "preprocessor"], [77, 4, 1, "", "psf"], [88, 3, 1, "", "remove_images"], [89, 3, 1, "", "short_off"], [90, 3, 1, "", "short_on"], [91, 3, 1, "", "sort_by_date"], [77, 2, 1, "", "spacecraft_name"], [77, 2, 1, "", "start_date"], [92, 3, 1, "", "update_attitude_from_function"], [93, 3, 1, "", "update_short_attitude"]], "giant.camera_models": [[177, 0, 0, "-", "brown_model"], [178, 0, 0, "-", "camera_model"], [179, 0, 0, "-", "opencv_model"], [180, 0, 0, "-", "owen_model"], [181, 0, 0, "-", "pinhole_model"]], "giant.camera_models.brown_model": [[0, 1, 1, "", "BrownModel"]], "giant.camera_models.brown_model.BrownModel": [[0, 4, 1, "", "a1"], [0, 4, 1, "", "a2"], [0, 4, 1, "", "a3"], [1, 3, 1, "", "adjust_temperature"], [0, 4, 1, "", "alpha"], [2, 3, 1, "", "apply_distortion"], [3, 3, 1, "", "apply_update"], [4, 3, 1, "", "compute_jacobian"], [5, 3, 1, "", "compute_pixel_jacobian"], [6, 3, 1, "", "compute_unit_vector_jacobian"], [7, 3, 1, "", "copy"], [8, 3, 1, "", "distort_pixels"], [0, 2, 1, "", "distortion_coefficients"], [9, 3, 1, "", "distortion_map"], [0, 2, 1, "", "estimate_multiple_misalignments"], [0, 2, 1, "", "estimation_parameters"], [0, 4, 1, "", "field_of_view"], [10, 3, 1, "", "from_elem"], [0, 4, 1, "", "fx"], [0, 4, 1, "", "fy"], [11, 3, 1, "", "get_misalignment"], [12, 3, 1, "", "get_projections"], [13, 3, 1, "", "get_state_labels"], [14, 3, 1, "", "get_temperature_scale"], [0, 2, 1, "", "intrinsic_matrix"], [0, 4, 1, "", "intrinsic_matrix_inv"], [0, 4, 1, "", "k1"], [0, 4, 1, "", "k2"], [0, 4, 1, "", "k3"], [0, 4, 1, "", "kx"], [0, 4, 1, "", "kxy"], [0, 4, 1, "", "ky"], [0, 2, 1, "", "n_cols"], [0, 2, 1, "", "n_rows"], [15, 3, 1, "", "overwrite"], [0, 4, 1, "", "p1"], [0, 4, 1, "", "p2"], [16, 3, 1, "", "pixels_to_gnomic"], [17, 3, 1, "", "pixels_to_gnomic_interp"], [18, 3, 1, "", "pixels_to_unit"], [19, 3, 1, "", "prepare_interp"], [20, 3, 1, "", "project_directions"], [21, 3, 1, "", "project_onto_image"], [0, 4, 1, "", "px"], [0, 4, 1, "", "py"], [0, 4, 1, "", "radial2"], [0, 4, 1, "", "radial4"], [0, 4, 1, "", "radial6"], [22, 3, 1, "", "reset_misalignment"], [0, 4, 1, "", "state_vector"], [0, 2, 1, "", "temperature_coefficients"], [0, 4, 1, "", "tiptilt_x"], [0, 4, 1, "", "tiptilt_y"], [23, 3, 1, "", "to_elem"], [24, 3, 1, "", "undistort_image"], [25, 3, 1, "", "undistort_pixels"], [0, 2, 1, "", "use_a_priori"]], "giant.camera_models.camera_model": [[94, 1, 1, "", "CameraModel"], [111, 1, 1, "", "ReturnShape"], [112, 5, 1, "", "load"], [113, 5, 1, "", "save"]], "giant.camera_models.camera_model.CameraModel": [[95, 3, 1, "", "apply_update"], [96, 3, 1, "", "compute_jacobian"], [97, 3, 1, "", "compute_pixel_jacobian"], [98, 3, 1, "", "compute_unit_vector_jacobian"], [99, 3, 1, "", "copy"], [100, 3, 1, "", "distort_pixels"], [101, 3, 1, "", "distortion_map"], [94, 4, 1, "", "estimation_parameters"], [94, 4, 1, "", "field_of_view"], [102, 3, 1, "", "from_elem"], [103, 3, 1, "", "get_state_labels"], [94, 2, 1, "", "important_attributes"], [94, 2, 1, "", "n_cols"], [94, 2, 1, "", "n_rows"], [104, 3, 1, "", "overwrite"], [105, 3, 1, "", "pixels_to_unit"], [106, 3, 1, "", "project_directions"], [107, 3, 1, "", "project_onto_image"], [94, 4, 1, "", "state_vector"], [108, 3, 1, "", "to_elem"], [109, 3, 1, "", "undistort_image"], [110, 3, 1, "", "undistort_pixels"], [94, 2, 1, "", "use_a_priori"]], "giant.camera_models.camera_model.ReturnShape": [[111, 2, 1, "", "FULL"], [111, 2, 1, "", "SAME"]], "giant.camera_models.opencv_model": [[233, 1, 1, "", "OpenCVModel"]], "giant.camera_models.opencv_model.OpenCVModel": [[233, 4, 1, "", "a1"], [233, 4, 1, "", "a2"], [233, 4, 1, "", "a3"], [234, 3, 1, "", "adjust_temperature"], [233, 4, 1, "", "alpha"], [235, 3, 1, "", "apply_distortion"], [236, 3, 1, "", "apply_update"], [237, 3, 1, "", "compute_jacobian"], [238, 3, 1, "", "compute_pixel_jacobian"], [239, 3, 1, "", "compute_unit_vector_jacobian"], [240, 3, 1, "", "copy"], [241, 3, 1, "", "distort_pixels"], [233, 2, 1, "", "distortion_coefficients"], [242, 3, 1, "", "distortion_map"], [233, 2, 1, "", "estimate_multiple_misalignments"], [233, 2, 1, "", "estimation_parameters"], [233, 4, 1, "", "field_of_view"], [243, 3, 1, "", "from_elem"], [233, 4, 1, "", "fx"], [233, 4, 1, "", "fy"], [244, 3, 1, "", "get_misalignment"], [245, 3, 1, "", "get_projections"], [246, 3, 1, "", "get_state_labels"], [247, 3, 1, "", "get_temperature_scale"], [233, 2, 1, "", "intrinsic_matrix"], [233, 4, 1, "", "intrinsic_matrix_inv"], [233, 4, 1, "", "k1"], [233, 4, 1, "", "k2"], [233, 4, 1, "", "k3"], [233, 4, 1, "", "k4"], [233, 4, 1, "", "k5"], [233, 4, 1, "", "k6"], [233, 4, 1, "", "kx"], [233, 4, 1, "", "kxy"], [233, 4, 1, "", "ky"], [233, 2, 1, "", "n_cols"], [233, 2, 1, "", "n_rows"], [248, 3, 1, "", "overwrite"], [233, 4, 1, "", "p1"], [233, 4, 1, "", "p2"], [249, 3, 1, "", "pixels_to_gnomic"], [250, 3, 1, "", "pixels_to_gnomic_interp"], [251, 3, 1, "", "pixels_to_unit"], [252, 3, 1, "", "prepare_interp"], [253, 3, 1, "", "project_directions"], [254, 3, 1, "", "project_onto_image"], [233, 4, 1, "", "px"], [233, 4, 1, "", "py"], [233, 4, 1, "", "radial2d"], [233, 4, 1, "", "radial2n"], [233, 4, 1, "", "radial4d"], [233, 4, 1, "", "radial4n"], [233, 4, 1, "", "radial6d"], [233, 4, 1, "", "radial6n"], [255, 3, 1, "", "reset_misalignment"], [233, 4, 1, "", "s1"], [233, 4, 1, "", "s2"], [233, 4, 1, "", "s3"], [233, 4, 1, "", "s4"], [233, 2, 1, "", "temperature_coefficients"], [233, 4, 1, "", "thinprism_1"], [233, 4, 1, "", "thinprism_2"], [233, 4, 1, "", "thinprism_3"], [233, 4, 1, "", "thinprism_4"], [233, 4, 1, "", "tiptilt_x"], [233, 4, 1, "", "tiptilt_y"], [256, 3, 1, "", "to_elem"], [257, 3, 1, "", "undistort_image"], [258, 3, 1, "", "undistort_pixels"], [233, 2, 1, "", "use_a_priori"]], "giant.camera_models.owen_model": [[263, 1, 1, "", "OwenModel"]], "giant.camera_models.owen_model.OwenModel": [[263, 4, 1, "", "a1"], [263, 4, 1, "", "a2"], [263, 4, 1, "", "a3"], [264, 3, 1, "", "adjust_temperature"], [265, 3, 1, "", "apply_distortion"], [266, 3, 1, "", "apply_update"], [267, 3, 1, "", "compute_jacobian"], [268, 3, 1, "", "compute_pixel_jacobian"], [269, 3, 1, "", "compute_unit_vector_jacobian"], [270, 3, 1, "", "copy"], [271, 3, 1, "", "distort_pixels"], [263, 2, 1, "", "distortion_coefficients"], [272, 3, 1, "", "distortion_map"], [263, 4, 1, "", "e1"], [263, 4, 1, "", "e2"], [263, 4, 1, "", "e3"], [263, 4, 1, "", "e4"], [263, 4, 1, "", "e5"], [263, 4, 1, "", "e6"], [263, 2, 1, "", "estimate_multiple_misalignments"], [263, 2, 1, "", "estimation_parameters"], [263, 4, 1, "", "field_of_view"], [273, 3, 1, "", "from_elem"], [274, 3, 1, "", "get_misalignment"], [275, 3, 1, "", "get_projections"], [276, 3, 1, "", "get_state_labels"], [277, 3, 1, "", "get_temperature_scale"], [263, 2, 1, "", "intrinsic_matrix"], [263, 4, 1, "", "intrinsic_matrix_inv"], [263, 4, 1, "", "kx"], [263, 4, 1, "", "kxy"], [263, 4, 1, "", "ky"], [263, 4, 1, "", "kyx"], [263, 2, 1, "", "n_cols"], [263, 2, 1, "", "n_rows"], [278, 3, 1, "", "overwrite"], [263, 4, 1, "", "pinwheel1"], [263, 4, 1, "", "pinwheel2"], [279, 3, 1, "", "pixels_to_gnomic"], [280, 3, 1, "", "pixels_to_gnomic_interp"], [281, 3, 1, "", "pixels_to_unit"], [282, 3, 1, "", "prepare_interp"], [283, 3, 1, "", "project_directions"], [284, 3, 1, "", "project_onto_image"], [263, 4, 1, "", "px"], [263, 4, 1, "", "py"], [263, 4, 1, "", "radial2"], [263, 4, 1, "", "radial4"], [285, 3, 1, "", "reset_misalignment"], [263, 4, 1, "", "tangential_x"], [263, 4, 1, "", "tangential_y"], [263, 2, 1, "", "temperature_coefficients"], [286, 3, 1, "", "to_elem"], [287, 3, 1, "", "undistort_image"], [288, 3, 1, "", "undistort_pixels"], [263, 2, 1, "", "use_a_priori"]], "giant.camera_models.pinhole_model": [[289, 1, 1, "", "PinholeModel"]], "giant.camera_models.pinhole_model.PinholeModel": [[289, 4, 1, "", "a1"], [289, 4, 1, "", "a2"], [289, 4, 1, "", "a3"], [290, 3, 1, "", "adjust_temperature"], [291, 3, 1, "", "apply_update"], [292, 3, 1, "", "compute_jacobian"], [293, 3, 1, "", "compute_pixel_jacobian"], [294, 3, 1, "", "compute_unit_vector_jacobian"], [295, 3, 1, "", "copy"], [296, 3, 1, "", "distort_pixels"], [297, 3, 1, "", "distortion_map"], [289, 2, 1, "", "estimate_multiple_misalignments"], [289, 4, 1, "", "estimation_parameters"], [289, 4, 1, "", "field_of_view"], [289, 4, 1, "", "focal_length"], [298, 3, 1, "", "from_elem"], [299, 3, 1, "", "get_misalignment"], [300, 3, 1, "", "get_projections"], [301, 3, 1, "", "get_state_labels"], [302, 3, 1, "", "get_temperature_scale"], [289, 2, 1, "", "important_attributes"], [289, 2, 1, "", "intrinsic_matrix"], [289, 4, 1, "", "intrinsic_matrix_inv"], [289, 4, 1, "", "kx"], [289, 4, 1, "", "ky"], [289, 2, 1, "", "misalignment"], [289, 2, 1, "", "n_cols"], [289, 2, 1, "", "n_rows"], [303, 3, 1, "", "overwrite"], [304, 3, 1, "", "pixels_to_gnomic"], [305, 3, 1, "", "pixels_to_gnomic_interp"], [306, 3, 1, "", "pixels_to_unit"], [307, 3, 1, "", "prepare_interp"], [308, 3, 1, "", "project_directions"], [309, 3, 1, "", "project_onto_image"], [289, 4, 1, "", "px"], [289, 4, 1, "", "py"], [310, 3, 1, "", "reset_misalignment"], [289, 2, 1, "", "temperature_coefficients"], [311, 3, 1, "", "to_elem"], [312, 3, 1, "", "undistort_image"], [313, 3, 1, "", "undistort_pixels"], [289, 2, 1, "", "use_a_priori"]], "giant.catalogues": [[114, 0, 0, "-", "giant_catalogue"], [115, 0, 0, "-", "meta_catalogue"], [116, 0, 0, "-", "tycho"], [117, 0, 0, "-", "ucac"], [118, 0, 0, "-", "utilities"]], "giant.catalogues.giant_catalogue": [[119, 1, 1, "", "GIANTCatalogue"], [125, 5, 1, "", "blend_stars"], [126, 5, 1, "", "build_catalogue"], [127, 5, 1, "", "find_star_pairs"]], "giant.catalogues.giant_catalogue.GIANTCatalogue": [[119, 4, 1, "", "catalogue"], [120, 3, 1, "", "get_all_with_criteria"], [121, 3, 1, "", "get_from_ids"], [122, 3, 1, "", "get_tycho2_record"], [123, 3, 1, "", "get_ucac4_record"], [119, 2, 1, "", "include_proper_motion"], [124, 3, 1, "", "query_catalogue"]], "giant.catalogues.meta_catalogue": [[128, 1, 1, "", "Catalogue"], [130, 6, 1, "", "GIANT_COLUMNS"], [131, 6, 1, "", "GIANT_TYPES"]], "giant.catalogues.meta_catalogue.Catalogue": [[129, 3, 1, "", "query_catalogue"]], "giant.catalogues.tycho": [[132, 1, 1, "", "Tycho2"], [139, 5, 1, "", "download_tycho"]], "giant.catalogues.tycho.Tycho2": [[133, 3, 1, "", "convert_to_giant_format"], [134, 3, 1, "", "empty_frame"], [132, 2, 1, "", "include_proper_motion"], [135, 3, 1, "", "nan_frame"], [136, 3, 1, "", "query_catalogue"], [137, 3, 1, "", "query_catalogue_raw"], [138, 3, 1, "", "retrieve_record"]], "giant.catalogues.ucac": [[140, 1, 1, "", "ColumnOrder"], [141, 1, 1, "", "UCAC4"], [151, 5, 1, "", "binary_search"], [152, 5, 1, "", "check_file"], [153, 5, 1, "", "download_ucac"]], "giant.catalogues.ucac.ColumnOrder": [[140, 2, 1, "", "ASCENDING"], [140, 2, 1, "", "DESCENDING"]], "giant.catalogues.ucac.UCAC4": [[142, 3, 1, "", "build_index"], [143, 3, 1, "", "convert_to_giant_catalogue"], [144, 3, 1, "", "cross_ref_tycho"], [145, 3, 1, "", "dump_to_sqlite"], [146, 3, 1, "", "get_from_ids"], [147, 3, 1, "", "get_index_ind"], [148, 3, 1, "", "get_zone_block"], [141, 2, 1, "", "include_proper_motion"], [149, 3, 1, "", "query_catalogue"], [150, 3, 1, "", "query_catalogue_raw"]], "giant.catalogues.utilities": [[154, 6, 1, "", "DEG2MAS"], [155, 6, 1, "", "DEG2RAD"], [156, 6, 1, "", "MAS2DEG"], [157, 6, 1, "", "MAS2RAD"], [158, 6, 1, "", "MJD_EPOCH"], [159, 6, 1, "", "PARSEC2KM"], [160, 6, 1, "", "RAD2DEG"], [161, 6, 1, "", "RAD2MAS"], [162, 6, 1, "", "SI_DAYS_PER_YEAR"], [163, 6, 1, "", "SI_SECONDS_PER_DAY"], [164, 6, 1, "", "STAR_DIST"], [165, 5, 1, "", "apply_proper_motion"], [166, 5, 1, "", "datetime_to_mjd_years"], [167, 5, 1, "", "radec_distance"], [168, 5, 1, "", "radec_to_unit"], [169, 5, 1, "", "timedelta_to_si_years"], [170, 5, 1, "", "unit_to_radec"]], "giant.image": [[194, 1, 1, "", "ExposureType"], [195, 1, 1, "", "OpNavImage"]], "giant.image.ExposureType": [[194, 2, 1, "", "DUAL"], [194, 2, 1, "", "LONG"], [194, 2, 1, "", "SHORT"]], "giant.image.OpNavImage": [[195, 2, 1, "", "dark_pixels"], [195, 2, 1, "", "exposure"], [195, 4, 1, "", "exposure_type"], [195, 2, 1, "", "instrument"], [196, 3, 1, "", "load_image"], [195, 4, 1, "", "observation_date"], [197, 3, 1, "", "parse_data"], [195, 2, 1, "", "pointing_post_fit"], [195, 4, 1, "", "position"], [195, 4, 1, "", "rotation_inertial_to_camera"], [195, 4, 1, "", "saturation"], [195, 2, 1, "", "spacecraft"], [195, 2, 1, "", "target"], [195, 4, 1, "", "temperature"], [195, 4, 1, "", "velocity"]], "giant.image_processing": [[198, 6, 1, "", "FIRST_ORDER_IMAGINARY_MOMENTS"], [199, 6, 1, "", "FIRST_ORDER_REAL_MOMENTS"], [200, 6, 1, "", "HORIZONTAL_KERNEL"], [201, 1, 1, "", "ImageFlatteningNoiseApprox"], [202, 1, 1, "", "ImageProcessing"], [215, 6, 1, "", "PAE_A01"], [216, 6, 1, "", "PAE_A11"], [217, 6, 1, "", "SECOND_ORDER_MOMENTS"], [218, 1, 1, "", "SubpixelEdgeMethods"], [219, 6, 1, "", "VERTICAL_KERNEL"], [220, 5, 1, "", "cv2_correlator_2d"], [221, 5, 1, "", "fft_correlator_1d"], [222, 5, 1, "", "fft_correlator_2d"], [223, 5, 1, "", "local_maxima"], [224, 5, 1, "", "otsu"], [225, 5, 1, "", "parabolic_peak_finder_1d"], [226, 5, 1, "", "pixel_level_peak_finder_1d"], [227, 5, 1, "", "pixel_level_peak_finder_2d"], [228, 5, 1, "", "quadric_peak_finder_2d"], [229, 5, 1, "", "spatial_correlator_2d"]], "giant.image_processing.ImageFlatteningNoiseApprox": [[201, 2, 1, "", "GLOBAL"], [201, 2, 1, "", "LOCAL"]], "giant.image_processing.ImageProcessing": [[202, 2, 1, "", "centroid_size"], [202, 2, 1, "", "centroiding"], [203, 3, 1, "", "corners_to_roi"], [204, 3, 1, "", "correlate"], [202, 2, 1, "", "correlator"], [202, 2, 1, "", "correlator_kwargs"], [202, 2, 1, "", "denoise_flag"], [205, 3, 1, "", "denoise_image"], [202, 2, 1, "", "denoising_args"], [202, 2, 1, "", "denoising_kwargs"], [206, 3, 1, "", "find_poi_in_roi"], [207, 3, 1, "", "flatten_image_and_get_noise_level"], [202, 2, 1, "", "flattening_kernel_size"], [208, 3, 1, "", "identify_pixel_edges"], [209, 3, 1, "", "identify_subpixel_limbs"], [202, 2, 1, "", "image_denoising"], [202, 2, 1, "", "image_flattening_noise_approximation"], [210, 3, 1, "", "locate_subpixel_poi_in_roi"], [211, 3, 1, "", "pae_edges"], [202, 2, 1, "", "pae_order"], [202, 2, 1, "", "pae_threshold"], [202, 2, 1, "", "poi_max_size"], [202, 2, 1, "", "poi_min_size"], [202, 2, 1, "", "poi_threshold"], [212, 3, 1, "", "refine_edges_pae"], [213, 3, 1, "", "refine_edges_zernike_ramp"], [214, 3, 1, "", "refine_locations"], [202, 2, 1, "", "reject_saturation"], [202, 2, 1, "", "return_stats"], [202, 2, 1, "", "save_psf"], [202, 2, 1, "", "subpixel_method"], [202, 2, 1, "", "zernike_edge_width"]], "giant.image_processing.SubpixelEdgeMethods": [[218, 2, 1, "", "PAE"], [218, 2, 1, "", "PIXEL"], [218, 2, 1, "", "ZERNIKE_RAMP"]], "giant.opnav_class": [[259, 1, 1, "", "OpNav"]], "giant.opnav_class.OpNav": [[260, 3, 1, "", "add_images"], [259, 4, 1, "", "camera"], [259, 4, 1, "", "image_processing"], [259, 4, 1, "", "model"], [261, 3, 1, "", "reset_image_processing"], [262, 3, 1, "", "update_image_processing"]], "giant.point_spread_functions": [[186, 1, 1, "", "Gaussian"], [186, 1, 1, "", "GeneralizedGaussian"], [186, 1, 1, "", "InitialGuessIterativeNonlinearLSTSQPSF"], [186, 1, 1, "", "InitialGuessIterativeNonlinearLSTSQPSFwBackground"], [186, 1, 1, "", "IterativeGaussian"], [186, 1, 1, "", "IterativeGaussianWBackground"], [186, 1, 1, "", "IterativeGeneralizedGaussian"], [186, 1, 1, "", "IterativeGeneralizedGaussianWBackground"], [186, 1, 1, "", "IterativeNonlinearLSTSQPSF"], [186, 1, 1, "", "IterativeNonlinearLSTSQwBackground"], [186, 1, 1, "", "KernelBasedApply1DPSF"], [186, 1, 1, "", "KernelBasedCallPSF"], [186, 1, 1, "", "Moment"], [186, 1, 1, "", "PointSpreadFunction"], [186, 1, 1, "", "SizedPSF"], [398, 0, 0, "-", "gaussians"], [399, 0, 0, "-", "moments"], [400, 0, 0, "-", "psf_meta"]], "giant.point_spread_functions.Gaussian": [[186, 3, 1, "", "compute_jacobian"], [186, 4, 1, "", "covariance"], [186, 3, 1, "", "evaluate"], [186, 3, 1, "", "fit"], [186, 3, 1, "", "update_state"]], "giant.point_spread_functions.GeneralizedGaussian": [[186, 2, 1, "", "a_coef"], [186, 2, 1, "", "b_coef"], [186, 2, 1, "", "c_coef"], [186, 3, 1, "", "compute_jacobian"], [186, 4, 1, "", "covariance"], [186, 3, 1, "", "evaluate"], [186, 3, 1, "", "fit"], [186, 2, 1, "", "sigma_x"], [186, 2, 1, "", "sigma_y"], [186, 2, 1, "", "theta"], [186, 3, 1, "", "update_state"]], "giant.point_spread_functions.InitialGuessIterativeNonlinearLSTSQPSF": [[186, 3, 1, "", "fit_lstsq"]], "giant.point_spread_functions.InitialGuessIterativeNonlinearLSTSQPSFwBackground": [[186, 3, 1, "", "compute_jacobian_all"], [186, 3, 1, "", "evaluate"], [186, 3, 1, "", "fit_lstsq"]], "giant.point_spread_functions.IterativeGaussian": [[186, 3, 1, "", "fit"]], "giant.point_spread_functions.IterativeGaussianWBackground": [[186, 3, 1, "", "compute_jacobian"], [186, 3, 1, "", "fit"], [186, 3, 1, "", "update_state"]], "giant.point_spread_functions.IterativeGeneralizedGaussian": [[186, 3, 1, "", "fit"]], "giant.point_spread_functions.IterativeGeneralizedGaussianWBackground": [[186, 3, 1, "", "compute_jacobian"], [186, 3, 1, "", "fit"], [186, 3, 1, "", "update_state"]], "giant.point_spread_functions.IterativeNonlinearLSTSQPSF": [[186, 2, 1, "", "atol"], [186, 3, 1, "", "compute_jacobian"], [186, 3, 1, "", "converge"], [186, 2, 1, "", "max_iter"], [186, 2, 1, "", "rtol"], [186, 3, 1, "", "update_state"]], "giant.point_spread_functions.IterativeNonlinearLSTSQwBackground": [[186, 3, 1, "", "apply_update_bg"], [186, 2, 1, "", "bg_b_coef"], [186, 2, 1, "", "bg_c_coef"], [186, 2, 1, "", "bg_d_coef"], [186, 3, 1, "", "compute_jacobian_bg"], [186, 3, 1, "", "evaluate_bg"], [186, 3, 1, "", "fit_bg"]], "giant.point_spread_functions.KernelBasedApply1DPSF": [[186, 3, 1, "", "apply_1d_sized"]], "giant.point_spread_functions.Moment": [[186, 3, 1, "", "apply_1d"], [186, 4, 1, "", "centroid"], [186, 2, 1, "", "centroid_x"], [186, 2, 1, "", "centroid_y"], [186, 4, 1, "", "covariance"], [186, 3, 1, "", "evaluate"], [186, 3, 1, "", "fit"], [186, 3, 1, "", "generate_kernel"], [186, 4, 1, "", "residual_mean"], [186, 4, 1, "", "residual_rss"], [186, 4, 1, "", "residual_std"], [186, 3, 1, "", "volume"]], "giant.point_spread_functions.PointSpreadFunction": [[186, 3, 1, "", "apply_1d"], [186, 4, 1, "", "centroid"], [186, 3, 1, "", "compare"], [186, 4, 1, "", "covariance"], [186, 3, 1, "", "evaluate"], [186, 3, 1, "", "fit"], [186, 3, 1, "", "generate_kernel"], [186, 4, 1, "", "residual_mean"], [186, 4, 1, "", "residual_rss"], [186, 4, 1, "", "residual_std"], [186, 2, 1, "", "save_residuals"], [186, 3, 1, "", "volume"]], "giant.point_spread_functions.SizedPSF": [[186, 3, 1, "", "compare"], [186, 3, 1, "", "determine_size"], [186, 3, 1, "", "generate_kernel"], [186, 2, 1, "", "size"]], "giant.point_spread_functions.gaussians": [[314, 1, 1, "", "Gaussian"], [325, 1, 1, "", "GeneralizedGaussian"], [336, 1, 1, "", "IterativeGaussian"], [349, 1, 1, "", "IterativeGaussianWBackground"], [367, 1, 1, "", "IterativeGeneralizedGaussian"], [380, 1, 1, "", "IterativeGeneralizedGaussianWBackground"]], "giant.point_spread_functions.gaussians.Gaussian": [[315, 3, 1, "", "__call__"], [314, 2, 1, "", "amplitude"], [316, 3, 1, "", "apply_1d"], [317, 3, 1, "", "apply_1d_sized"], [314, 2, 1, "", "centroid_x"], [314, 2, 1, "", "centroid_y"], [318, 3, 1, "", "compute_jacobian"], [314, 4, 1, "", "covariance"], [319, 3, 1, "", "determine_size"], [320, 3, 1, "", "evaluate"], [321, 3, 1, "", "fit"], [322, 3, 1, "", "generate_kernel"], [323, 3, 1, "", "normalize_amplitude"], [314, 4, 1, "", "residual_mean"], [314, 4, 1, "", "residual_rss"], [314, 4, 1, "", "residual_std"], [314, 4, 1, "", "residuals"], [314, 2, 1, "", "save_residuals"], [314, 2, 1, "", "sigma_x"], [314, 2, 1, "", "sigma_y"], [314, 2, 1, "", "size"], [324, 3, 1, "", "update_state"]], "giant.point_spread_functions.gaussians.GeneralizedGaussian": [[326, 3, 1, "", "__call__"], [325, 2, 1, "", "a_coef"], [325, 2, 1, "", "amplitude"], [327, 3, 1, "", "apply_1d"], [328, 3, 1, "", "apply_1d_sized"], [325, 2, 1, "", "b_coef"], [325, 2, 1, "", "c_coef"], [325, 2, 1, "", "centroid_x"], [325, 2, 1, "", "centroid_y"], [329, 3, 1, "", "compute_jacobian"], [325, 4, 1, "", "covariance"], [330, 3, 1, "", "determine_size"], [331, 3, 1, "", "evaluate"], [332, 3, 1, "", "fit"], [333, 3, 1, "", "generate_kernel"], [334, 3, 1, "", "normalize_amplitude"], [325, 4, 1, "", "residual_mean"], [325, 4, 1, "", "residual_rss"], [325, 4, 1, "", "residual_std"], [325, 4, 1, "", "residuals"], [325, 2, 1, "", "save_residuals"], [325, 2, 1, "", "sigma_x"], [325, 2, 1, "", "sigma_y"], [325, 2, 1, "", "size"], [325, 2, 1, "", "theta"], [335, 3, 1, "", "update_state"]], "giant.point_spread_functions.gaussians.IterativeGaussian": [[337, 3, 1, "", "__call__"], [336, 2, 1, "", "amplitude"], [338, 3, 1, "", "apply_1d"], [339, 3, 1, "", "apply_1d_sized"], [336, 2, 1, "", "atol"], [336, 2, 1, "", "centroid_x"], [336, 2, 1, "", "centroid_y"], [340, 3, 1, "", "compute_jacobian"], [341, 3, 1, "", "converge"], [336, 4, 1, "", "covariance"], [342, 3, 1, "", "determine_size"], [343, 3, 1, "", "evaluate"], [344, 3, 1, "", "fit"], [345, 3, 1, "", "fit_lstsq"], [346, 3, 1, "", "generate_kernel"], [336, 2, 1, "", "max_iter"], [347, 3, 1, "", "normalize_amplitude"], [336, 4, 1, "", "residual_mean"], [336, 4, 1, "", "residual_rss"], [336, 4, 1, "", "residual_std"], [336, 4, 1, "", "residuals"], [336, 2, 1, "", "rtol"], [336, 2, 1, "", "save_residuals"], [336, 2, 1, "", "sigma_x"], [336, 2, 1, "", "sigma_y"], [336, 2, 1, "", "size"], [348, 3, 1, "", "update_state"]], "giant.point_spread_functions.gaussians.IterativeGaussianWBackground": [[350, 3, 1, "", "__call__"], [349, 2, 1, "", "amplitude"], [351, 3, 1, "", "apply_1d"], [352, 3, 1, "", "apply_1d_sized"], [353, 3, 1, "", "apply_update_bg"], [349, 2, 1, "", "atol"], [349, 2, 1, "", "bg_b_coef"], [349, 2, 1, "", "bg_c_coef"], [349, 2, 1, "", "bg_d_coef"], [349, 2, 1, "", "centroid_x"], [349, 2, 1, "", "centroid_y"], [354, 3, 1, "", "compute_jacobian"], [355, 3, 1, "", "compute_jacobian_all"], [356, 3, 1, "", "compute_jacobian_bg"], [357, 3, 1, "", "converge"], [349, 4, 1, "", "covariance"], [358, 3, 1, "", "determine_size"], [359, 3, 1, "", "evaluate"], [360, 3, 1, "", "evaluate_bg"], [361, 3, 1, "", "fit"], [362, 3, 1, "", "fit_bg"], [363, 3, 1, "", "fit_lstsq"], [364, 3, 1, "", "generate_kernel"], [349, 2, 1, "", "max_iter"], [365, 3, 1, "", "normalize_amplitude"], [349, 4, 1, "", "residual_mean"], [349, 4, 1, "", "residual_rss"], [349, 4, 1, "", "residual_std"], [349, 4, 1, "", "residuals"], [349, 2, 1, "", "rtol"], [349, 2, 1, "", "save_residuals"], [349, 2, 1, "", "sigma_x"], [349, 2, 1, "", "sigma_y"], [349, 2, 1, "", "size"], [366, 3, 1, "", "update_state"]], "giant.point_spread_functions.gaussians.IterativeGeneralizedGaussian": [[368, 3, 1, "", "__call__"], [367, 2, 1, "", "a_coef"], [367, 2, 1, "", "amplitude"], [369, 3, 1, "", "apply_1d"], [370, 3, 1, "", "apply_1d_sized"], [367, 2, 1, "", "atol"], [367, 2, 1, "", "b_coef"], [367, 2, 1, "", "c_coef"], [367, 2, 1, "", "centroid_x"], [367, 2, 1, "", "centroid_y"], [371, 3, 1, "", "compute_jacobian"], [372, 3, 1, "", "converge"], [367, 4, 1, "", "covariance"], [373, 3, 1, "", "determine_size"], [374, 3, 1, "", "evaluate"], [375, 3, 1, "", "fit"], [376, 3, 1, "", "fit_lstsq"], [377, 3, 1, "", "generate_kernel"], [367, 2, 1, "", "max_iter"], [378, 3, 1, "", "normalize_amplitude"], [367, 4, 1, "", "residual_mean"], [367, 4, 1, "", "residual_rss"], [367, 4, 1, "", "residual_std"], [367, 4, 1, "", "residuals"], [367, 2, 1, "", "rtol"], [367, 2, 1, "", "save_residuals"], [367, 2, 1, "", "sigma_x"], [367, 2, 1, "", "sigma_y"], [367, 2, 1, "", "size"], [367, 2, 1, "", "theta"], [379, 3, 1, "", "update_state"]], "giant.point_spread_functions.gaussians.IterativeGeneralizedGaussianWBackground": [[381, 3, 1, "", "__call__"], [380, 2, 1, "", "a_coef"], [380, 2, 1, "", "amplitude"], [382, 3, 1, "", "apply_1d"], [383, 3, 1, "", "apply_1d_sized"], [384, 3, 1, "", "apply_update_bg"], [380, 2, 1, "", "atol"], [380, 2, 1, "", "b_coef"], [380, 2, 1, "", "bg_b_coef"], [380, 2, 1, "", "bg_c_coef"], [380, 2, 1, "", "bg_d_coef"], [380, 2, 1, "", "c_coef"], [380, 2, 1, "", "centroid_x"], [380, 2, 1, "", "centroid_y"], [385, 3, 1, "", "compute_jacobian"], [386, 3, 1, "", "compute_jacobian_all"], [387, 3, 1, "", "compute_jacobian_bg"], [388, 3, 1, "", "converge"], [380, 4, 1, "", "covariance"], [389, 3, 1, "", "determine_size"], [390, 3, 1, "", "evaluate"], [391, 3, 1, "", "evaluate_bg"], [392, 3, 1, "", "fit"], [393, 3, 1, "", "fit_bg"], [394, 3, 1, "", "fit_lstsq"], [395, 3, 1, "", "generate_kernel"], [380, 2, 1, "", "max_iter"], [396, 3, 1, "", "normalize_amplitude"], [380, 4, 1, "", "residual_mean"], [380, 4, 1, "", "residual_rss"], [380, 4, 1, "", "residual_std"], [380, 4, 1, "", "residuals"], [380, 2, 1, "", "rtol"], [380, 2, 1, "", "save_residuals"], [380, 2, 1, "", "sigma_x"], [380, 2, 1, "", "sigma_y"], [380, 2, 1, "", "size"], [380, 2, 1, "", "theta"], [397, 3, 1, "", "update_state"]], "giant.point_spread_functions.moments": [[401, 1, 1, "", "Moment"]], "giant.point_spread_functions.moments.Moment": [[402, 3, 1, "", "__call__"], [403, 3, 1, "", "apply_1d"], [401, 4, 1, "", "centroid"], [401, 2, 1, "", "centroid_x"], [401, 2, 1, "", "centroid_y"], [401, 4, 1, "", "covariance"], [404, 3, 1, "", "evaluate"], [405, 3, 1, "", "fit"], [406, 3, 1, "", "generate_kernel"], [401, 4, 1, "", "residual_rss"], [401, 4, 1, "", "residual_std"], [401, 2, 1, "", "save_residuals"]], "giant.point_spread_functions.psf_meta": [[407, 1, 1, "", "InitialGuessIterativeNonlinearLSTSQPSF"], [409, 1, 1, "", "InitialGuessIterativeNonlinearLSTSQPSFwBackground"], [413, 1, 1, "", "IterativeNonlinearLSTSQPSF"], [417, 1, 1, "", "IterativeNonlinearLSTSQwBackground"], [422, 1, 1, "", "KernelBasedApply1DPSF"], [424, 1, 1, "", "KernelBasedCallPSF"], [426, 1, 1, "", "PointSpreadFunction"], [432, 1, 1, "", "SizedPSF"]], "giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSF": [[407, 2, 1, "", "_covariance"], [407, 2, 1, "", "_residuals"], [408, 3, 1, "", "fit_lstsq"]], "giant.point_spread_functions.psf_meta.InitialGuessIterativeNonlinearLSTSQPSFwBackground": [[409, 2, 1, "", "_covariance"], [409, 2, 1, "", "_residuals"], [410, 3, 1, "", "compute_jacobian_all"], [411, 3, 1, "", "evaluate"], [412, 3, 1, "", "fit_lstsq"]], "giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQPSF": [[413, 2, 1, "", "atol"], [414, 3, 1, "", "compute_jacobian"], [415, 3, 1, "", "converge"], [413, 2, 1, "", "max_iter"], [413, 2, 1, "", "rtol"], [416, 3, 1, "", "update_state"]], "giant.point_spread_functions.psf_meta.IterativeNonlinearLSTSQwBackground": [[418, 3, 1, "", "apply_update_bg"], [417, 2, 1, "", "bg_b_coef"], [417, 2, 1, "", "bg_c_coef"], [417, 2, 1, "", "bg_d_coef"], [419, 3, 1, "", "compute_jacobian_bg"], [420, 3, 1, "", "evaluate_bg"], [421, 3, 1, "", "fit_bg"]], "giant.point_spread_functions.psf_meta.KernelBasedApply1DPSF": [[423, 3, 1, "", "apply_1d_sized"]], "giant.point_spread_functions.psf_meta.KernelBasedCallPSF": [[425, 3, 1, "", "__call__"]], "giant.point_spread_functions.psf_meta.PointSpreadFunction": [[427, 3, 1, "", "__call__"], [428, 3, 1, "", "apply_1d"], [426, 4, 1, "", "centroid"], [426, 4, 1, "", "covariance"], [429, 3, 1, "", "evaluate"], [430, 3, 1, "", "fit"], [431, 3, 1, "", "generate_kernel"], [426, 4, 1, "", "residual_rss"], [426, 4, 1, "", "residual_std"], [426, 2, 1, "", "save_residuals"]], "giant.point_spread_functions.psf_meta.SizedPSF": [[433, 3, 1, "", "determine_size"], [434, 3, 1, "", "generate_kernel"], [432, 2, 1, "", "size"]], "giant.ray_tracer": [[435, 0, 0, "-", "illumination"], [436, 0, 0, "-", "kdtree"], [437, 0, 0, "-", "rays"], [438, 0, 0, "-", "scene"], [439, 0, 0, "-", "shapes"], [440, 0, 0, "-", "utilities"]], "giant.ray_tracer.illumination": [[441, 1, 1, "", "AshikhminShirleyDiffuseIllumination"], [442, 1, 1, "", "GaskellIllumination"], [443, 6, 1, "", "ILLUM_DTYPE"], [444, 1, 1, "", "IlluminationModel"], [445, 1, 1, "", "LambertianIllumination"], [446, 1, 1, "", "LommelSeeligerIllumination"], [447, 1, 1, "", "McEwenIllumination"]], "giant.ray_tracer.illumination.GaskellIllumination": [[442, 2, 1, "", "global_albedo"]], "giant.ray_tracer.illumination.LambertianIllumination": [[445, 2, 1, "", "global_albedo"]], "giant.ray_tracer.illumination.LommelSeeligerIllumination": [[446, 2, 1, "", "global_albedo"]], "giant.ray_tracer.illumination.McEwenIllumination": [[448, 3, 1, "", "compute_photoclinometry_jacobian"], [447, 2, 1, "", "global_albedo"], [449, 3, 1, "", "numeric_derivative"]], "giant.ray_tracer.kdtree": [[450, 1, 1, "", "KDNode"], [455, 1, 1, "", "KDTree"], [465, 5, 1, "", "describe_tree"], [466, 5, 1, "", "get_facet_vertices"], [467, 5, 1, "", "get_ignore_inds"]], "giant.ray_tracer.kdtree.KDNode": [[450, 2, 1, "", "bounding_box"], [451, 3, 1, "", "compute_bounding_box"], [450, 2, 1, "", "has_surface"], [450, 2, 1, "", "id"], [450, 2, 1, "", "id_order"], [450, 2, 1, "", "left"], [450, 2, 1, "", "order"], [450, 2, 1, "", "right"], [452, 3, 1, "", "rotate"], [453, 3, 1, "", "split"], [450, 2, 1, "", "surface"], [454, 3, 1, "", "translate"]], "giant.ray_tracer.kdtree.KDTree": [[455, 2, 1, "", "bounding_box"], [456, 3, 1, "", "build"], [457, 3, 1, "", "compute_intersect"], [458, 3, 1, "", "compute_limb_jacobian"], [459, 3, 1, "", "find_limbs"], [460, 3, 1, "", "load"], [455, 2, 1, "", "max_depth"], [455, 2, 1, "", "order"], [455, 2, 1, "", "position"], [455, 2, 1, "", "reference_ellipsoid"], [455, 2, 1, "", "root"], [461, 3, 1, "", "rotate"], [455, 2, 1, "", "rotation"], [462, 3, 1, "", "save"], [455, 2, 1, "", "surface"], [463, 3, 1, "", "trace"], [464, 3, 1, "", "translate"]], "giant.ray_tracer.rays": [[468, 6, 1, "", "INTERSECT_DTYPE"], [469, 1, 1, "", "Rays"], [472, 5, 1, "", "compute_rays"]], "giant.ray_tracer.rays.Rays": [[469, 4, 1, "", "direction"], [469, 4, 1, "", "ignore"], [469, 4, 1, "", "inv_direction"], [470, 3, 1, "", "rotate"], [469, 4, 1, "", "start"], [471, 3, 1, "", "translate"]], "giant.ray_tracer.scene": [[473, 1, 1, "", "CorrectionsType"], [474, 6, 1, "", "SPEED_OF_LIGHT"], [475, 1, 1, "", "Scene"], [483, 1, 1, "", "SceneObject"], [491, 5, 1, "", "correct_light_time"], [492, 5, 1, "", "correct_stellar_aberration"], [493, 5, 1, "", "correct_stellar_aberration_fsp"]], "giant.ray_tracer.scene.CorrectionsType": [[473, 2, 1, "", "LT"], [473, 2, 1, "", "LTPS"], [473, 2, 1, "", "NONE"], [473, 2, 1, "", "S"]], "giant.ray_tracer.scene.Scene": [[476, 3, 1, "", "calculate_apparent_position"], [477, 3, 1, "", "get_first"], [478, 3, 1, "", "get_illumination_inputs"], [475, 4, 1, "", "light_obj"], [475, 4, 1, "", "obscuring_objs"], [475, 2, 1, "", "order"], [479, 3, 1, "", "phase_angle"], [480, 3, 1, "", "raster_render"], [475, 4, 1, "", "target_objs"], [481, 3, 1, "", "trace"], [482, 3, 1, "", "update"]], "giant.ray_tracer.scene.SceneObject": [[484, 3, 1, "", "change_orientation"], [485, 3, 1, "", "change_position"], [483, 2, 1, "", "corrections"], [486, 3, 1, "", "get_apparent_diameter"], [487, 3, 1, "", "get_bounding_pixels"], [483, 2, 1, "", "name"], [483, 4, 1, "", "orientation"], [483, 2, 1, "", "orientation_function"], [488, 3, 1, "", "place"], [483, 4, 1, "", "position"], [483, 2, 1, "", "position_function"], [489, 3, 1, "", "rotate"], [483, 4, 1, "", "shape"], [490, 3, 1, "", "translate"]], "giant.ray_tracer.shapes": [[512, 0, 0, "-", "axis_aligned_bounding_box"], [513, 0, 0, "-", "ellipsoid"], [514, 0, 0, "-", "point"], [515, 0, 0, "-", "shape"], [516, 0, 0, "-", "solid"], [517, 0, 0, "-", "surface"], [518, 0, 0, "-", "triangle"]], "giant.ray_tracer.shapes.axis_aligned_bounding_box": [[494, 1, 1, "", "AxisAlignedBoundingBox"], [499, 5, 1, "", "min_max_to_bounding_box"]], "giant.ray_tracer.shapes.axis_aligned_bounding_box.AxisAlignedBoundingBox": [[495, 3, 1, "", "compute_intersect"], [494, 2, 1, "", "max_sides"], [494, 2, 1, "", "min_sides"], [496, 3, 1, "", "rotate"], [497, 3, 1, "", "trace"], [498, 3, 1, "", "translate"], [494, 2, 1, "", "vertices"]], "giant.ray_tracer.shapes.ellipsoid": [[500, 1, 1, "", "Ellipsoid"], [511, 5, 1, "", "quadratic_equation"]], "giant.ray_tracer.shapes.ellipsoid.Ellipsoid": [[500, 2, 1, "", "albedo_map"], [500, 2, 1, "", "bounding_box"], [500, 2, 1, "", "center"], [501, 3, 1, "", "compute_albedos"], [502, 3, 1, "", "compute_bounding_box"], [503, 3, 1, "", "compute_intersect"], [504, 3, 1, "", "compute_limb_jacobian"], [505, 3, 1, "", "compute_normals"], [500, 2, 1, "", "ellipsoid_matrix"], [506, 3, 1, "", "find_limbs"], [500, 2, 1, "", "id"], [507, 3, 1, "", "intersect"], [500, 2, 1, "", "orientation"], [500, 2, 1, "", "principal_axes"], [508, 3, 1, "", "rotate"], [509, 3, 1, "", "trace"], [510, 3, 1, "", "translate"]], "giant.ray_tracer.shapes.point": [[519, 1, 1, "", "Point"]], "giant.ray_tracer.shapes.point.Point": [[519, 2, 1, "", "location"], [520, 3, 1, "", "rotate"], [521, 3, 1, "", "translate"]], "giant.ray_tracer.shapes.shape": [[522, 1, 1, "", "Shape"]], "giant.ray_tracer.shapes.shape.Shape": [[522, 2, 1, "", "bounding_box"], [523, 3, 1, "", "compute_intersect"], [524, 3, 1, "", "compute_limb_jacobian"], [525, 3, 1, "", "find_limbs"], [526, 3, 1, "", "rotate"], [527, 3, 1, "", "trace"], [528, 3, 1, "", "translate"]], "giant.ray_tracer.shapes.solid": [[529, 1, 1, "", "Solid"]], "giant.ray_tracer.shapes.solid.Solid": [[529, 2, 1, "", "bounding_box"], [530, 3, 1, "", "compute_intersect"], [531, 3, 1, "", "compute_limb_jacobian"], [532, 3, 1, "", "find_limbs"], [529, 2, 1, "", "id"], [533, 3, 1, "", "rotate"], [534, 3, 1, "", "trace"], [535, 3, 1, "", "translate"]], "giant.ray_tracer.shapes.surface": [[536, 1, 1, "", "RawSurface"], [546, 1, 1, "", "Surface"], [553, 1, 1, "", "Surface32"], [563, 1, 1, "", "Surface64"], [574, 5, 1, "", "find_limbs_surface"]], "giant.ray_tracer.shapes.surface.RawSurface": [[536, 2, 1, "", "albedos"], [536, 2, 1, "", "bounding_box"], [537, 3, 1, "", "compute_bounding_box"], [538, 3, 1, "", "compute_intersect"], [539, 3, 1, "", "compute_limb_jacobian"], [540, 3, 1, "", "compute_reference_ellipsoid"], [536, 2, 1, "", "facets"], [541, 3, 1, "", "find_limbs"], [542, 3, 1, "", "merge"], [536, 2, 1, "", "normals"], [536, 2, 1, "", "num_faces"], [536, 2, 1, "", "reference_ellipsoid"], [543, 3, 1, "", "rotate"], [536, 2, 1, "", "stacked_vertices"], [544, 3, 1, "", "trace"], [545, 3, 1, "", "translate"], [536, 2, 1, "", "vertices"]], "giant.ray_tracer.shapes.surface.Surface": [[546, 2, 1, "", "bounding_box"], [547, 3, 1, "", "compute_intersect"], [548, 3, 1, "", "compute_limb_jacobian"], [549, 3, 1, "", "find_limbs"], [546, 2, 1, "", "reference_ellipsoid"], [550, 3, 1, "", "rotate"], [551, 3, 1, "", "trace"], [552, 3, 1, "", "translate"]], "giant.ray_tracer.shapes.surface.Surface32": [[553, 2, 1, "", "albedos"], [553, 2, 1, "", "bounding_box"], [554, 3, 1, "", "compute_bounding_box"], [555, 3, 1, "", "compute_intersect"], [556, 3, 1, "", "compute_limb_jacobian"], [557, 3, 1, "", "compute_reference_ellipsoid"], [553, 2, 1, "", "facets"], [558, 3, 1, "", "find_limbs"], [559, 3, 1, "", "merge"], [553, 2, 1, "", "normals"], [553, 2, 1, "", "num_faces"], [553, 2, 1, "", "reference_ellipsoid"], [560, 3, 1, "", "rotate"], [553, 2, 1, "", "stacked_vertices"], [561, 3, 1, "", "trace"], [562, 3, 1, "", "translate"], [553, 2, 1, "", "vertices"]], "giant.ray_tracer.shapes.surface.Surface64": [[563, 2, 1, "", "albedos"], [563, 2, 1, "", "bounding_box"], [564, 3, 1, "", "compute_bounding_box"], [565, 3, 1, "", "compute_intersect"], [566, 3, 1, "", "compute_limb_jacobian"], [567, 3, 1, "", "compute_normals"], [568, 3, 1, "", "compute_reference_ellipsoid"], [563, 2, 1, "", "facets"], [569, 3, 1, "", "find_limbs"], [570, 3, 1, "", "merge"], [563, 2, 1, "", "normals"], [563, 2, 1, "", "num_faces"], [563, 2, 1, "", "reference_ellipsoid"], [571, 3, 1, "", "rotate"], [563, 2, 1, "", "stacked_vertices"], [572, 3, 1, "", "trace"], [573, 3, 1, "", "translate"], [563, 2, 1, "", "vertices"]], "giant.ray_tracer.shapes.triangle": [[575, 1, 1, "", "Triangle32"], [587, 1, 1, "", "Triangle64"]], "giant.ray_tracer.shapes.triangle.Triangle32": [[575, 2, 1, "", "albedos"], [575, 2, 1, "", "bounding_box"], [576, 3, 1, "", "compute_bounding_box"], [577, 3, 1, "", "compute_intersect"], [578, 3, 1, "", "compute_limb_jacobian"], [579, 3, 1, "", "compute_normals"], [580, 3, 1, "", "compute_reference_ellipsoid"], [575, 2, 1, "", "facets"], [581, 3, 1, "", "find_limbs"], [582, 3, 1, "", "get_albedo"], [583, 3, 1, "", "merge"], [575, 2, 1, "", "normals"], [575, 2, 1, "", "num_faces"], [575, 2, 1, "", "reference_ellipsoid"], [584, 3, 1, "", "rotate"], [575, 2, 1, "", "sides"], [575, 2, 1, "", "stacked_vertices"], [585, 3, 1, "", "trace"], [586, 3, 1, "", "translate"], [575, 2, 1, "", "vertices"]], "giant.ray_tracer.shapes.triangle.Triangle64": [[587, 2, 1, "", "albedos"], [587, 2, 1, "", "bounding_box"], [588, 3, 1, "", "compute_bounding_box"], [589, 3, 1, "", "compute_intersect"], [590, 3, 1, "", "compute_limb_jacobian"], [591, 3, 1, "", "compute_normals"], [592, 3, 1, "", "compute_reference_ellipsoid"], [587, 2, 1, "", "facets"], [593, 3, 1, "", "find_limbs"], [594, 3, 1, "", "get_albedo"], [595, 3, 1, "", "merge"], [587, 2, 1, "", "normals"], [587, 2, 1, "", "num_faces"], [587, 2, 1, "", "reference_ellipsoid"], [596, 3, 1, "", "rotate"], [587, 2, 1, "", "sides"], [587, 2, 1, "", "stacked_vertices"], [597, 3, 1, "", "trace"], [598, 3, 1, "", "translate"], [587, 2, 1, "", "vertices"]], "giant.ray_tracer.utilities": [[599, 5, 1, "", "compute_com"], [600, 5, 1, "", "compute_stats"], [601, 5, 1, "", "find_limbs"], [602, 5, 1, "", "ref_ellipse"], [603, 5, 1, "", "to_block"]], "giant.relative_opnav": [[692, 0, 0, "-", "estimators"], [693, 0, 0, "-", "relnav_class"]], "giant.relative_opnav.estimators": [[624, 0, 0, "-", "cross_correlation"], [625, 0, 0, "-", "ellipse_matching"], [626, 0, 0, "-", "estimator_interface_abc"], [627, 0, 0, "-", "limb_matching"], [628, 0, 0, "-", "moment_algorithm"], [629, 0, 0, "-", "sfn"], [630, 0, 0, "-", "unresolved"]], "giant.relative_opnav.estimators.cross_correlation": [[604, 1, 1, "", "XCorrCenterFinding"]], "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding": [[604, 2, 1, "", "blur"], [604, 2, 1, "", "brdf"], [604, 4, 1, "", "camera"], [605, 3, 1, "", "compute_rays"], [604, 2, 1, "", "computed_bearings"], [604, 2, 1, "", "details"], [606, 3, 1, "", "estimate"], [604, 2, 1, "", "generates_templates"], [604, 2, 1, "", "grid_size"], [604, 2, 1, "", "min_corr_score"], [604, 2, 1, "", "observable_type"], [604, 2, 1, "", "observed_bearings"], [604, 2, 1, "", "peak_finder"], [604, 2, 1, "", "rays"], [604, 2, 1, "", "relnav_handler"], [607, 3, 1, "", "render"], [608, 3, 1, "", "reset"], [604, 4, 1, "", "scene"], [604, 2, 1, "", "search_region"], [609, 3, 1, "", "target_generator"], [604, 2, 1, "", "technique"], [604, 2, 1, "", "template_overflow_bounds"]], "giant.relative_opnav.estimators.ellipse_matching": [[610, 1, 1, "", "EllipseMatching"], [615, 1, 1, "", "LimbExtractionMethods"], [616, 1, 1, "", "LimbScanner"]], "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching": [[610, 4, 1, "", "camera"], [610, 2, 1, "", "computed_bearings"], [610, 2, 1, "", "computed_positions"], [610, 2, 1, "", "details"], [611, 3, 1, "", "estimate"], [612, 3, 1, "", "extract_and_pair_limbs"], [610, 2, 1, "", "extraction_method"], [610, 2, 1, "", "generates_templates"], [610, 2, 1, "", "interpolator"], [610, 2, 1, "", "limbs_camera"], [610, 2, 1, "", "observable_type"], [610, 2, 1, "", "observed_bearings"], [610, 2, 1, "", "observed_positions"], [610, 2, 1, "", "recenter"], [610, 2, 1, "", "relnav_handler"], [613, 3, 1, "", "reset"], [610, 4, 1, "", "scene"], [614, 3, 1, "", "target_generator"], [610, 2, 1, "", "technique"]], "giant.relative_opnav.estimators.ellipse_matching.LimbExtractionMethods": [[615, 2, 1, "", "EDGE_DETECTION"], [615, 2, 1, "", "LIMB_SCANNING"]], "giant.relative_opnav.estimators.ellipse_matching.LimbScanner": [[617, 3, 1, "", "extract_limbs"], [618, 3, 1, "", "predict_limbs"]], "giant.relative_opnav.estimators.estimator_interface_abc": [[619, 1, 1, "", "RelNavEstimator"], [623, 1, 1, "", "RelNavObservablesType"]], "giant.relative_opnav.estimators.estimator_interface_abc.RelNavEstimator": [[619, 4, 1, "", "camera"], [619, 2, 1, "", "computed_bearings"], [619, 2, 1, "", "computed_positions"], [619, 2, 1, "", "details"], [620, 3, 1, "", "estimate"], [619, 2, 1, "", "generates_templates"], [619, 2, 1, "", "observable_type"], [619, 2, 1, "", "observed_bearings"], [619, 2, 1, "", "observed_positions"], [619, 2, 1, "", "relnav_handler"], [621, 3, 1, "", "reset"], [619, 4, 1, "", "scene"], [622, 3, 1, "", "target_generator"], [619, 2, 1, "", "technique"], [619, 2, 1, "", "templates"]], "giant.relative_opnav.estimators.estimator_interface_abc.RelNavObservablesType": [[623, 2, 1, "", "CENTER_FINDING"], [623, 2, 1, "", "CONSTRAINT"], [623, 2, 1, "", "CUSTOM"], [623, 2, 1, "", "LANDMARK"], [623, 2, 1, "", "LIMB"], [623, 2, 1, "", "RELATIVE_POSITION"]], "giant.relative_opnav.estimators.limb_matching": [[631, 1, 1, "", "LimbMatching"]], "giant.relative_opnav.estimators.limb_matching.LimbMatching": [[631, 4, 1, "", "camera"], [632, 3, 1, "", "compute_jacobian"], [631, 2, 1, "", "computed_bearings"], [631, 2, 1, "", "computed_positions"], [631, 2, 1, "", "details"], [633, 3, 1, "", "estimate"], [634, 3, 1, "", "extract_and_pair_limbs"], [631, 2, 1, "", "extraction_method"], [631, 2, 1, "", "generates_templates"], [631, 2, 1, "", "interpolator"], [631, 2, 1, "", "limbs_camera"], [631, 2, 1, "", "observable_type"], [631, 2, 1, "", "observed_bearings"], [631, 2, 1, "", "observed_positions"], [631, 2, 1, "", "recenter"], [631, 2, 1, "", "relnav_handler"], [635, 3, 1, "", "reset"], [631, 4, 1, "", "scene"], [636, 3, 1, "", "target_generator"], [631, 2, 1, "", "technique"]], "giant.relative_opnav.estimators.moment_algorithm": [[637, 1, 1, "", "MomentAlgorithm"]], "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm": [[637, 2, 1, "", "apparent_area_margin_of_safety"], [637, 2, 1, "", "apply_phase_correction"], [637, 4, 1, "", "camera"], [638, 3, 1, "", "compute_line_of_sight_sun_image"], [639, 3, 1, "", "compute_phase_correction"], [637, 2, 1, "", "computed_bearings"], [637, 2, 1, "", "details"], [640, 3, 1, "", "estimate"], [637, 2, 1, "", "generates_templates"], [637, 2, 1, "", "observable_type"], [637, 2, 1, "", "observed_bearings"], [641, 3, 1, "", "rastered_phase_correction"], [637, 2, 1, "", "relnav_handler"], [642, 3, 1, "", "reset"], [637, 4, 1, "", "scene"], [637, 2, 1, "", "search_distance"], [643, 3, 1, "", "simple_phase_correction"], [644, 3, 1, "", "target_generator"], [637, 2, 1, "", "technique"], [637, 2, 1, "", "use_apparent_area"]], "giant.relative_opnav.estimators.sfn": [[645, 0, 0, "-", "sfn_class"], [646, 0, 0, "-", "sfn_correlators"], [647, 0, 0, "-", "surface_features"]], "giant.relative_opnav.estimators.sfn.sfn_class": [[648, 1, 1, "", "SurfaceFeatureNavigation"], [656, 1, 1, "", "SurfaceFeatureNavigationOptions"]], "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation": [[649, 3, 1, "", "apply_options"], [648, 2, 1, "", "attitude_sigma"], [648, 4, 1, "", "camera"], [648, 2, 1, "", "cf_index"], [648, 2, 1, "", "cf_results"], [650, 3, 1, "", "compute_rays"], [648, 2, 1, "", "computed_bearings"], [648, 2, 1, "", "details"], [651, 3, 1, "", "estimate"], [648, 2, 1, "", "generates_templates"], [648, 2, 1, "", "lsq_relative_error_tolerance"], [648, 2, 1, "", "max_lsq_iterations"], [648, 2, 1, "", "measurement_sigma"], [648, 2, 1, "", "observable_type"], [648, 2, 1, "", "observed_bearings"], [648, 2, 1, "", "pnp_ransac_iterations"], [652, 3, 1, "", "pnp_solver"], [648, 2, 1, "", "position_sigma"], [648, 2, 1, "", "relnav_handler"], [653, 3, 1, "", "render"], [654, 3, 1, "", "reset"], [648, 2, 1, "", "run_pnp_solver"], [648, 4, 1, "", "scene"], [648, 2, 1, "", "second_search_region"], [648, 2, 1, "", "show_templates"], [648, 2, 1, "", "state_sigma"], [655, 3, 1, "", "target_generator"], [648, 2, 1, "", "technique"], [648, 2, 1, "id0", "visible_features"]], "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions": [[656, 2, 1, "", "attitude_sigma"], [656, 2, 1, "", "blur"], [656, 2, 1, "", "brdf"], [656, 2, 1, "", "cf_index"], [656, 2, 1, "", "cf_results"], [656, 2, 1, "", "grid_size"], [656, 2, 1, "", "lsq_relative_error_tolerance"], [656, 2, 1, "", "lsq_relative_update_tolerance"], [656, 2, 1, "", "max_lsq_iterations"], [656, 2, 1, "", "measurement_sigma"], [656, 2, 1, "", "min_corr_score"], [657, 3, 1, "", "peak_finder"], [656, 2, 1, "", "pnp_ransac_iterations"], [656, 2, 1, "", "position_sigma"], [656, 2, 1, "", "rays"], [656, 2, 1, "", "run_pnp_solver"], [656, 2, 1, "", "search_region"], [656, 2, 1, "", "second_search_region"], [656, 2, 1, "", "show_templates"], [656, 2, 1, "", "state_sigma"]], "giant.relative_opnav.estimators.sfn.sfn_correlators": [[658, 5, 1, "", "sfn_correlator"]], "giant.relative_opnav.estimators.sfn.surface_features": [[659, 1, 1, "", "FeatureCatalogue"], [665, 1, 1, "", "SurfaceFeature"], [672, 1, 1, "", "VisibleFeatureFinder"], [674, 1, 1, "", "VisibleFeatureFinderOptions"]], "giant.relative_opnav.estimators.sfn.surface_features.FeatureCatalogue": [[659, 4, 1, "", "bounding_box"], [659, 4, 1, "", "feature_finder"], [660, 3, 1, "", "get_first"], [659, 4, 1, "", "memory_percent_unload_threshold"], [661, 3, 1, "", "rotate"], [659, 4, 1, "", "stale_count_unload_threshold"], [662, 3, 1, "", "trace"], [663, 3, 1, "", "translate"], [664, 3, 1, "", "update_feature_paths"]], "giant.relative_opnav.estimators.sfn.surface_features.SurfaceFeature": [[665, 4, 1, "", "bounding_box"], [666, 3, 1, "", "found"], [667, 3, 1, "", "load"], [665, 4, 1, "", "loaded"], [668, 3, 1, "", "not_found"], [665, 4, 1, "", "shape"], [669, 3, 1, "", "trace"], [670, 3, 1, "", "update_file"], [671, 3, 1, "", "update_path"]], "giant.relative_opnav.estimators.sfn.surface_features.VisibleFeatureFinder": [[673, 3, 1, "", "apply_options"]], "giant.relative_opnav.estimators.sfn.surface_features.VisibleFeatureFinderOptions": [[674, 2, 1, "", "feature_list"], [674, 2, 1, "", "gsd_scaling"], [674, 2, 1, "", "incident_angle_maximum"], [674, 2, 1, "", "off_boresight_angle_maximum"], [674, 2, 1, "", "percent_in_fov"], [674, 2, 1, "", "reflectance_angle_maximum"], [674, 2, 1, "", "target_index"]], "giant.relative_opnav.estimators.unresolved": [[675, 1, 1, "", "PhaseCorrectionType"], [676, 1, 1, "", "PhaseCorrector"], [684, 1, 1, "", "UnresolvedCenterFinding"]], "giant.relative_opnav.estimators.unresolved.PhaseCorrectionType": [[675, 2, 1, "", "RASTERED"], [675, 2, 1, "", "SIMPLE"]], "giant.relative_opnav.estimators.unresolved.PhaseCorrector": [[676, 4, 1, "", "camera"], [677, 3, 1, "", "compute_line_of_sight_sun_image"], [678, 3, 1, "", "compute_phase_correction"], [679, 3, 1, "", "estimate"], [676, 2, 1, "", "generates_templates"], [676, 2, 1, "", "observable_type"], [680, 3, 1, "", "rastered_phase_correction"], [676, 2, 1, "", "relnav_handler"], [681, 3, 1, "", "reset"], [676, 4, 1, "", "scene"], [682, 3, 1, "", "simple_phase_correction"], [683, 3, 1, "", "target_generator"], [676, 2, 1, "", "technique"]], "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding": [[684, 2, 1, "", "brdf"], [684, 4, 1, "", "camera"], [685, 3, 1, "", "compute_line_of_sight_sun_image"], [686, 3, 1, "", "compute_phase_correction"], [684, 2, 1, "", "computed_bearings"], [684, 2, 1, "", "details"], [687, 3, 1, "", "estimate"], [684, 2, 1, "", "generates_templates"], [684, 2, 1, "", "observable_type"], [684, 2, 1, "", "observed_bearings"], [684, 2, 1, "", "phase_correction_type"], [688, 3, 1, "", "rastered_phase_correction"], [684, 2, 1, "", "relnav_handler"], [689, 3, 1, "", "reset"], [684, 4, 1, "", "scene"], [690, 3, 1, "", "simple_phase_correction"], [691, 3, 1, "", "target_generator"], [684, 2, 1, "", "technique"]], "giant.relative_opnav.relnav_class": [[694, 6, 1, "", "RESULTS_DTYPE"], [695, 1, 1, "", "RelativeOpNav"]], "giant.relative_opnav.relnav_class.RelativeOpNav": [[696, 3, 1, "", "add_images"], [697, 3, 1, "", "auto_estimate"], [695, 4, 1, "", "camera"], [695, 2, 1, "", "center_finding_results"], [695, 4, 1, "", "cross_correlation"], [695, 2, 1, "", "cross_correlation_details"], [698, 3, 1, "", "cross_correlation_estimate"], [699, 3, 1, "", "default_estimator"], [695, 4, 1, "", "ellipse_matching"], [695, 2, 1, "", "ellipse_matching_details"], [700, 3, 1, "", "ellipse_matching_estimate"], [695, 2, 1, "", "extended_body_cutoff"], [695, 4, 1, "", "image_processing"], [695, 2, 1, "", "landmark_results"], [695, 4, 1, "", "limb_matching"], [695, 2, 1, "", "limb_matching_details"], [701, 3, 1, "", "limb_matching_estimate"], [695, 2, 1, "", "limb_results"], [695, 4, 1, "", "model"], [695, 4, 1, "", "moment_algorithm"], [695, 2, 1, "", "moment_algorithm_details"], [702, 3, 1, "", "moment_algorithm_estimate"], [703, 3, 1, "", "process_image"], [704, 3, 1, "", "register"], [695, 2, 1, "", "relative_position_results"], [705, 3, 1, "", "reset_image_processing"], [695, 2, 1, "", "save_templates"], [695, 2, 1, "", "saved_templates"], [695, 4, 1, "", "scene"], [695, 2, 1, "", "sfn_details"], [695, 4, 1, "", "unresolved"], [695, 2, 1, "", "unresolved_details"], [706, 3, 1, "", "unresolved_estimate"], [707, 3, 1, "", "update_image_processing"]], "giant.rotations": [[708, 1, 1, "", "Rotation"], [713, 5, 1, "", "euler_to_rotmat"], [714, 5, 1, "", "nlerp"], [715, 5, 1, "", "quaternion_inverse"], [716, 5, 1, "", "quaternion_multiplication"], [717, 5, 1, "", "quaternion_to_euler"], [718, 5, 1, "", "quaternion_to_rotmat"], [719, 5, 1, "", "quaternion_to_rotvec"], [720, 5, 1, "", "rot_x"], [721, 5, 1, "", "rot_y"], [722, 5, 1, "", "rot_z"], [723, 5, 1, "", "rotmat_to_euler"], [724, 5, 1, "", "rotmat_to_quaternion"], [725, 5, 1, "", "rotvec_to_quaternion"], [726, 5, 1, "", "rotvec_to_rotmat"], [727, 5, 1, "", "skew"], [728, 5, 1, "", "slerp"]], "giant.rotations.Rotation": [[709, 3, 1, "", "copy"], [710, 3, 1, "", "interp_attitude"], [711, 3, 1, "", "inv"], [708, 4, 1, "", "matrix"], [708, 4, 1, "", "q"], [708, 4, 1, "", "q_scalar"], [708, 4, 1, "", "q_vector"], [708, 4, 1, "", "quaternion"], [712, 3, 1, "", "rotate"], [708, 4, 1, "", "vector"]], "giant.scripts": [[737, 0, 0, "-", "build_catalogue"], [738, 0, 0, "-", "generate_sample_data"], [739, 0, 0, "-", "ingest_shape"], [740, 0, 0, "-", "merge_cameras"], [741, 0, 0, "-", "mosaic_images"], [742, 0, 0, "-", "shape_stats"], [743, 0, 0, "-", "spc_to_feature_catalogue"], [744, 0, 0, "-", "spc_to_results"], [745, 0, 0, "-", "tile_shape"]], "giant.scripts.generate_sample_data": [[729, 6, 1, "", "MODEL"], [730, 6, 1, "", "PSF"], [731, 5, 1, "", "camera_orientation"], [732, 5, 1, "", "camera_position"], [733, 5, 1, "", "sun_orientation"], [734, 5, 1, "", "sun_position"], [735, 5, 1, "", "target_orientation"], [736, 5, 1, "", "target_position"]], "giant.stellar_opnav": [[751, 0, 0, "-", "estimators"], [752, 0, 0, "-", "star_identification"], [753, 0, 0, "-", "stellar_class"], [754, 0, 0, "-", "visualizer"]], "giant.stellar_opnav.estimators": [[746, 1, 1, "", "AttitudeEstimator"], [748, 1, 1, "", "DavenportQMethod"]], "giant.stellar_opnav.estimators.AttitudeEstimator": [[746, 2, 1, "", "base_frame_directions"], [747, 3, 1, "", "estimate"], [746, 4, 1, "", "post_fit_covariance"], [746, 2, 1, "", "rotation"], [746, 2, 1, "", "target_frame_directions"], [746, 2, 1, "", "weighted_estimation"], [746, 2, 1, "", "weights"]], "giant.stellar_opnav.estimators.DavenportQMethod": [[748, 2, 1, "", "base_frame_directions"], [749, 3, 1, "", "compute_residuals"], [750, 3, 1, "", "estimate"], [748, 4, 1, "", "post_fit_covariance"], [748, 2, 1, "", "rotation"], [748, 2, 1, "", "target_frame_directions"], [748, 2, 1, "", "weighted_estimation"], [748, 2, 1, "", "weights"]], "giant.stellar_opnav.star_identification": [[755, 1, 1, "", "StarID"]], "giant.stellar_opnav.star_identification.StarID": [[755, 2, 1, "", "a_priori_rotation_cat2camera"], [755, 2, 1, "", "camera_position"], [755, 2, 1, "", "camera_velocity"], [755, 2, 1, "", "catalogue"], [756, 3, 1, "", "compute_pointing"], [755, 2, 1, "", "extracted_image_points"], [757, 3, 1, "", "id_stars"], [755, 2, 1, "", "matched_catalogue_image_points"], [755, 2, 1, "", "matched_catalogue_star_records"], [755, 2, 1, "", "matched_catalogue_unit_vectors"], [755, 2, 1, "", "matched_extracted_image_points"], [755, 2, 1, "", "matched_weights_inertial"], [755, 2, 1, "", "matched_weights_picture"], [755, 2, 1, "", "max_combos"], [755, 2, 1, "", "max_magnitude"], [755, 2, 1, "", "min_magnitude"], [755, 2, 1, "", "model"], [758, 3, 1, "", "project_stars"], [755, 2, 1, "", "queried_catalogue_image_points"], [755, 2, 1, "", "queried_catalogue_star_records"], [755, 2, 1, "", "queried_catalogue_unit_vectors"], [755, 2, 1, "", "queried_weights_inertial"], [755, 2, 1, "", "queried_weights_picture"], [759, 3, 1, "", "query_catalogue"], [760, 3, 1, "", "ransac"], [761, 3, 1, "", "ransac_iter_test"], [755, 2, 1, "", "ransac_tolerance"], [755, 2, 1, "", "second_closest_check"], [755, 2, 1, "", "tolerance"], [755, 2, 1, "", "unique_check"], [755, 2, 1, "", "unmatched_catalogue_image_points"], [755, 2, 1, "", "unmatched_catalogue_star_records"], [755, 2, 1, "", "unmatched_catalogue_unit_vectors"], [755, 2, 1, "", "unmatched_weights_inertial"], [755, 2, 1, "", "unmatched_weights_picture"], [755, 2, 1, "", "use_mp"]], "giant.stellar_opnav.stellar_class": [[762, 1, 1, "", "StellarOpNav"]], "giant.stellar_opnav.stellar_class.StellarOpNav": [[763, 3, 1, "", "add_images"], [762, 4, 1, "", "attitude_estimator"], [762, 4, 1, "", "camera"], [764, 3, 1, "", "estimate_attitude"], [765, 3, 1, "", "id_stars"], [762, 4, 1, "", "image_processing"], [762, 4, 1, "", "ip_extracted_image_points"], [762, 4, 1, "", "ip_image_illums"], [762, 4, 1, "", "ip_psfs"], [762, 4, 1, "", "ip_snrs"], [762, 4, 1, "", "ip_stats"], [762, 4, 1, "", "matched_catalogue_image_points"], [762, 4, 1, "", "matched_catalogue_star_records"], [762, 4, 1, "", "matched_catalogue_unit_vectors_camera"], [762, 4, 1, "", "matched_catalogue_unit_vectors_inertial"], [762, 4, 1, "", "matched_extracted_image_points"], [762, 4, 1, "", "matched_image_illums"], [762, 4, 1, "", "matched_psfs"], [762, 4, 1, "", "matched_snrs"], [766, 3, 1, "", "matched_star_residuals"], [762, 4, 1, "", "matched_stats"], [762, 4, 1, "", "matched_weights_inertial"], [762, 4, 1, "", "matched_weights_picture"], [762, 4, 1, "", "model"], [762, 2, 1, "", "process_stars"], [762, 4, 1, "", "queried_catalogue_image_points"], [762, 4, 1, "", "queried_catalogue_star_records"], [762, 4, 1, "", "queried_catalogue_unit_vectors"], [762, 4, 1, "", "queried_weights_inertial"], [762, 4, 1, "", "queried_weights_picture"], [767, 3, 1, "", "remove_matched_stars"], [768, 3, 1, "", "remove_outliers"], [769, 3, 1, "", "reproject_stars"], [770, 3, 1, "", "reset_attitude_estimator"], [771, 3, 1, "", "reset_image_processing"], [772, 3, 1, "", "reset_star_id"], [773, 3, 1, "", "review_outliers"], [762, 2, 1, "", "scene"], [774, 3, 1, "", "sid_summary"], [762, 4, 1, "", "star_id"], [762, 4, 1, "", "unmatched_catalogue_image_points"], [762, 4, 1, "", "unmatched_catalogue_star_records"], [762, 4, 1, "", "unmatched_catalogue_unit_vectors"], [762, 4, 1, "", "unmatched_extracted_image_points"], [762, 4, 1, "", "unmatched_image_illums"], [762, 4, 1, "", "unmatched_psfs"], [762, 4, 1, "", "unmatched_snrs"], [762, 4, 1, "", "unmatched_stats"], [762, 4, 1, "", "unmatched_weights_inertial"], [762, 4, 1, "", "unmatched_weights_picture"], [775, 3, 1, "", "update_attitude_estimator"], [776, 3, 1, "", "update_image_processing"], [777, 3, 1, "", "update_star_id"], [762, 2, 1, "", "use_weights"]], "giant.stellar_opnav.visualizer": [[778, 1, 1, "", "OutlierCallback"], [779, 5, 1, "", "plot_residuals_vs_magnitude"], [780, 5, 1, "", "plot_residuals_vs_temperature"], [781, 5, 1, "", "residual_histograms"], [782, 5, 1, "", "show_id_results"], [783, 5, 1, "", "show_outlier"]], "giant.stellar_opnav.visualizer.OutlierCallback": [[778, 2, 1, "", "centroid"], [778, 2, 1, "", "image_number"], [778, 3, 1, "", "keep"], [778, 2, 1, "", "outlier_number"], [778, 2, 1, "", "plot"], [778, 3, 1, "", "remove"], [778, 2, 1, "", "removed"]], "giant.ufo": [[841, 0, 0, "-", "clearable_queue"], [842, 0, 0, "-", "detector"], [843, 0, 0, "-", "dynamics"], [844, 0, 0, "-", "ekf_tracker"], [845, 0, 0, "-", "extended_kalman_filter"], [846, 0, 0, "-", "measurements"], [847, 0, 0, "-", "state_initializer"], [848, 0, 0, "-", "ufo_class"], [849, 0, 0, "-", "visualizer"]], "giant.ufo.clearable_queue": [[789, 1, 1, "", "ClearableQueue"], [801, 1, 1, "", "SharedCounter"]], "giant.ufo.clearable_queue.ClearableQueue": [[790, 3, 1, "", "cancel_join_thread"], [791, 3, 1, "", "clear"], [792, 3, 1, "", "close"], [793, 3, 1, "", "empty"], [794, 3, 1, "", "full"], [795, 3, 1, "", "get"], [796, 3, 1, "", "get_nowait"], [797, 3, 1, "", "join_thread"], [798, 3, 1, "", "put"], [799, 3, 1, "", "put_nowait"], [800, 3, 1, "", "qsize"]], "giant.ufo.clearable_queue.SharedCounter": [[802, 3, 1, "", "increment"], [801, 4, 1, "", "value"]], "giant.ufo.detector": [[803, 1, 1, "", "Detector"], [812, 5, 1, "", "unit_to_radec_jacobian"]], "giant.ufo.detector.Detector": [[804, 3, 1, "", "add_images"], [805, 3, 1, "", "clear_results"], [806, 3, 1, "", "find_ufos"], [807, 3, 1, "", "identify_hot_pixels_and_unmatched_stars"], [808, 3, 1, "", "package_results"], [809, 3, 1, "", "remove_duplicates"], [810, 3, 1, "", "save_results"], [811, 3, 1, "", "update_attitude"]], "giant.ufo.dynamics": [[813, 1, 1, "", "Dynamics"], [816, 1, 1, "", "SolRadAndGravityDynamics"], [823, 1, 1, "", "SpiceGravityDynamics"], [829, 5, 1, "", "zero3"]], "giant.ufo.dynamics.Dynamics": [[814, 3, 1, "", "compute_dynamics"], [815, 3, 1, "", "propagate"]], "giant.ufo.dynamics.SolRadAndGravityDynamics": [[817, 3, 1, "", "compute_covariance_dynamics"], [818, 3, 1, "", "compute_dynamics"], [819, 3, 1, "", "compute_solar_radiation_acceleration"], [820, 3, 1, "", "compute_state_dynamics"], [821, 3, 1, "", "get_gm"], [822, 3, 1, "", "propagate"]], "giant.ufo.dynamics.SpiceGravityDynamics": [[824, 3, 1, "", "compute_covariance_dynamics"], [825, 3, 1, "", "compute_dynamics"], [826, 3, 1, "", "compute_state_dynamics"], [827, 3, 1, "", "get_gm"], [828, 3, 1, "", "propagate"]], "giant.ufo.ekf_tracker": [[830, 1, 1, "", "Tracker"]], "giant.ufo.ekf_tracker.Tracker": [[830, 2, 1, "", "camera"], [830, 2, 1, "", "confirmed_filters"], [830, 2, 1, "", "confirmed_particles"], [830, 2, 1, "", "confirmed_standard_deviations"], [830, 2, 1, "", "dynamics"], [830, 2, 1, "", "expected_convergence_number"], [831, 3, 1, "", "filter_ekfs"], [832, 3, 1, "", "find_initial_pairs"], [830, 2, 1, "", "initial_euclidean_threshold"], [830, 2, 1, "", "kernels_to_load"], [830, 2, 1, "", "maximum_forward_images"], [830, 2, 1, "", "maximum_image_timedelta"], [830, 2, 1, "", "maximum_mahalanobis_distance_squared"], [830, 2, 1, "", "maximum_paths_per_image"], [830, 2, 1, "", "maximum_paths_total"], [830, 2, 1, "", "maximum_residual_standard_deviation"], [830, 2, 1, "", "maximum_time_outs"], [830, 2, 1, "", "maximum_track_length"], [830, 2, 1, "", "maximum_tracking_time_per_image"], [830, 2, 1, "", "measurement_covariance"], [830, 2, 1, "", "minimum_number_of_measurements"], [830, 2, 1, "", "observation_ids"], [830, 2, 1, "", "observation_trees"], [830, 2, 1, "", "processes"], [830, 2, 1, "", "reduced_paths_forward_per_image"], [833, 3, 1, "", "save_results"], [830, 2, 1, "", "scene"], [830, 2, 1, "", "search_distance_function"], [830, 2, 1, "", "state_initializer"], [834, 3, 1, "", "track"]], "giant.ufo.extended_kalman_filter": [[835, 1, 1, "", "ExtendedKalmanFilter"]], "giant.ufo.extended_kalman_filter.ExtendedKalmanFilter": [[836, 3, 1, "", "compute_residual_statistics"], [837, 3, 1, "", "initialize"], [838, 3, 1, "", "process_measurement"], [839, 3, 1, "", "propagate_and_predict"], [840, 3, 1, "", "smooth"]], "giant.ufo.measurements": [[850, 1, 1, "", "Measurement"], [854, 1, 1, "", "OpticalBearingMeasurement"]], "giant.ufo.measurements.Measurement": [[851, 3, 1, "", "compare_residuals"], [852, 3, 1, "", "compute_jacobian"], [850, 4, 1, "", "covariance"], [850, 4, 1, "", "identity"], [850, 4, 1, "", "observed"], [850, 4, 1, "", "observer_location"], [853, 3, 1, "", "predict"], [850, 4, 1, "", "time"]], "giant.ufo.measurements.OpticalBearingMeasurement": [[855, 3, 1, "", "compare_residuals"], [856, 3, 1, "", "compute_jacobian"], [854, 4, 1, "", "covariance"], [854, 4, 1, "", "identity"], [854, 4, 1, "", "observed"], [854, 4, 1, "", "observer_location"], [857, 3, 1, "", "predict"], [854, 4, 1, "", "time"]], "giant.ufo.state_initializer": [[858, 1, 1, "", "ORExInitializer"]], "giant.ufo.state_initializer.ORExInitializer": [[858, 2, 1, "", "initial_cram"], [858, 2, 1, "", "initial_cram_variance"], [858, 2, 1, "", "initial_range"], [858, 2, 1, "", "initial_velocity_variance"], [858, 2, 1, "", "measurement_covariance_multiplier"], [858, 2, 1, "", "range_variance"]], "giant.ufo.ufo_class": [[859, 1, 1, "", "UFO"]], "giant.ufo.ufo_class.UFO": [[860, 3, 1, "", "detect"], [861, 3, 1, "", "save_results"], [862, 3, 1, "", "track"], [863, 3, 1, "", "visualize_detection_results"]], "giant.ufo.visualizer": [[864, 5, 1, "", "show_detections"]], "giant.utilities": [[865, 0, 0, "-", "outlier_identifier"], [866, 0, 0, "-", "random_combination"], [867, 0, 0, "-", "spice_interface"], [868, 0, 0, "-", "stereophotoclinometry"], [869, 0, 0, "-", "tee"]], "giant.utilities.outlier_identifier": [[870, 5, 1, "", "get_outliers"]], "giant.utilities.random_combination": [[871, 1, 1, "", "RandomCombinations"]], "giant.utilities.spice_interface": [[872, 6, 1, "", "HAS_SPICE"], [873, 6, 1, "", "J2000_EPOCH"], [874, 6, 1, "", "LEAP_SECONDS_LIST"], [875, 1, 1, "", "SpiceOrientation"], [876, 1, 1, "", "SpicePosition"], [879, 1, 1, "", "SpiceState"], [882, 5, 1, "", "create_callable_orientation"], [883, 5, 1, "", "create_callable_position"], [884, 5, 1, "", "create_callable_state"], [885, 5, 1, "", "datetime_to_et"], [886, 5, 1, "", "et_callable_to_datetime_callable"], [887, 5, 1, "", "leap_seconds"]], "giant.utilities.spice_interface.SpiceOrientation": [[875, 2, 1, "", "from_frame"], [875, 2, 1, "", "to_frame"]], "giant.utilities.spice_interface.SpicePosition": [[876, 2, 1, "", "corrections"], [877, 3, 1, "", "light_time"], [876, 2, 1, "", "observer"], [878, 3, 1, "", "position_light_time"], [876, 2, 1, "", "reference_frame"], [876, 2, 1, "", "target"]], "giant.utilities.spice_interface.SpiceState": [[879, 2, 1, "", "corrections"], [880, 3, 1, "", "light_time"], [879, 2, 1, "", "observer"], [881, 3, 1, "", "position_light_time"], [879, 2, 1, "", "reference_frame"], [879, 2, 1, "", "target"]], "giant.utilities.stereophotoclinometry": [[888, 6, 1, "", "DATE_FMT"], [889, 1, 1, "", "Image"], [892, 1, 1, "", "Landmark"], [895, 1, 1, "", "Maplet"], [899, 1, 1, "", "Nominal"], [902, 1, 1, "", "Regress"], [904, 1, 1, "", "ShapeModel"], [908, 1, 1, "", "Summary"], [911, 5, 1, "", "get_distortion"]], "giant.utilities.stereophotoclinometry.Image": [[889, 2, 1, "", "data"], [889, 2, 1, "", "endianess"], [889, 2, 1, "", "file_name"], [889, 2, 1, "", "integer_size"], [889, 2, 1, "", "maximum_illumination"], [889, 2, 1, "", "n_cols"], [889, 2, 1, "", "n_rows"], [890, 3, 1, "", "read"], [891, 3, 1, "", "write"]], "giant.utilities.stereophotoclinometry.Landmark": [[892, 2, 1, "", "file_name"], [892, 2, 1, "", "name"], [893, 3, 1, "", "read"], [892, 2, 1, "", "rmslmk"], [892, 2, 1, "", "rot_map2bod"], [892, 2, 1, "", "scale"], [892, 2, 1, "", "sigkm"], [892, 2, 1, "", "sigma_lmk"], [892, 2, 1, "", "size"], [892, 2, 1, "", "vlm"], [894, 3, 1, "", "write"]], "giant.utilities.stereophotoclinometry.Maplet": [[895, 2, 1, "", "albedos"], [895, 2, 1, "", "file_name"], [896, 3, 1, "", "get_triangles"], [895, 2, 1, "", "heights"], [895, 2, 1, "", "hscale"], [895, 2, 1, "", "name"], [895, 2, 1, "", "position_objmap"], [897, 3, 1, "", "read"], [895, 2, 1, "", "rotation_maplet2body"], [895, 2, 1, "", "scale"], [895, 2, 1, "", "size"], [898, 3, 1, "", "write"]], "giant.utilities.stereophotoclinometry.Nominal": [[899, 2, 1, "", "ending"], [899, 2, 1, "", "file_name"], [899, 2, 1, "", "frame"], [899, 2, 1, "", "image_name"], [899, 2, 1, "", "position_camera_to_target"], [900, 3, 1, "", "read"], [899, 2, 1, "", "rotation_target_fixed_to_camera"], [899, 2, 1, "", "sig_pos_camera_to_target"], [899, 2, 1, "", "sig_rot_target_fixed_to_camera"], [899, 2, 1, "", "velocity"], [901, 3, 1, "", "write"]], "giant.utilities.stereophotoclinometry.Regress": [[902, 2, 1, "", "camera_name"], [902, 2, 1, "", "ephemeris_time"], [902, 2, 1, "", "file_name"], [902, 2, 1, "", "focal_length"], [902, 2, 1, "", "kernel_list"], [902, 2, 1, "", "kx"], [902, 2, 1, "", "kxy"], [902, 2, 1, "", "ky"], [902, 2, 1, "", "kyx"], [902, 2, 1, "", "landmarks"], [902, 2, 1, "", "lmk_body_fixed_vec_sigmas"], [902, 2, 1, "", "lmk_body_fixed_vecs"], [902, 2, 1, "", "lmk_jacobians"], [902, 2, 1, "", "lmk_observed_pixlines"], [902, 2, 1, "", "lmk_pred_pixlines"], [902, 2, 1, "", "n_cols"], [902, 2, 1, "", "n_rows"], [902, 2, 1, "", "nom_camera_dec"], [902, 2, 1, "", "nom_camera_ra"], [902, 2, 1, "", "nom_camera_twist"], [902, 2, 1, "", "nom_pos_sc2obj"], [902, 2, 1, "", "observation_date"], [902, 2, 1, "", "orig_image_name"], [902, 2, 1, "", "pointing_sigma"], [902, 2, 1, "", "pos_sigma"], [902, 2, 1, "", "px"], [902, 2, 1, "", "py"], [903, 3, 1, "", "read"], [902, 2, 1, "", "sf_camera_dec"], [902, 2, 1, "", "sf_camera_ra"], [902, 2, 1, "", "sf_camera_twist"], [902, 2, 1, "", "sf_pos_sc2obj"], [902, 2, 1, "", "spacecraft"], [902, 2, 1, "", "spc_image_id"], [902, 2, 1, "", "sun_dir"], [902, 2, 1, "", "target_name"], [902, 2, 1, "", "titv_mat"], [902, 2, 1, "", "tpmi_mat"], [902, 2, 1, "", "twist_sigma"]], "giant.utilities.stereophotoclinometry.ShapeModel": [[904, 2, 1, "", "albedos"], [904, 2, 1, "", "file_name"], [905, 3, 1, "", "get_triangles"], [904, 2, 1, "", "grid_size"], [906, 3, 1, "", "read"], [904, 2, 1, "", "vertices"], [907, 3, 1, "", "write"]], "giant.utilities.stereophotoclinometry.Summary": [[908, 2, 1, "", "direction_target_to_sun"], [908, 2, 1, "", "file_name"], [908, 2, 1, "", "focal_length"], [908, 2, 1, "", "image_name"], [908, 2, 1, "", "intrinsic_matrix"], [908, 2, 1, "", "landmarks"], [908, 2, 1, "", "limb_fits"], [908, 2, 1, "", "max_illum"], [908, 2, 1, "", "min_illum"], [908, 2, 1, "", "near_dist_params"], [908, 2, 1, "", "num_cols"], [908, 2, 1, "", "num_rows"], [908, 2, 1, "", "observation_date"], [908, 2, 1, "", "position_camera_to_target"], [908, 2, 1, "", "princ_point"], [909, 3, 1, "", "read"], [908, 2, 1, "", "rotation_target_fixed_to_camera"], [908, 2, 1, "", "sig_pos_camera_to_target"], [908, 2, 1, "", "sig_rot_target_fixed_to_camera"], [910, 3, 1, "", "write"]], "giant.utilities.tee": [[912, 1, 1, "", "DoubleTee"], [914, 1, 1, "", "REDIRECT"], [915, 1, 1, "", "Tee"]], "giant.utilities.tee.DoubleTee": [[913, 3, 1, "", "close"], [912, 2, 1, "", "stderr"], [912, 2, 1, "", "stdout"]], "giant.utilities.tee.REDIRECT": [[914, 2, 1, "", "STDERR"], [914, 2, 1, "", "STDOUT"]], "giant.utilities.tee.Tee": [[916, 3, 1, "", "close"], [915, 2, 1, "", "file"], [917, 3, 1, "", "flush"], [915, 2, 1, "", "redirect"], [915, 2, 1, "", "stderr"], [915, 2, 1, "", "stdout"], [918, 3, 1, "", "write"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"brownmodel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "adjust_temperatur": [1, 234, 264, 290], "apply_distort": [2, 235, 265], "apply_upd": [3, 95, 236, 266, 291], "compute_jacobian": [4, 96, 237, 267, 292, 318, 329, 340, 354, 371, 385, 414, 632, 852, 856], "compute_pixel_jacobian": [5, 97, 238, 268, 293], "compute_unit_vector_jacobian": [6, 98, 239, 269, 294], "copi": [7, 99, 240, 270, 295, 709], "distort_pixel": [8, 100, 241, 271, 296], "distortion_map": [9, 101, 242, 272, 297], "from_elem": [10, 102, 243, 273, 298], "get_misalign": [11, 244, 274, 299], "get_project": [12, 245, 275, 300], "get_state_label": [13, 103, 246, 276, 301], "get_temperature_scal": [14, 247, 277, 302], "overwrit": [15, 104, 248, 278, 303], "pixels_to_gnom": [16, 249, 279, 304], "pixels_to_gnomic_interp": [17, 250, 280, 305], "pixels_to_unit": [18, 105, 251, 281, 306], "prepare_interp": [19, 252, 282, 307], "project_direct": [20, 106, 253, 283, 308], "project_onto_imag": [21, 107, 254, 284, 309], "reset_misalign": [22, 255, 285, 310], "to_elem": [23, 108, 256, 286, 311], "undistort_imag": [24, 109, 257, 287, 312], "undistort_pixel": [25, 110, 258, 288, 313], "giant": [26, 55, 58, 62, 66, 68, 70, 71, 72, 130, 131, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 198, 199, 200, 215, 216, 217, 219, 223, 224, 227, 228, 231, 398, 399, 400, 443, 468, 474, 694, 731, 732, 733, 734, 735, 736, 751, 752, 753, 754, 779, 780, 781, 786, 841, 842, 843, 844, 847, 848, 849, 865, 866, 867, 868, 869], "calibr": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 62, 66, 68, 70, 71, 72, 174, 784], "calibration_class": [26, 70], "add_imag": [27, 78, 260, 696, 763, 804], "calib_summari": 28, "estimate_attitud": [29, 764], "estimate_calibr": 30, "estimate_static_align": 31, "estimate_temperature_dependent_align": 32, "id_star": [33, 757, 765], "limit_magnitud": 34, "matched_star_residu": [35, 766], "remove_matched_star": [36, 767], "remove_outli": [37, 768], "reproject_star": [38, 769], "reset_attitude_estim": [39, 770], "reset_calibration_estim": 40, "reset_image_process": [41, 261, 705, 771], "reset_set": 42, "reset_star_id": [43, 772], "reset_static_alignment_estim": 44, "reset_temperature_dependent_alignment_estim": 45, "review_outli": [46, 773], "sid_summari": [47, 774], "update_attitude_estim": [48, 775], "update_calibration_estim": 49, "update_image_process": [50, 262, 707, 776], "update_set": 51, "update_star_id": [52, 777], "update_static_alignment_estim": 53, "update_temperature_dependent_alignment_estim": 54, "estim": [55, 56, 58, 60, 62, 64, 66, 67, 68, 69, 71, 606, 611, 620, 633, 640, 651, 679, 687, 692, 747, 750, 751, 787], "calibrationestim": [55, 56, 57], "reset": [57, 61, 65, 608, 613, 621, 635, 642, 654, 681, 689], "iterativenonlinearlstsq": [58, 59, 60, 61], "compute_residu": [59, 63, 749], "lmaestim": [62, 63, 64, 65], "staticalignmentestim": [66, 67], "temperaturedependentalignmentestim": [68, 69], "interfac": [70, 693, 753], "descript": [70, 71, 114, 116, 117, 174, 182, 187, 188, 191, 192, 436, 437, 438, 513, 514, 516, 517, 518, 624, 625, 627, 628, 629, 630, 645, 647, 692, 693, 751, 752, 753, 842, 843, 844, 845, 847, 848], "problem": [71, 692, 751], "visual": [72, 754, 779, 780, 781, 849], "plot_alignment_residu": 73, "plot_distortion_map": 74, "plot_focal_length_temperature_depend": 75, "attitudeupdatemethod": 76, "camera": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 175, 177, 179, 180, 181, 784, 786, 787], "all_off": 79, "all_on": 80, "apply_date_rang": 81, "image_check": 82, "long_off": 83, "long_on": 84, "only_long_on": 85, "only_short_on": 86, "preprocessor": 87, "remove_imag": 88, "short_off": 89, "short_on": 90, "sort_by_d": 91, "update_attitude_from_funct": 92, "update_short_attitud": 93, "cameramodel": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "returnshap": 111, "load": [112, 460, 647, 667, 784, 787], "save": [113, 462, 784], "giant_catalogu": 114, "catalogu": [114, 116, 117, 128, 129, 130, 131, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 182], "us": [114, 115, 116, 117, 177, 178, 179, 180, 181, 182, 400, 436, 437, 438, 440, 512, 515, 516, 518, 624, 625, 626, 627, 628, 629, 630, 645, 647, 787, 842, 843, 844, 845, 847, 848, 849], "meta_catalogu": [115, 130, 131], "tycho": 116, "ucac": 117, "util": [118, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 193, 440, 865, 866, 867, 869], "giantcatalogu": [119, 120, 121, 122, 123, 124], "get_all_with_criteria": 120, "get_from_id": [121, 146], "get_tycho2_record": 122, "get_ucac4_record": 123, "query_catalogu": [124, 129, 136, 149, 759], "blend_star": 125, "build_catalogu": [126, 737], "find_star_pair": 127, "giant_column": 130, "giant_typ": 131, "tycho2": [132, 133, 134, 135, 136, 137, 138], "convert_to_giant_format": 133, "empty_fram": 134, "nan_fram": 135, "query_catalogue_raw": [137, 150], "retrieve_record": 138, "download_tycho": 139, "columnord": 140, "ucac4": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "build_index": 142, "convert_to_giant_catalogu": 143, "cross_ref_tycho": 144, "dump_to_sqlit": 145, "get_index_ind": 147, "get_zone_block": 148, "binary_search": 151, "check_fil": 152, "download_ucac": 153, "deg2ma": 154, "deg2rad": 155, "mas2deg": 156, "mas2rad": 157, "mjd_epoch": 158, "parsec2km": 159, "rad2deg": 160, "rad2ma": 161, "si_days_per_year": 162, "si_seconds_per_dai": 163, "star_dist": 164, "apply_proper_mot": 165, "datetime_to_mjd_year": 166, "radec_dist": 167, "radec_to_unit": 168, "timedelta_to_si_year": 169, "unit_to_radec": 170, "copyright": 171, "get": [172, 795], "start": 172, "api": 173, "refer": 173, "indic": 173, "tune": [174, 188, 191, 192, 624, 625, 627, 628, 630, 645, 752], "success": [174, 188, 191, 192], "exampl": [174, 185, 191], "camera_model": [176, 177, 178, 179, 180, 181], "brown_model": 177, "theori": [177, 179, 180, 181], "speed": [177, 179, 180, 181], "up": [177, 179, 180, 181, 231, 786], "model": [177, 179, 180, 181, 729, 784], "opencv_model": 179, "owen_model": 180, "pinhole_model": 181, "imag": [183, 230, 784, 787, 889, 890, 891], "image_process": [184, 198, 199, 200, 215, 216, 217, 219, 223, 224, 227, 228], "opnav_class": 185, "point_spread_funct": [186, 398, 399, 400], "ray_trac": [187, 443, 468, 474], "relative_opnav": [188, 694], "rel": 188, "opnav": [188, 191, 259, 260, 261, 262, 787], "rotat": [189, 452, 461, 470, 489, 496, 508, 520, 526, 533, 543, 550, 560, 571, 584, 596, 661, 708, 709, 710, 711, 712, 787], "script": [190, 731, 732, 733, 734, 735, 736, 784, 787], "avail": 190, "stellar_opnav": [191, 751, 752, 753, 754, 779, 780, 781], "stellar": 191, "ufo": [192, 841, 842, 843, 844, 847, 848, 849, 859, 860, 861, 862, 863], "detect": [192, 860], "track": [192, 834, 862], "summari": [193, 908, 909, 910], "content": 193, "exposuretyp": 194, "opnavimag": [195, 196, 197, 786], "load_imag": 196, "parse_data": 197, "first_order_imaginary_mo": 198, "first_order_real_mo": 199, "horizontal_kernel": 200, "imageflatteningnoiseapprox": 201, "imageprocess": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], "corners_to_roi": 203, "correl": 204, "denoise_imag": 205, "find_poi_in_roi": 206, "flatten_image_and_get_noise_level": 207, "identify_pixel_edg": 208, "identify_subpixel_limb": 209, "locate_subpixel_poi_in_roi": 210, "pae_edg": 211, "refine_edges_pa": 212, "refine_edges_zernike_ramp": 213, "refine_loc": 214, "pae_a01": 215, "pae_a11": 216, "second_order_mo": 217, "subpixeledgemethod": 218, "vertical_kernel": 219, "cv2_correlator_2d": 220, "fft_correlator_1d": 221, "fft_correlator_2d": 222, "local_maxima": 223, "otsu": 224, "parabolic_peak_finder_1d": 225, "pixel_level_peak_finder_1d": 226, "pixel_level_peak_finder_2d": 227, "quadric_peak_finder_2d": 228, "spatial_correlator_2d": 229, "goddard": 230, "analysi": 230, "navig": [230, 787], "tool": 230, "instal": [231, 786], "set": [231, 786], "environ": 231, "test": 231, "licens": 232, "opencvmodel": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "owenmodel": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "pinholemodel": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313], "gaussian": [314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 398], "__call__": [315, 326, 337, 350, 368, 381, 402, 425, 427], "apply_1d": [316, 327, 338, 351, 369, 382, 403, 428], "apply_1d_s": [317, 328, 339, 352, 370, 383, 423], "determine_s": [319, 330, 342, 358, 373, 389, 433], "evalu": [320, 331, 343, 359, 374, 390, 404, 411, 429], "fit": [321, 332, 344, 361, 375, 392, 405, 430], "generate_kernel": [322, 333, 346, 364, 377, 395, 406, 431, 434], "normalize_amplitud": [323, 334, 347, 365, 378, 396], "update_st": [324, 335, 348, 366, 379, 397, 416], "generalizedgaussian": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "iterativegaussian": [336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348], "converg": [341, 357, 372, 388, 415], "fit_lstsq": [345, 363, 376, 394, 408, 412], "iterativegaussianwbackground": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "apply_update_bg": [353, 384, 418], "compute_jacobian_al": [355, 386, 410], "compute_jacobian_bg": [356, 387, 419], "evaluate_bg": [360, 391, 420], "fit_bg": [362, 393, 421], "iterativegeneralizedgaussian": [367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379], "iterativegeneralizedgaussianwbackground": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "moment": [399, 401, 402, 403, 404, 405, 406], "psf_meta": 400, "initialguessiterativenonlinearlstsqpsf": [407, 408], "initialguessiterativenonlinearlstsqpsfwbackground": [409, 410, 411, 412], "iterativenonlinearlstsqpsf": [413, 414, 415, 416], "iterativenonlinearlstsqwbackground": [417, 418, 419, 420, 421], "kernelbasedapply1dpsf": [422, 423], "kernelbasedcallpsf": [424, 425], "pointspreadfunct": [426, 427, 428, 429, 430, 431], "sizedpsf": [432, 433, 434], "illumin": [435, 443], "kdtree": [436, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "rai": [437, 468, 469, 470, 471], "scene": [438, 474, 475, 476, 477, 478, 479, 480, 481, 482, 787], "shape": [439, 515, 522, 523, 524, 525, 526, 527, 528], "ashikhminshirleydiffuseillumin": 441, "gaskellillumin": 442, "illum_dtyp": 443, "illuminationmodel": 444, "lambertianillumin": 445, "lommelseeligerillumin": 446, "mcewenillumin": [447, 448, 449], "compute_photoclinometry_jacobian": 448, "numeric_deriv": 449, "kdnode": [450, 451, 452, 453, 454], "compute_bounding_box": [451, 502, 537, 554, 564, 576, 588], "split": 453, "translat": [454, 464, 471, 490, 498, 510, 521, 528, 535, 545, 552, 562, 573, 586, 598, 663], "build": 456, "compute_intersect": [457, 495, 503, 523, 530, 538, 547, 555, 565, 577, 589], "compute_limb_jacobian": [458, 504, 524, 531, 539, 548, 556, 566, 578, 590], "find_limb": [459, 506, 525, 532, 541, 549, 558, 569, 581, 593, 601], "trace": [463, 481, 497, 509, 527, 534, 544, 551, 561, 572, 585, 597, 662, 669], "describe_tre": 465, "get_facet_vertic": 466, "get_ignore_ind": 467, "intersect_dtyp": 468, "compute_rai": [472, 605, 650], "correctionstyp": 473, "speed_of_light": 474, "calculate_apparent_posit": 476, "get_first": [477, 660], "get_illumination_input": 478, "phase_angl": 479, "raster_rend": 480, "updat": [482, 787], "sceneobject": [483, 484, 485, 486, 487, 488, 489, 490], "change_orient": 484, "change_posit": 485, "get_apparent_diamet": 486, "get_bounding_pixel": 487, "place": 488, "correct_light_tim": 491, "correct_stellar_aberr": 492, "correct_stellar_aberration_fsp": 493, "axisalignedboundingbox": [494, 495, 496, 497, 498], "min_max_to_bounding_box": 499, "ellipsoid": [500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513], "compute_albedo": 501, "compute_norm": [505, 567, 579, 591], "intersect": 507, "quadratic_equ": 511, "axis_aligned_bounding_box": 512, "point": [514, 519, 520, 521], "solid": [516, 529, 530, 531, 532, 533, 534, 535], "surfac": [517, 546, 547, 548, 549, 550, 551, 552], "triangl": 518, "rawsurfac": [536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "compute_reference_ellipsoid": [540, 557, 568, 580, 592], "merg": [542, 559, 570, 583, 595], "surface32": [553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "surface64": [563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573], "find_limbs_surfac": 574, "triangle32": [575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "get_albedo": [582, 594], "triangle64": [587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "compute_com": 599, "compute_stat": 600, "ref_ellips": 602, "to_block": 603, "xcorrcenterfind": [604, 605, 606, 607, 608, 609], "render": [607, 653], "target_gener": [609, 614, 622, 636, 644, 655, 683, 691], "ellipsematch": [610, 611, 612, 613, 614], "extract_and_pair_limb": [612, 634], "limbextractionmethod": 615, "limbscann": [616, 617, 618], "extract_limb": 617, "predict_limb": 618, "relnavestim": [619, 620, 621, 622], "relnavobservablestyp": 623, "cross_correl": 624, "techniqu": [624, 625, 627, 628, 630, 645, 692, 693], "ellipse_match": 625, "estimator_interface_abc": 626, "limb_match": 627, "moment_algorithm": 628, "sfn": 629, "unresolv": 630, "limbmatch": [631, 632, 633, 634, 635, 636], "momentalgorithm": [637, 638, 639, 640, 641, 642, 643, 644], "compute_line_of_sight_sun_imag": [638, 677, 685], "compute_phase_correct": [639, 678, 686], "rastered_phase_correct": [641, 680, 688], "simple_phase_correct": [643, 682, 690], "sfn_class": 645, "sfn_correl": [646, 658], "surface_featur": 647, "detail": 647, "lazi": 647, "unload": 647, "surfacefeaturenavig": [648, 649, 650, 651, 652, 653, 654, 655], "apply_opt": [649, 673], "pnp_solver": 652, "surfacefeaturenavigationopt": [656, 657], "peak_find": 657, "featurecatalogu": [659, 660, 661, 662, 663, 664], "update_feature_path": 664, "surfacefeatur": [665, 666, 667, 668, 669, 670, 671], "found": 666, "not_found": 668, "update_fil": 670, "update_path": 671, "visiblefeaturefind": [672, 673], "visiblefeaturefinderopt": 674, "phasecorrectiontyp": 675, "phasecorrector": [676, 677, 678, 679, 680, 681, 682, 683], "unresolvedcenterfind": [684, 685, 686, 687, 688, 689, 690, 691], "ad": 692, "new": [692, 693], "relnav": [692, 787], "relnav_class": [693, 694], "extend": 693, "relativeopnav": [693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "With": 693, "results_dtyp": 694, "auto_estim": 697, "cross_correlation_estim": 698, "default_estim": 699, "ellipse_matching_estim": 700, "limb_matching_estim": 701, "moment_algorithm_estim": 702, "process_imag": 703, "regist": 704, "unresolved_estim": 706, "interp_attitud": 710, "inv": 711, "euler_to_rotmat": 713, "nlerp": 714, "quaternion_invers": 715, "quaternion_multipl": 716, "quaternion_to_eul": 717, "quaternion_to_rotmat": 718, "quaternion_to_rotvec": 719, "rot_x": 720, "rot_i": 721, "rot_z": 722, "rotmat_to_eul": 723, "rotmat_to_quaternion": 724, "rotvec_to_quaternion": 725, "rotvec_to_rotmat": 726, "skew": 727, "slerp": 728, "psf": 730, "generate_sample_data": [731, 732, 733, 734, 735, 736, 738], "camera_orient": 731, "camera_posit": 732, "sun_orient": 733, "sun_posit": 734, "target_orient": 735, "target_posit": 736, "usag": [737, 739, 740, 741, 742, 743, 744, 745], "name": [737, 739, 740, 741, 742, 743, 744, 745], "argument": [737, 739, 740, 741, 742, 743, 744, 745], "ingest_shap": 739, "posit": [739, 740, 741, 742, 743, 745], "merge_camera": 740, "mosaic_imag": 741, "shape_stat": 742, "spc_to_feature_catalogu": 743, "spc_to_result": 744, "tile_shap": 745, "attitudeestim": [746, 747], "davenportqmethod": [748, 749, 750], "star_identif": 752, "algorithm": 752, "starid": [752, 755, 756, 757, 758, 759, 760, 761], "routin": 752, "stellar_class": 753, "compute_point": 756, "project_star": 758, "ransac": 760, "ransac_iter_test": 761, "stellaropnav": [762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777], "outliercallback": 778, "plot_residuals_vs_magnitud": 779, "plot_residuals_vs_temperatur": 780, "residual_histogram": 781, "show_id_result": 782, "show_outli": 783, "perform": [784, 787], "initi": [784, 786, 787, 837], "import": [784, 786, 787], "our": [784, 786], "defin": [784, 786, 787], "meta": 784, "kernel": 784, "creat": [784, 787], "instanc": [784, 787], "object": 784, "identifi": 784, "star": [784, 787], "an": 784, "view": 784, "result": 784, "solv": 784, "The": [784, 786, 787], "full": [784, 786, 794], "fc2": 784, "acquir": 785, "data": [785, 787], "tutori": 785, "custom": 786, "dawn": 786, "subclass": 786, "class": 786, "function": 786, "return": 786, "state": 786, "inform": 786, "dawn_giant": 786, "file": 786, "optic": 787, "short": 787, "exposur": 787, "extract": 787, "observ": 787, "complet": 787, "conclus": 787, "organ": 788, "clearablequeu": [789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800], "cancel_join_thread": 790, "clear": 791, "close": [792, 913, 916], "empti": 793, "get_nowait": 796, "join_thread": 797, "put": 798, "put_nowait": 799, "qsize": 800, "sharedcount": [801, 802], "increment": 802, "detector": [803, 804, 805, 806, 807, 808, 809, 810, 811, 842], "clear_result": 805, "find_ufo": 806, "identify_hot_pixels_and_unmatched_star": 807, "package_result": 808, "remove_dupl": 809, "save_result": [810, 833, 861], "update_attitud": 811, "unit_to_radec_jacobian": 812, "dynam": [813, 814, 815, 843], "compute_dynam": [814, 818, 825], "propag": [815, 822, 828], "solradandgravitydynam": [816, 817, 818, 819, 820, 821, 822], "compute_covariance_dynam": [817, 824], "compute_solar_radiation_acceler": 819, "compute_state_dynam": [820, 826], "get_gm": [821, 827], "spicegravitydynam": [823, 824, 825, 826, 827, 828], "zero3": 829, "tracker": [830, 831, 832, 833, 834], "filter_ekf": 831, "find_initial_pair": 832, "extendedkalmanfilt": [835, 836, 837, 838, 839, 840], "compute_residual_statist": 836, "process_measur": 838, "propagate_and_predict": 839, "smooth": 840, "clearable_queu": 841, "ekf_track": 844, "extended_kalman_filt": 845, "measur": [846, 850, 851, 852, 853], "state_initi": 847, "ufo_class": 848, "compare_residu": [851, 855], "predict": [853, 857], "opticalbearingmeasur": [854, 855, 856, 857], "orexiniti": 858, "visualize_detection_result": 863, "show_detect": 864, "outlier_identifi": 865, "random_combin": 866, "spice_interfac": 867, "utilti": 868, "stereophotoclinometri": 868, "tee": [869, 915, 916, 917, 918], "get_outli": 870, "randomcombin": 871, "has_spic": 872, "j2000_epoch": 873, "leap_seconds_list": 874, "spiceorient": 875, "spiceposit": [876, 877, 878], "light_tim": [877, 880], "position_light_tim": [878, 881], "spicest": [879, 880, 881], "create_callable_orient": 882, "create_callable_posit": 883, "create_callable_st": 884, "datetime_to_et": 885, "et_callable_to_datetime_cal": 886, "leap_second": 887, "date_fmt": 888, "read": [890, 893, 897, 900, 903, 906, 909], "write": [891, 894, 898, 901, 907, 910, 918], "landmark": [892, 893, 894], "maplet": [895, 896, 897, 898], "get_triangl": [896, 905], "nomin": [899, 900, 901], "regress": [902, 903], "shapemodel": [904, 905, 906, 907], "get_distort": 911, "doublete": [912, 913], "redirect": 914, "flush": 917}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"BrownModel": [[0, "brownmodel"]], "BrownModel.adjust_temperature": [[1, "brownmodel-adjust-temperature"]], "BrownModel.apply_distortion": [[2, "brownmodel-apply-distortion"]], "BrownModel.apply_update": [[3, "brownmodel-apply-update"]], "BrownModel.compute_jacobian": [[4, "brownmodel-compute-jacobian"]], "BrownModel.compute_pixel_jacobian": [[5, "brownmodel-compute-pixel-jacobian"]], "BrownModel.compute_unit_vector_jacobian": [[6, "brownmodel-compute-unit-vector-jacobian"]], "BrownModel.copy": [[7, "brownmodel-copy"]], "BrownModel.distort_pixels": [[8, "brownmodel-distort-pixels"]], "BrownModel.distortion_map": [[9, "brownmodel-distortion-map"]], "BrownModel.from_elem": [[10, "brownmodel-from-elem"]], "BrownModel.get_misalignment": [[11, "brownmodel-get-misalignment"]], "BrownModel.get_projections": [[12, "brownmodel-get-projections"]], "BrownModel.get_state_labels": [[13, "brownmodel-get-state-labels"]], "BrownModel.get_temperature_scale": [[14, "brownmodel-get-temperature-scale"]], "BrownModel.overwrite": [[15, "brownmodel-overwrite"]], "BrownModel.pixels_to_gnomic": [[16, "brownmodel-pixels-to-gnomic"]], "BrownModel.pixels_to_gnomic_interp": [[17, "brownmodel-pixels-to-gnomic-interp"]], "BrownModel.pixels_to_unit": [[18, "brownmodel-pixels-to-unit"]], "BrownModel.prepare_interp": [[19, "brownmodel-prepare-interp"]], "BrownModel.project_directions": [[20, "brownmodel-project-directions"]], "BrownModel.project_onto_image": [[21, "brownmodel-project-onto-image"]], "BrownModel.reset_misalignment": [[22, "brownmodel-reset-misalignment"]], "BrownModel.to_elem": [[23, "brownmodel-to-elem"]], "BrownModel.undistort_image": [[24, "brownmodel-undistort-image"]], "BrownModel.undistort_pixels": [[25, "brownmodel-undistort-pixels"]], "giant.calibration.calibration_class.Calibration": [[26, "giant-calibration-calibration-class-calibration"]], "Calibration.add_images": [[27, "calibration-add-images"]], "Calibration.calib_summary": [[28, "calibration-calib-summary"]], "Calibration.estimate_attitude": [[29, "calibration-estimate-attitude"]], "Calibration.estimate_calibration": [[30, "calibration-estimate-calibration"]], "Calibration.estimate_static_alignment": [[31, "calibration-estimate-static-alignment"]], "Calibration.estimate_temperature_dependent_alignment": [[32, "calibration-estimate-temperature-dependent-alignment"]], "Calibration.id_stars": [[33, "calibration-id-stars"]], "Calibration.limit_magnitude": [[34, "calibration-limit-magnitude"]], "Calibration.matched_star_residuals": [[35, "calibration-matched-star-residuals"]], "Calibration.remove_matched_stars": [[36, "calibration-remove-matched-stars"]], "Calibration.remove_outliers": [[37, "calibration-remove-outliers"]], "Calibration.reproject_stars": [[38, "calibration-reproject-stars"]], "Calibration.reset_attitude_estimator": [[39, "calibration-reset-attitude-estimator"]], "Calibration.reset_calibration_estimator": [[40, "calibration-reset-calibration-estimator"]], "Calibration.reset_image_processing": [[41, "calibration-reset-image-processing"]], "Calibration.reset_settings": [[42, "calibration-reset-settings"]], "Calibration.reset_star_id": [[43, "calibration-reset-star-id"]], "Calibration.reset_static_alignment_estimator": [[44, "calibration-reset-static-alignment-estimator"]], "Calibration.reset_temperature_dependent_alignment_estimator": [[45, "calibration-reset-temperature-dependent-alignment-estimator"]], "Calibration.review_outliers": [[46, "calibration-review-outliers"]], "Calibration.sid_summary": [[47, "calibration-sid-summary"]], "Calibration.update_attitude_estimator": [[48, "calibration-update-attitude-estimator"]], "Calibration.update_calibration_estimator": [[49, "calibration-update-calibration-estimator"]], "Calibration.update_image_processing": [[50, "calibration-update-image-processing"]], "Calibration.update_settings": [[51, "calibration-update-settings"]], "Calibration.update_star_id": [[52, "calibration-update-star-id"]], "Calibration.update_static_alignment_estimator": [[53, "calibration-update-static-alignment-estimator"]], "Calibration.update_temperature_dependent_alignment_estimator": [[54, "calibration-update-temperature-dependent-alignment-estimator"]], "giant.calibration.estimators.CalibrationEstimator": [[55, "giant-calibration-estimators-calibrationestimator"]], "CalibrationEstimator.estimate": [[56, "calibrationestimator-estimate"]], "CalibrationEstimator.reset": [[57, "calibrationestimator-reset"]], "giant.calibration.estimators.IterativeNonlinearLSTSQ": [[58, "giant-calibration-estimators-iterativenonlinearlstsq"]], "IterativeNonlinearLSTSQ.compute_residuals": [[59, "iterativenonlinearlstsq-compute-residuals"]], "IterativeNonlinearLSTSQ.estimate": [[60, "iterativenonlinearlstsq-estimate"]], "IterativeNonlinearLSTSQ.reset": [[61, "iterativenonlinearlstsq-reset"]], "giant.calibration.estimators.LMAEstimator": [[62, "giant-calibration-estimators-lmaestimator"]], "LMAEstimator.compute_residuals": [[63, "lmaestimator-compute-residuals"]], "LMAEstimator.estimate": [[64, "lmaestimator-estimate"]], "LMAEstimator.reset": [[65, "lmaestimator-reset"]], "giant.calibration.estimators.StaticAlignmentEstimator": [[66, "giant-calibration-estimators-staticalignmentestimator"]], "StaticAlignmentEstimator.estimate": [[67, "staticalignmentestimator-estimate"]], "giant.calibration.estimators.TemperatureDependentAlignmentEstimator": [[68, "giant-calibration-estimators-temperaturedependentalignmentestimator"]], "TemperatureDependentAlignmentEstimator.estimate": [[69, "temperaturedependentalignmentestimator-estimate"]], "giant.calibration.calibration_class": [[70, "module-giant.calibration.calibration_class"]], "Interface Description": [[70, "interface-description"], [753, "interface-description"], [693, "interface-description"]], "giant.calibration.estimators": [[71, "module-giant.calibration.estimators"]], "Description of the Problem": [[71, "description-of-the-problem"], [692, "description-of-the-problem"], [751, "description-of-the-problem"]], "giant.calibration.visualizer": [[72, "module-giant.calibration.visualizer"]], "plot_alignment_residuals": [[73, "plot-alignment-residuals"]], "plot_distortion_map": [[74, "plot-distortion-map"]], "plot_focal_length_temperature_dependence": [[75, "plot-focal-length-temperature-dependence"]], "AttitudeUpdateMethods": [[76, "attitudeupdatemethods"]], "Camera": [[77, "camera"]], "Camera.add_images": [[78, "camera-add-images"]], "Camera.all_off": [[79, "camera-all-off"]], "Camera.all_on": [[80, "camera-all-on"]], "Camera.apply_date_range": [[81, "camera-apply-date-range"]], "Camera.image_check": [[82, "camera-image-check"]], "Camera.long_off": [[83, "camera-long-off"]], "Camera.long_on": [[84, "camera-long-on"]], "Camera.only_long_on": [[85, "camera-only-long-on"]], "Camera.only_short_on": [[86, "camera-only-short-on"]], "Camera.preprocessor": [[87, "camera-preprocessor"]], "Camera.remove_images": [[88, "camera-remove-images"]], "Camera.short_off": [[89, "camera-short-off"]], "Camera.short_on": [[90, "camera-short-on"]], "Camera.sort_by_date": [[91, "camera-sort-by-date"]], "Camera.update_attitude_from_function": [[92, "camera-update-attitude-from-function"]], "Camera.update_short_attitude": [[93, "camera-update-short-attitude"]], "CameraModel": [[94, "cameramodel"]], "CameraModel.apply_update": [[95, "cameramodel-apply-update"]], "CameraModel.compute_jacobian": [[96, "cameramodel-compute-jacobian"]], "CameraModel.compute_pixel_jacobian": [[97, "cameramodel-compute-pixel-jacobian"]], "CameraModel.compute_unit_vector_jacobian": [[98, "cameramodel-compute-unit-vector-jacobian"]], "CameraModel.copy": [[99, "cameramodel-copy"]], "CameraModel.distort_pixels": [[100, "cameramodel-distort-pixels"]], "CameraModel.distortion_map": [[101, "cameramodel-distortion-map"]], "CameraModel.from_elem": [[102, "cameramodel-from-elem"]], "CameraModel.get_state_labels": [[103, "cameramodel-get-state-labels"]], "CameraModel.overwrite": [[104, "cameramodel-overwrite"]], "CameraModel.pixels_to_unit": [[105, "cameramodel-pixels-to-unit"]], "CameraModel.project_directions": [[106, "cameramodel-project-directions"]], "CameraModel.project_onto_image": [[107, "cameramodel-project-onto-image"]], "CameraModel.to_elem": [[108, "cameramodel-to-elem"]], "CameraModel.undistort_image": [[109, "cameramodel-undistort-image"]], "CameraModel.undistort_pixels": [[110, "cameramodel-undistort-pixels"]], "ReturnShape": [[111, "returnshape"]], "load": [[112, "load"]], "save": [[113, "save"]], "giant_catalogue": [[114, "module-giant.catalogues.giant_catalogue"]], "Catalogue Description": [[114, "catalogue-description"], [116, "catalogue-description"], [117, "catalogue-description"]], "Use": [[114, "use"], [115, "use"], [116, "use"], [117, "use"], [177, "use"], [178, "use"], [179, "use"], [180, "use"], [181, "use"], [182, "use"], [400, "use"], [436, "use"], [437, "use"], [438, "use"], [440, "use"], [512, "use"], [515, "use"], [516, "use"], [518, "use"], [626, "use"], [629, "use"], [647, "use"], [842, "use"], [843, "use"], [844, "use"], [845, "use"], [847, "use"], [848, "use"], [849, "use"], [624, "use"], [625, "use"], [627, "use"], [628, "use"], [630, "use"], [645, "use"]], "meta_catalogue": [[115, "module-giant.catalogues.meta_catalogue"]], "tycho": [[116, "module-giant.catalogues.tycho"]], "ucac": [[117, "module-giant.catalogues.ucac"]], "utilities": [[118, "module-giant.catalogues.utilities"], [440, "module-giant.ray_tracer.utilities"]], "GIANTCatalogue": [[119, "giantcatalogue"]], "GIANTCatalogue.get_all_with_criteria": [[120, "giantcatalogue-get-all-with-criteria"]], "GIANTCatalogue.get_from_ids": [[121, "giantcatalogue-get-from-ids"]], "GIANTCatalogue.get_tycho2_record": [[122, "giantcatalogue-get-tycho2-record"]], "GIANTCatalogue.get_ucac4_record": [[123, "giantcatalogue-get-ucac4-record"]], "GIANTCatalogue.query_catalogue": [[124, "giantcatalogue-query-catalogue"]], "blend_stars": [[125, "blend-stars"]], "build_catalogue": [[126, "build-catalogue"], [737, "build-catalogue"]], "find_star_pairs": [[127, "find-star-pairs"]], "Catalogue": [[128, "catalogue"]], "Catalogue.query_catalogue": [[129, "catalogue-query-catalogue"]], "giant.catalogues.meta_catalogue.GIANT_COLUMNS": [[130, "giant-catalogues-meta-catalogue-giant-columns"]], "giant.catalogues.meta_catalogue.GIANT_TYPES": [[131, "giant-catalogues-meta-catalogue-giant-types"]], "Tycho2": [[132, "tycho2"]], "Tycho2.convert_to_giant_format": [[133, "tycho2-convert-to-giant-format"]], "Tycho2.empty_frame": [[134, "tycho2-empty-frame"]], "Tycho2.nan_frame": [[135, "tycho2-nan-frame"]], "Tycho2.query_catalogue": [[136, "tycho2-query-catalogue"]], "Tycho2.query_catalogue_raw": [[137, "tycho2-query-catalogue-raw"]], "Tycho2.retrieve_record": [[138, "tycho2-retrieve-record"]], "download_tycho": [[139, "download-tycho"]], "ColumnOrder": [[140, "columnorder"]], "UCAC4": [[141, "ucac4"]], "UCAC4.build_index": [[142, "ucac4-build-index"]], "UCAC4.convert_to_giant_catalogue": [[143, "ucac4-convert-to-giant-catalogue"]], "UCAC4.cross_ref_tycho": [[144, "ucac4-cross-ref-tycho"]], "UCAC4.dump_to_sqlite": [[145, "ucac4-dump-to-sqlite"]], "UCAC4.get_from_ids": [[146, "ucac4-get-from-ids"]], "UCAC4.get_index_ind": [[147, "ucac4-get-index-ind"]], "UCAC4.get_zone_block": [[148, "ucac4-get-zone-block"]], "UCAC4.query_catalogue": [[149, "ucac4-query-catalogue"]], "UCAC4.query_catalogue_raw": [[150, "ucac4-query-catalogue-raw"]], "binary_search": [[151, "binary-search"]], "check_file": [[152, "check-file"]], "download_ucac": [[153, "download-ucac"]], "giant.catalogues.utilities.DEG2MAS": [[154, "giant-catalogues-utilities-deg2mas"]], "giant.catalogues.utilities.DEG2RAD": [[155, "giant-catalogues-utilities-deg2rad"]], "giant.catalogues.utilities.MAS2DEG": [[156, "giant-catalogues-utilities-mas2deg"]], "giant.catalogues.utilities.MAS2RAD": [[157, "giant-catalogues-utilities-mas2rad"]], "giant.catalogues.utilities.MJD_EPOCH": [[158, "giant-catalogues-utilities-mjd-epoch"]], "giant.catalogues.utilities.PARSEC2KM": [[159, "giant-catalogues-utilities-parsec2km"]], "giant.catalogues.utilities.RAD2DEG": [[160, "giant-catalogues-utilities-rad2deg"]], "giant.catalogues.utilities.RAD2MAS": [[161, "giant-catalogues-utilities-rad2mas"]], "giant.catalogues.utilities.SI_DAYS_PER_YEAR": [[162, "giant-catalogues-utilities-si-days-per-year"]], "giant.catalogues.utilities.SI_SECONDS_PER_DAY": [[163, "giant-catalogues-utilities-si-seconds-per-day"]], "giant.catalogues.utilities.STAR_DIST": [[164, "giant-catalogues-utilities-star-dist"]], "apply_proper_motion": [[165, "apply-proper-motion"]], "datetime_to_mjd_years": [[166, "datetime-to-mjd-years"]], "radec_distance": [[167, "radec-distance"]], "radec_to_unit": [[168, "radec-to-unit"]], "timedelta_to_si_years": [[169, "timedelta-to-si-years"]], "unit_to_radec": [[170, "unit-to-radec"]], "Copyright": [[171, "copyright"]], "Getting Started": [[172, "getting-started"]], "API Reference": [[173, "api-reference"]], "Indices": [[173, "indices"]], "giant.calibration": [[174, "module-giant.calibration"]], "Description": [[174, "description"], [182, "description"], [187, "description"], [188, "description"], [191, "description"], [192, "description"], [436, "description"], [437, "description"], [438, "description"], [513, "description"], [514, "description"], [516, "description"], [517, "description"], [518, "description"], [629, "description"], [842, "description"], [843, "description"], [844, "description"], [845, "description"], [847, "description"], [848, "description"]], "Tuning for Successful Calibration": [[174, "tuning-for-successful-calibration"]], "Example": [[174, "example"], [185, "example"], [191, "example"]], "giant.camera": [[175, "module-giant.camera"]], "giant.camera_models": [[176, "module-giant.camera_models"]], "giant.camera_models.brown_model": [[177, "module-giant.camera_models.brown_model"]], "Theory": [[177, "theory"], [179, "theory"], [180, "theory"], [181, "theory"]], "Speeding up the camera model": [[177, "speeding-up-the-camera-model"], [179, "speeding-up-the-camera-model"], [180, "speeding-up-the-camera-model"], [181, "speeding-up-the-camera-model"]], "giant.camera_models.camera_model": [[178, "module-giant.camera_models.camera_model"]], "giant.camera_models.opencv_model": [[179, "module-giant.camera_models.opencv_model"]], "giant.camera_models.owen_model": [[180, "module-giant.camera_models.owen_model"]], "giant.camera_models.pinhole_model": [[181, "module-giant.camera_models.pinhole_model"]], "catalogues": [[182, "module-giant.catalogues"]], "giant.image": [[183, "module-giant.image"]], "giant.image_processing": [[184, "module-giant.image_processing"]], "giant.opnav_class": [[185, "module-giant.opnav_class"]], "giant.point_spread_functions": [[186, "module-giant.point_spread_functions"]], "ray_tracer": [[187, "module-giant.ray_tracer"]], "giant.relative_opnav": [[188, "module-giant.relative_opnav"]], "Tuning for Successful Relative OpNav": [[188, "tuning-for-successful-relative-opnav"]], "giant.rotations": [[189, "module-giant.rotations"]], "giant.scripts": [[190, "module-giant.scripts"]], "Available scripts": [[190, "available-scripts"]], "giant.stellar_opnav": [[191, "module-giant.stellar_opnav"]], "Tuning for Successful Stellar OpNav": [[191, "tuning-for-successful-stellar-opnav"]], "giant.ufo": [[192, "module-giant.ufo"]], "Tuning for Successful Detection and Tracking": [[192, "tuning-for-successful-detection-and-tracking"]], "giant.utilities": [[193, "module-giant.utilities"]], "Summary Contents": [[193, "summary-contents"]], "ExposureType": [[194, "exposuretype"]], "OpNavImage": [[195, "opnavimage"]], "OpNavImage.load_image": [[196, "opnavimage-load-image"]], "OpNavImage.parse_data": [[197, "opnavimage-parse-data"]], "giant.image_processing.FIRST_ORDER_IMAGINARY_MOMENTS": [[198, "giant-image-processing-first-order-imaginary-moments"]], "giant.image_processing.FIRST_ORDER_REAL_MOMENTS": [[199, "giant-image-processing-first-order-real-moments"]], "giant.image_processing.HORIZONTAL_KERNEL": [[200, "giant-image-processing-horizontal-kernel"]], "ImageFlatteningNoiseApprox": [[201, "imageflatteningnoiseapprox"]], "ImageProcessing": [[202, "imageprocessing"]], "ImageProcessing.corners_to_roi": [[203, "imageprocessing-corners-to-roi"]], "ImageProcessing.correlate": [[204, "imageprocessing-correlate"]], "ImageProcessing.denoise_image": [[205, "imageprocessing-denoise-image"]], "ImageProcessing.find_poi_in_roi": [[206, "imageprocessing-find-poi-in-roi"]], "ImageProcessing.flatten_image_and_get_noise_level": [[207, "imageprocessing-flatten-image-and-get-noise-level"]], "ImageProcessing.identify_pixel_edges": [[208, "imageprocessing-identify-pixel-edges"]], "ImageProcessing.identify_subpixel_limbs": [[209, "imageprocessing-identify-subpixel-limbs"]], "ImageProcessing.locate_subpixel_poi_in_roi": [[210, "imageprocessing-locate-subpixel-poi-in-roi"]], "ImageProcessing.pae_edges": [[211, "imageprocessing-pae-edges"]], "ImageProcessing.refine_edges_pae": [[212, "imageprocessing-refine-edges-pae"]], "ImageProcessing.refine_edges_zernike_ramp": [[213, "imageprocessing-refine-edges-zernike-ramp"]], "ImageProcessing.refine_locations": [[214, "imageprocessing-refine-locations"]], "giant.image_processing.PAE_A01": [[215, "giant-image-processing-pae-a01"]], "giant.image_processing.PAE_A11": [[216, "giant-image-processing-pae-a11"]], "giant.image_processing.SECOND_ORDER_MOMENTS": [[217, "giant-image-processing-second-order-moments"]], "SubpixelEdgeMethods": [[218, "subpixeledgemethods"]], "giant.image_processing.VERTICAL_KERNEL": [[219, "giant-image-processing-vertical-kernel"]], "cv2_correlator_2d": [[220, "cv2-correlator-2d"]], "fft_correlator_1d": [[221, "fft-correlator-1d"]], "fft_correlator_2d": [[222, "fft-correlator-2d"]], "giant.image_processing.local_maxima": [[223, "giant-image-processing-local-maxima"]], "giant.image_processing.otsu": [[224, "giant-image-processing-otsu"]], "parabolic_peak_finder_1d": [[225, "parabolic-peak-finder-1d"]], "pixel_level_peak_finder_1d": [[226, "pixel-level-peak-finder-1d"]], "giant.image_processing.pixel_level_peak_finder_2d": [[227, "giant-image-processing-pixel-level-peak-finder-2d"]], "giant.image_processing.quadric_peak_finder_2d": [[228, "giant-image-processing-quadric-peak-finder-2d"]], "spatial_correlator_2d": [[229, "spatial-correlator-2d"]], "Goddard Image Analysis and Navigation Tool": [[230, "goddard-image-analysis-and-navigation-tool"]], "Installing GIANT": [[231, "installing-giant"]], "Setting up the environment": [[231, "setting-up-the-environment"]], "Installing and testing GIANT": [[231, "installing-and-testing-giant"]], "License": [[232, "license"]], "OpenCVModel": [[233, "opencvmodel"]], "OpenCVModel.adjust_temperature": [[234, "opencvmodel-adjust-temperature"]], "OpenCVModel.apply_distortion": [[235, "opencvmodel-apply-distortion"]], "OpenCVModel.apply_update": [[236, "opencvmodel-apply-update"]], "OpenCVModel.compute_jacobian": [[237, "opencvmodel-compute-jacobian"]], "OpenCVModel.compute_pixel_jacobian": [[238, "opencvmodel-compute-pixel-jacobian"]], "OpenCVModel.compute_unit_vector_jacobian": [[239, "opencvmodel-compute-unit-vector-jacobian"]], "OpenCVModel.copy": [[240, "opencvmodel-copy"]], "OpenCVModel.distort_pixels": [[241, "opencvmodel-distort-pixels"]], "OpenCVModel.distortion_map": [[242, "opencvmodel-distortion-map"]], "OpenCVModel.from_elem": [[243, "opencvmodel-from-elem"]], "OpenCVModel.get_misalignment": [[244, "opencvmodel-get-misalignment"]], "OpenCVModel.get_projections": [[245, "opencvmodel-get-projections"]], "OpenCVModel.get_state_labels": [[246, "opencvmodel-get-state-labels"]], "OpenCVModel.get_temperature_scale": [[247, "opencvmodel-get-temperature-scale"]], "OpenCVModel.overwrite": [[248, "opencvmodel-overwrite"]], "OpenCVModel.pixels_to_gnomic": [[249, "opencvmodel-pixels-to-gnomic"]], "OpenCVModel.pixels_to_gnomic_interp": [[250, "opencvmodel-pixels-to-gnomic-interp"]], "OpenCVModel.pixels_to_unit": [[251, "opencvmodel-pixels-to-unit"]], "OpenCVModel.prepare_interp": [[252, "opencvmodel-prepare-interp"]], "OpenCVModel.project_directions": [[253, "opencvmodel-project-directions"]], "OpenCVModel.project_onto_image": [[254, "opencvmodel-project-onto-image"]], "OpenCVModel.reset_misalignment": [[255, "opencvmodel-reset-misalignment"]], "OpenCVModel.to_elem": [[256, "opencvmodel-to-elem"]], "OpenCVModel.undistort_image": [[257, "opencvmodel-undistort-image"]], "OpenCVModel.undistort_pixels": [[258, "opencvmodel-undistort-pixels"]], "OpNav": [[259, "opnav"]], "OpNav.add_images": [[260, "opnav-add-images"]], "OpNav.reset_image_processing": [[261, "opnav-reset-image-processing"]], "OpNav.update_image_processing": [[262, "opnav-update-image-processing"]], "OwenModel": [[263, "owenmodel"]], "OwenModel.adjust_temperature": [[264, "owenmodel-adjust-temperature"]], "OwenModel.apply_distortion": [[265, "owenmodel-apply-distortion"]], "OwenModel.apply_update": [[266, "owenmodel-apply-update"]], "OwenModel.compute_jacobian": [[267, "owenmodel-compute-jacobian"]], "OwenModel.compute_pixel_jacobian": [[268, "owenmodel-compute-pixel-jacobian"]], "OwenModel.compute_unit_vector_jacobian": [[269, "owenmodel-compute-unit-vector-jacobian"]], "OwenModel.copy": [[270, "owenmodel-copy"]], "OwenModel.distort_pixels": [[271, "owenmodel-distort-pixels"]], "OwenModel.distortion_map": [[272, "owenmodel-distortion-map"]], "OwenModel.from_elem": [[273, "owenmodel-from-elem"]], "OwenModel.get_misalignment": [[274, "owenmodel-get-misalignment"]], "OwenModel.get_projections": [[275, "owenmodel-get-projections"]], "OwenModel.get_state_labels": [[276, "owenmodel-get-state-labels"]], "OwenModel.get_temperature_scale": [[277, "owenmodel-get-temperature-scale"]], "OwenModel.overwrite": [[278, "owenmodel-overwrite"]], "OwenModel.pixels_to_gnomic": [[279, "owenmodel-pixels-to-gnomic"]], "OwenModel.pixels_to_gnomic_interp": [[280, "owenmodel-pixels-to-gnomic-interp"]], "OwenModel.pixels_to_unit": [[281, "owenmodel-pixels-to-unit"]], "OwenModel.prepare_interp": [[282, "owenmodel-prepare-interp"]], "OwenModel.project_directions": [[283, "owenmodel-project-directions"]], "OwenModel.project_onto_image": [[284, "owenmodel-project-onto-image"]], "OwenModel.reset_misalignment": [[285, "owenmodel-reset-misalignment"]], "OwenModel.to_elem": [[286, "owenmodel-to-elem"]], "OwenModel.undistort_image": [[287, "owenmodel-undistort-image"]], "OwenModel.undistort_pixels": [[288, "owenmodel-undistort-pixels"]], "PinholeModel": [[289, "pinholemodel"]], "PinholeModel.adjust_temperature": [[290, "pinholemodel-adjust-temperature"]], "PinholeModel.apply_update": [[291, "pinholemodel-apply-update"]], "PinholeModel.compute_jacobian": [[292, "pinholemodel-compute-jacobian"]], "PinholeModel.compute_pixel_jacobian": [[293, "pinholemodel-compute-pixel-jacobian"]], "PinholeModel.compute_unit_vector_jacobian": [[294, "pinholemodel-compute-unit-vector-jacobian"]], "PinholeModel.copy": [[295, "pinholemodel-copy"]], "PinholeModel.distort_pixels": [[296, "pinholemodel-distort-pixels"]], "PinholeModel.distortion_map": [[297, "pinholemodel-distortion-map"]], "PinholeModel.from_elem": [[298, "pinholemodel-from-elem"]], "PinholeModel.get_misalignment": [[299, "pinholemodel-get-misalignment"]], "PinholeModel.get_projections": [[300, "pinholemodel-get-projections"]], "PinholeModel.get_state_labels": [[301, "pinholemodel-get-state-labels"]], "PinholeModel.get_temperature_scale": [[302, "pinholemodel-get-temperature-scale"]], "PinholeModel.overwrite": [[303, "pinholemodel-overwrite"]], "PinholeModel.pixels_to_gnomic": [[304, "pinholemodel-pixels-to-gnomic"]], "PinholeModel.pixels_to_gnomic_interp": [[305, "pinholemodel-pixels-to-gnomic-interp"]], "PinholeModel.pixels_to_unit": [[306, "pinholemodel-pixels-to-unit"]], "PinholeModel.prepare_interp": [[307, "pinholemodel-prepare-interp"]], "PinholeModel.project_directions": [[308, "pinholemodel-project-directions"]], "PinholeModel.project_onto_image": [[309, "pinholemodel-project-onto-image"]], "PinholeModel.reset_misalignment": [[310, "pinholemodel-reset-misalignment"]], "PinholeModel.to_elem": [[311, "pinholemodel-to-elem"]], "PinholeModel.undistort_image": [[312, "pinholemodel-undistort-image"]], "PinholeModel.undistort_pixels": [[313, "pinholemodel-undistort-pixels"]], "Gaussian": [[314, "gaussian"]], "Gaussian.__call__": [[315, "gaussian-call"]], "Gaussian.apply_1d": [[316, "gaussian-apply-1d"]], "Gaussian.apply_1d_sized": [[317, "gaussian-apply-1d-sized"]], "Gaussian.compute_jacobian": [[318, "gaussian-compute-jacobian"]], "Gaussian.determine_size": [[319, "gaussian-determine-size"]], "Gaussian.evaluate": [[320, "gaussian-evaluate"]], "Gaussian.fit": [[321, "gaussian-fit"]], "Gaussian.generate_kernel": [[322, "gaussian-generate-kernel"]], "Gaussian.normalize_amplitude": [[323, "gaussian-normalize-amplitude"]], "Gaussian.update_state": [[324, "gaussian-update-state"]], "GeneralizedGaussian": [[325, "generalizedgaussian"]], "GeneralizedGaussian.__call__": [[326, "generalizedgaussian-call"]], "GeneralizedGaussian.apply_1d": [[327, "generalizedgaussian-apply-1d"]], "GeneralizedGaussian.apply_1d_sized": [[328, "generalizedgaussian-apply-1d-sized"]], "GeneralizedGaussian.compute_jacobian": [[329, "generalizedgaussian-compute-jacobian"]], "GeneralizedGaussian.determine_size": [[330, "generalizedgaussian-determine-size"]], "GeneralizedGaussian.evaluate": [[331, "generalizedgaussian-evaluate"]], "GeneralizedGaussian.fit": [[332, "generalizedgaussian-fit"]], "GeneralizedGaussian.generate_kernel": [[333, "generalizedgaussian-generate-kernel"]], "GeneralizedGaussian.normalize_amplitude": [[334, "generalizedgaussian-normalize-amplitude"]], "GeneralizedGaussian.update_state": [[335, "generalizedgaussian-update-state"]], "IterativeGaussian": [[336, "iterativegaussian"]], "IterativeGaussian.__call__": [[337, "iterativegaussian-call"]], "IterativeGaussian.apply_1d": [[338, "iterativegaussian-apply-1d"]], "IterativeGaussian.apply_1d_sized": [[339, "iterativegaussian-apply-1d-sized"]], "IterativeGaussian.compute_jacobian": [[340, "iterativegaussian-compute-jacobian"]], "IterativeGaussian.converge": [[341, "iterativegaussian-converge"]], "IterativeGaussian.determine_size": [[342, "iterativegaussian-determine-size"]], "IterativeGaussian.evaluate": [[343, "iterativegaussian-evaluate"]], "IterativeGaussian.fit": [[344, "iterativegaussian-fit"]], "IterativeGaussian.fit_lstsq": [[345, "iterativegaussian-fit-lstsq"]], "IterativeGaussian.generate_kernel": [[346, "iterativegaussian-generate-kernel"]], "IterativeGaussian.normalize_amplitude": [[347, "iterativegaussian-normalize-amplitude"]], "IterativeGaussian.update_state": [[348, "iterativegaussian-update-state"]], "IterativeGaussianWBackground": [[349, "iterativegaussianwbackground"]], "IterativeGaussianWBackground.__call__": [[350, "iterativegaussianwbackground-call"]], "IterativeGaussianWBackground.apply_1d": [[351, "iterativegaussianwbackground-apply-1d"]], "IterativeGaussianWBackground.apply_1d_sized": [[352, "iterativegaussianwbackground-apply-1d-sized"]], "IterativeGaussianWBackground.apply_update_bg": [[353, "iterativegaussianwbackground-apply-update-bg"]], "IterativeGaussianWBackground.compute_jacobian": [[354, "iterativegaussianwbackground-compute-jacobian"]], "IterativeGaussianWBackground.compute_jacobian_all": [[355, "iterativegaussianwbackground-compute-jacobian-all"]], "IterativeGaussianWBackground.compute_jacobian_bg": [[356, "iterativegaussianwbackground-compute-jacobian-bg"]], "IterativeGaussianWBackground.converge": [[357, "iterativegaussianwbackground-converge"]], "IterativeGaussianWBackground.determine_size": [[358, "iterativegaussianwbackground-determine-size"]], "IterativeGaussianWBackground.evaluate": [[359, "iterativegaussianwbackground-evaluate"]], "IterativeGaussianWBackground.evaluate_bg": [[360, "iterativegaussianwbackground-evaluate-bg"]], "IterativeGaussianWBackground.fit": [[361, "iterativegaussianwbackground-fit"]], "IterativeGaussianWBackground.fit_bg": [[362, "iterativegaussianwbackground-fit-bg"]], "IterativeGaussianWBackground.fit_lstsq": [[363, "iterativegaussianwbackground-fit-lstsq"]], "IterativeGaussianWBackground.generate_kernel": [[364, "iterativegaussianwbackground-generate-kernel"]], "IterativeGaussianWBackground.normalize_amplitude": [[365, "iterativegaussianwbackground-normalize-amplitude"]], "IterativeGaussianWBackground.update_state": [[366, "iterativegaussianwbackground-update-state"]], "IterativeGeneralizedGaussian": [[367, "iterativegeneralizedgaussian"]], "IterativeGeneralizedGaussian.__call__": [[368, "iterativegeneralizedgaussian-call"]], "IterativeGeneralizedGaussian.apply_1d": [[369, "iterativegeneralizedgaussian-apply-1d"]], "IterativeGeneralizedGaussian.apply_1d_sized": [[370, "iterativegeneralizedgaussian-apply-1d-sized"]], "IterativeGeneralizedGaussian.compute_jacobian": [[371, "iterativegeneralizedgaussian-compute-jacobian"]], "IterativeGeneralizedGaussian.converge": [[372, "iterativegeneralizedgaussian-converge"]], "IterativeGeneralizedGaussian.determine_size": [[373, "iterativegeneralizedgaussian-determine-size"]], "IterativeGeneralizedGaussian.evaluate": [[374, "iterativegeneralizedgaussian-evaluate"]], "IterativeGeneralizedGaussian.fit": [[375, "iterativegeneralizedgaussian-fit"]], "IterativeGeneralizedGaussian.fit_lstsq": [[376, "iterativegeneralizedgaussian-fit-lstsq"]], "IterativeGeneralizedGaussian.generate_kernel": [[377, "iterativegeneralizedgaussian-generate-kernel"]], "IterativeGeneralizedGaussian.normalize_amplitude": [[378, "iterativegeneralizedgaussian-normalize-amplitude"]], "IterativeGeneralizedGaussian.update_state": [[379, "iterativegeneralizedgaussian-update-state"]], "IterativeGeneralizedGaussianWBackground": [[380, "iterativegeneralizedgaussianwbackground"]], "IterativeGeneralizedGaussianWBackground.__call__": [[381, "iterativegeneralizedgaussianwbackground-call"]], "IterativeGeneralizedGaussianWBackground.apply_1d": [[382, "iterativegeneralizedgaussianwbackground-apply-1d"]], "IterativeGeneralizedGaussianWBackground.apply_1d_sized": [[383, "iterativegeneralizedgaussianwbackground-apply-1d-sized"]], "IterativeGeneralizedGaussianWBackground.apply_update_bg": [[384, "iterativegeneralizedgaussianwbackground-apply-update-bg"]], "IterativeGeneralizedGaussianWBackground.compute_jacobian": [[385, "iterativegeneralizedgaussianwbackground-compute-jacobian"]], "IterativeGeneralizedGaussianWBackground.compute_jacobian_all": [[386, "iterativegeneralizedgaussianwbackground-compute-jacobian-all"]], "IterativeGeneralizedGaussianWBackground.compute_jacobian_bg": [[387, "iterativegeneralizedgaussianwbackground-compute-jacobian-bg"]], "IterativeGeneralizedGaussianWBackground.converge": [[388, "iterativegeneralizedgaussianwbackground-converge"]], "IterativeGeneralizedGaussianWBackground.determine_size": [[389, "iterativegeneralizedgaussianwbackground-determine-size"]], "IterativeGeneralizedGaussianWBackground.evaluate": [[390, "iterativegeneralizedgaussianwbackground-evaluate"]], "IterativeGeneralizedGaussianWBackground.evaluate_bg": [[391, "iterativegeneralizedgaussianwbackground-evaluate-bg"]], "IterativeGeneralizedGaussianWBackground.fit": [[392, "iterativegeneralizedgaussianwbackground-fit"]], "IterativeGeneralizedGaussianWBackground.fit_bg": [[393, "iterativegeneralizedgaussianwbackground-fit-bg"]], "IterativeGeneralizedGaussianWBackground.fit_lstsq": [[394, "iterativegeneralizedgaussianwbackground-fit-lstsq"]], "IterativeGeneralizedGaussianWBackground.generate_kernel": [[395, "iterativegeneralizedgaussianwbackground-generate-kernel"]], "IterativeGeneralizedGaussianWBackground.normalize_amplitude": [[396, "iterativegeneralizedgaussianwbackground-normalize-amplitude"]], "IterativeGeneralizedGaussianWBackground.update_state": [[397, "iterativegeneralizedgaussianwbackground-update-state"]], "giant.point_spread_functions.gaussians": [[398, "module-giant.point_spread_functions.gaussians"]], "giant.point_spread_functions.moments": [[399, "module-giant.point_spread_functions.moments"]], "giant.point_spread_functions.psf_meta": [[400, "module-giant.point_spread_functions.psf_meta"]], "Moment": [[401, "moment"]], "Moment.__call__": [[402, "moment-call"]], "Moment.apply_1d": [[403, "moment-apply-1d"]], "Moment.evaluate": [[404, "moment-evaluate"]], "Moment.fit": [[405, "moment-fit"]], "Moment.generate_kernel": [[406, "moment-generate-kernel"]], "InitialGuessIterativeNonlinearLSTSQPSF": [[407, "initialguessiterativenonlinearlstsqpsf"]], "InitialGuessIterativeNonlinearLSTSQPSF.fit_lstsq": [[408, "initialguessiterativenonlinearlstsqpsf-fit-lstsq"]], "InitialGuessIterativeNonlinearLSTSQPSFwBackground": [[409, "initialguessiterativenonlinearlstsqpsfwbackground"]], "InitialGuessIterativeNonlinearLSTSQPSFwBackground.compute_jacobian_all": [[410, "initialguessiterativenonlinearlstsqpsfwbackground-compute-jacobian-all"]], "InitialGuessIterativeNonlinearLSTSQPSFwBackground.evaluate": [[411, "initialguessiterativenonlinearlstsqpsfwbackground-evaluate"]], "InitialGuessIterativeNonlinearLSTSQPSFwBackground.fit_lstsq": [[412, "initialguessiterativenonlinearlstsqpsfwbackground-fit-lstsq"]], "IterativeNonlinearLSTSQPSF": [[413, "iterativenonlinearlstsqpsf"]], "IterativeNonlinearLSTSQPSF.compute_jacobian": [[414, "iterativenonlinearlstsqpsf-compute-jacobian"]], "IterativeNonlinearLSTSQPSF.converge": [[415, "iterativenonlinearlstsqpsf-converge"]], "IterativeNonlinearLSTSQPSF.update_state": [[416, "iterativenonlinearlstsqpsf-update-state"]], "IterativeNonlinearLSTSQwBackground": [[417, "iterativenonlinearlstsqwbackground"]], "IterativeNonlinearLSTSQwBackground.apply_update_bg": [[418, "iterativenonlinearlstsqwbackground-apply-update-bg"]], "IterativeNonlinearLSTSQwBackground.compute_jacobian_bg": [[419, "iterativenonlinearlstsqwbackground-compute-jacobian-bg"]], "IterativeNonlinearLSTSQwBackground.evaluate_bg": [[420, "iterativenonlinearlstsqwbackground-evaluate-bg"]], "IterativeNonlinearLSTSQwBackground.fit_bg": [[421, "iterativenonlinearlstsqwbackground-fit-bg"]], "KernelBasedApply1DPSF": [[422, "kernelbasedapply1dpsf"]], "KernelBasedApply1DPSF.apply_1d_sized": [[423, "kernelbasedapply1dpsf-apply-1d-sized"]], "KernelBasedCallPSF": [[424, "kernelbasedcallpsf"]], "KernelBasedCallPSF.__call__": [[425, "kernelbasedcallpsf-call"]], "PointSpreadFunction": [[426, "pointspreadfunction"]], "PointSpreadFunction.__call__": [[427, "pointspreadfunction-call"]], "PointSpreadFunction.apply_1d": [[428, "pointspreadfunction-apply-1d"]], "PointSpreadFunction.evaluate": [[429, "pointspreadfunction-evaluate"]], "PointSpreadFunction.fit": [[430, "pointspreadfunction-fit"]], "PointSpreadFunction.generate_kernel": [[431, "pointspreadfunction-generate-kernel"]], "SizedPSF": [[432, "sizedpsf"]], "SizedPSF.determine_size": [[433, "sizedpsf-determine-size"]], "SizedPSF.generate_kernel": [[434, "sizedpsf-generate-kernel"]], "illumination": [[435, "module-giant.ray_tracer.illumination"]], "kdtree": [[436, "module-giant.ray_tracer.kdtree"]], "rays": [[437, "module-giant.ray_tracer.rays"]], "scene": [[438, "module-giant.ray_tracer.scene"]], "shapes": [[439, "module-giant.ray_tracer.shapes"]], "AshikhminShirleyDiffuseIllumination": [[441, "ashikhminshirleydiffuseillumination"]], "GaskellIllumination": [[442, "gaskellillumination"]], "giant.ray_tracer.illumination.ILLUM_DTYPE": [[443, "giant-ray-tracer-illumination-illum-dtype"]], "IlluminationModel": [[444, "illuminationmodel"]], "LambertianIllumination": [[445, "lambertianillumination"]], "LommelSeeligerIllumination": [[446, "lommelseeligerillumination"]], "McEwenIllumination": [[447, "mcewenillumination"]], "McEwenIllumination.compute_photoclinometry_jacobian": [[448, "mcewenillumination-compute-photoclinometry-jacobian"]], "McEwenIllumination.numeric_derivative": [[449, "mcewenillumination-numeric-derivative"]], "KDNode": [[450, "kdnode"]], "KDNode.compute_bounding_box": [[451, "kdnode-compute-bounding-box"]], "KDNode.rotate": [[452, "kdnode-rotate"]], "KDNode.split": [[453, "kdnode-split"]], "KDNode.translate": [[454, "kdnode-translate"]], "KDTree": [[455, "kdtree"]], "KDTree.build": [[456, "kdtree-build"]], "KDTree.compute_intersect": [[457, "kdtree-compute-intersect"]], "KDTree.compute_limb_jacobian": [[458, "kdtree-compute-limb-jacobian"]], "KDTree.find_limbs": [[459, "kdtree-find-limbs"]], "KDTree.load": [[460, "kdtree-load"]], "KDTree.rotate": [[461, "kdtree-rotate"]], "KDTree.save": [[462, "kdtree-save"]], "KDTree.trace": [[463, "kdtree-trace"]], "KDTree.translate": [[464, "kdtree-translate"]], "describe_tree": [[465, "describe-tree"]], "get_facet_vertices": [[466, "get-facet-vertices"]], "get_ignore_inds": [[467, "get-ignore-inds"]], "giant.ray_tracer.rays.INTERSECT_DTYPE": [[468, "giant-ray-tracer-rays-intersect-dtype"]], "Rays": [[469, "rays"]], "Rays.rotate": [[470, "rays-rotate"]], "Rays.translate": [[471, "rays-translate"]], "compute_rays": [[472, "compute-rays"]], "CorrectionsType": [[473, "correctionstype"]], "giant.ray_tracer.scene.SPEED_OF_LIGHT": [[474, "giant-ray-tracer-scene-speed-of-light"]], "Scene": [[475, "scene"]], "Scene.calculate_apparent_position": [[476, "scene-calculate-apparent-position"]], "Scene.get_first": [[477, "scene-get-first"]], "Scene.get_illumination_inputs": [[478, "scene-get-illumination-inputs"]], "Scene.phase_angle": [[479, "scene-phase-angle"]], "Scene.raster_render": [[480, "scene-raster-render"]], "Scene.trace": [[481, "scene-trace"]], "Scene.update": [[482, "scene-update"]], "SceneObject": [[483, "sceneobject"]], "SceneObject.change_orientation": [[484, "sceneobject-change-orientation"]], "SceneObject.change_position": [[485, "sceneobject-change-position"]], "SceneObject.get_apparent_diameter": [[486, "sceneobject-get-apparent-diameter"]], "SceneObject.get_bounding_pixels": [[487, "sceneobject-get-bounding-pixels"]], "SceneObject.place": [[488, "sceneobject-place"]], "SceneObject.rotate": [[489, "sceneobject-rotate"]], "SceneObject.translate": [[490, "sceneobject-translate"]], "correct_light_time": [[491, "correct-light-time"]], "correct_stellar_aberration": [[492, "correct-stellar-aberration"]], "correct_stellar_aberration_fsp": [[493, "correct-stellar-aberration-fsp"]], "AxisAlignedBoundingBox": [[494, "axisalignedboundingbox"]], "AxisAlignedBoundingBox.compute_intersect": [[495, "axisalignedboundingbox-compute-intersect"]], "AxisAlignedBoundingBox.rotate": [[496, "axisalignedboundingbox-rotate"]], "AxisAlignedBoundingBox.trace": [[497, "axisalignedboundingbox-trace"]], "AxisAlignedBoundingBox.translate": [[498, "axisalignedboundingbox-translate"]], "min_max_to_bounding_box": [[499, "min-max-to-bounding-box"]], "Ellipsoid": [[500, "ellipsoid"]], "Ellipsoid.compute_albedos": [[501, "ellipsoid-compute-albedos"]], "Ellipsoid.compute_bounding_box": [[502, "ellipsoid-compute-bounding-box"]], "Ellipsoid.compute_intersect": [[503, "ellipsoid-compute-intersect"]], "Ellipsoid.compute_limb_jacobian": [[504, "ellipsoid-compute-limb-jacobian"]], "Ellipsoid.compute_normals": [[505, "ellipsoid-compute-normals"]], "Ellipsoid.find_limbs": [[506, "ellipsoid-find-limbs"]], "Ellipsoid.intersect": [[507, "ellipsoid-intersect"]], "Ellipsoid.rotate": [[508, "ellipsoid-rotate"]], "Ellipsoid.trace": [[509, "ellipsoid-trace"]], "Ellipsoid.translate": [[510, "ellipsoid-translate"]], "quadratic_equation": [[511, "quadratic-equation"]], "axis_aligned_bounding_box": [[512, "module-giant.ray_tracer.shapes.axis_aligned_bounding_box"]], "ellipsoid": [[513, "module-giant.ray_tracer.shapes.ellipsoid"]], "point": [[514, "module-giant.ray_tracer.shapes.point"]], "shape": [[515, "module-giant.ray_tracer.shapes.shape"]], "solid": [[516, "module-giant.ray_tracer.shapes.solid"]], "surface": [[517, "module-giant.ray_tracer.shapes.surface"]], "triangle": [[518, "module-giant.ray_tracer.shapes.triangle"]], "Point": [[519, "point"]], "Point.rotate": [[520, "point-rotate"]], "Point.translate": [[521, "point-translate"]], "Shape": [[522, "shape"]], "Shape.compute_intersect": [[523, "shape-compute-intersect"]], "Shape.compute_limb_jacobian": [[524, "shape-compute-limb-jacobian"]], "Shape.find_limbs": [[525, "shape-find-limbs"]], "Shape.rotate": [[526, "shape-rotate"]], "Shape.trace": [[527, "shape-trace"]], "Shape.translate": [[528, "shape-translate"]], "Solid": [[529, "solid"]], "Solid.compute_intersect": [[530, "solid-compute-intersect"]], "Solid.compute_limb_jacobian": [[531, "solid-compute-limb-jacobian"]], "Solid.find_limbs": [[532, "solid-find-limbs"]], "Solid.rotate": [[533, "solid-rotate"]], "Solid.trace": [[534, "solid-trace"]], "Solid.translate": [[535, "solid-translate"]], "RawSurface": [[536, "rawsurface"]], "RawSurface.compute_bounding_box": [[537, "rawsurface-compute-bounding-box"]], "RawSurface.compute_intersect": [[538, "rawsurface-compute-intersect"]], "RawSurface.compute_limb_jacobian": [[539, "rawsurface-compute-limb-jacobian"]], "RawSurface.compute_reference_ellipsoid": [[540, "rawsurface-compute-reference-ellipsoid"]], "RawSurface.find_limbs": [[541, "rawsurface-find-limbs"]], "RawSurface.merge": [[542, "rawsurface-merge"]], "RawSurface.rotate": [[543, "rawsurface-rotate"]], "RawSurface.trace": [[544, "rawsurface-trace"]], "RawSurface.translate": [[545, "rawsurface-translate"]], "Surface": [[546, "surface"]], "Surface.compute_intersect": [[547, "surface-compute-intersect"]], "Surface.compute_limb_jacobian": [[548, "surface-compute-limb-jacobian"]], "Surface.find_limbs": [[549, "surface-find-limbs"]], "Surface.rotate": [[550, "surface-rotate"]], "Surface.trace": [[551, "surface-trace"]], "Surface.translate": [[552, "surface-translate"]], "Surface32": [[553, "surface32"]], "Surface32.compute_bounding_box": [[554, "surface32-compute-bounding-box"]], "Surface32.compute_intersect": [[555, "surface32-compute-intersect"]], "Surface32.compute_limb_jacobian": [[556, "surface32-compute-limb-jacobian"]], "Surface32.compute_reference_ellipsoid": [[557, "surface32-compute-reference-ellipsoid"]], "Surface32.find_limbs": [[558, "surface32-find-limbs"]], "Surface32.merge": [[559, "surface32-merge"]], "Surface32.rotate": [[560, "surface32-rotate"]], "Surface32.trace": [[561, "surface32-trace"]], "Surface32.translate": [[562, "surface32-translate"]], "Surface64": [[563, "surface64"]], "Surface64.compute_bounding_box": [[564, "surface64-compute-bounding-box"]], "Surface64.compute_intersect": [[565, "surface64-compute-intersect"]], "Surface64.compute_limb_jacobian": [[566, "surface64-compute-limb-jacobian"]], "Surface64.compute_normals": [[567, "surface64-compute-normals"]], "Surface64.compute_reference_ellipsoid": [[568, "surface64-compute-reference-ellipsoid"]], "Surface64.find_limbs": [[569, "surface64-find-limbs"]], "Surface64.merge": [[570, "surface64-merge"]], "Surface64.rotate": [[571, "surface64-rotate"]], "Surface64.trace": [[572, "surface64-trace"]], "Surface64.translate": [[573, "surface64-translate"]], "find_limbs_surface": [[574, "find-limbs-surface"]], "Triangle32": [[575, "triangle32"]], "Triangle32.compute_bounding_box": [[576, "triangle32-compute-bounding-box"]], "Triangle32.compute_intersect": [[577, "triangle32-compute-intersect"]], "Triangle32.compute_limb_jacobian": [[578, "triangle32-compute-limb-jacobian"]], "Triangle32.compute_normals": [[579, "triangle32-compute-normals"]], "Triangle32.compute_reference_ellipsoid": [[580, "triangle32-compute-reference-ellipsoid"]], "Triangle32.find_limbs": [[581, "triangle32-find-limbs"]], "Triangle32.get_albedo": [[582, "triangle32-get-albedo"]], "Triangle32.merge": [[583, "triangle32-merge"]], "Triangle32.rotate": [[584, "triangle32-rotate"]], "Triangle32.trace": [[585, "triangle32-trace"]], "Triangle32.translate": [[586, "triangle32-translate"]], "Triangle64": [[587, "triangle64"]], "Triangle64.compute_bounding_box": [[588, "triangle64-compute-bounding-box"]], "Triangle64.compute_intersect": [[589, "triangle64-compute-intersect"]], "Triangle64.compute_limb_jacobian": [[590, "triangle64-compute-limb-jacobian"]], "Triangle64.compute_normals": [[591, "triangle64-compute-normals"]], "Triangle64.compute_reference_ellipsoid": [[592, "triangle64-compute-reference-ellipsoid"]], "Triangle64.find_limbs": [[593, "triangle64-find-limbs"]], "Triangle64.get_albedo": [[594, "triangle64-get-albedo"]], "Triangle64.merge": [[595, "triangle64-merge"]], "Triangle64.rotate": [[596, "triangle64-rotate"]], "Triangle64.trace": [[597, "triangle64-trace"]], "Triangle64.translate": [[598, "triangle64-translate"]], "compute_com": [[599, "compute-com"]], "compute_stats": [[600, "compute-stats"]], "find_limbs": [[601, "find-limbs"]], "ref_ellipse": [[602, "ref-ellipse"]], "to_block": [[603, "to-block"]], "XCorrCenterFinding.reset": [[608, "xcorrcenterfinding-reset"]], "XCorrCenterFinding.target_generator": [[609, "xcorrcenterfinding-target-generator"]], "EllipseMatching.target_generator": [[614, "ellipsematching-target-generator"]], "RelNavEstimator.estimate": [[620, "relnavestimator-estimate"]], "RelNavEstimator.reset": [[621, "relnavestimator-reset"]], "RelNavEstimator.target_generator": [[622, "relnavestimator-target-generator"]], "RelNavObservablesType": [[623, "relnavobservablestype"]], "estimator_interface_abc": [[626, "module-giant.relative_opnav.estimators.estimator_interface_abc"]], "sfn": [[629, "module-giant.relative_opnav.estimators.sfn"]], "LimbMatching.target_generator": [[636, "limbmatching-target-generator"]], "MomentAlgorithm.reset": [[642, "momentalgorithm-reset"]], "MomentAlgorithm.target_generator": [[644, "momentalgorithm-target-generator"]], "sfn_correlators": [[646, "module-giant.relative_opnav.estimators.sfn.sfn_correlators"]], "surface_features": [[647, "module-giant.relative_opnav.estimators.sfn.surface_features"]], "Detailed Description": [[647, "detailed-description"]], "Lazy Loading/Unloading": [[647, "lazy-loading-unloading"]], "SurfaceFeatureNavigation.reset": [[654, "surfacefeaturenavigation-reset"]], "SurfaceFeatureNavigation.target_generator": [[655, "surfacefeaturenavigation-target-generator"]], "SurfaceFeatureNavigationOptions.peak_finder": [[657, "surfacefeaturenavigationoptions-peak-finder"]], "sfn_correlator": [[658, "sfn-correlator"]], "FeatureCatalogue": [[659, "featurecatalogue"]], "FeatureCatalogue.get_first": [[660, "featurecatalogue-get-first"]], "FeatureCatalogue.rotate": [[661, "featurecatalogue-rotate"]], "FeatureCatalogue.trace": [[662, "featurecatalogue-trace"]], "FeatureCatalogue.translate": [[663, "featurecatalogue-translate"]], "FeatureCatalogue.update_feature_paths": [[664, "featurecatalogue-update-feature-paths"]], "SurfaceFeature": [[665, "surfacefeature"]], "SurfaceFeature.found": [[666, "surfacefeature-found"]], "SurfaceFeature.load": [[667, "surfacefeature-load"]], "SurfaceFeature.not_found": [[668, "surfacefeature-not-found"]], "SurfaceFeature.trace": [[669, "surfacefeature-trace"]], "SurfaceFeature.update_file": [[670, "surfacefeature-update-file"]], "SurfaceFeature.update_path": [[671, "surfacefeature-update-path"]], "VisibleFeatureFinder": [[672, "visiblefeaturefinder"]], "VisibleFeatureFinder.apply_options": [[673, "visiblefeaturefinder-apply-options"]], "VisibleFeatureFinderOptions": [[674, "visiblefeaturefinderoptions"]], "PhaseCorrector.estimate": [[679, "phasecorrector-estimate"]], "PhaseCorrector.reset": [[681, "phasecorrector-reset"]], "PhaseCorrector.target_generator": [[683, "phasecorrector-target-generator"]], "UnresolvedCenterFinding.reset": [[689, "unresolvedcenterfinding-reset"]], "UnresolvedCenterFinding.target_generator": [[691, "unresolvedcenterfinding-target-generator"]], "estimators": [[692, "module-giant.relative_opnav.estimators"]], "Adding a New RelNav Technique": [[692, "adding-a-new-relnav-technique"]], "RelativeOpNav.reset_image_processing": [[705, "relativeopnav-reset-image-processing"]], "RelativeOpNav.update_image_processing": [[707, "relativeopnav-update-image-processing"]], "Rotation": [[708, "rotation"]], "Rotation.copy": [[709, "rotation-copy"]], "Rotation.interp_attitude": [[710, "rotation-interp-attitude"]], "Rotation.inv": [[711, "rotation-inv"]], "Rotation.rotate": [[712, "rotation-rotate"]], "euler_to_rotmat": [[713, "euler-to-rotmat"]], "nlerp": [[714, "nlerp"]], "quaternion_inverse": [[715, "quaternion-inverse"]], "quaternion_multiplication": [[716, "quaternion-multiplication"]], "quaternion_to_euler": [[717, "quaternion-to-euler"]], "quaternion_to_rotmat": [[718, "quaternion-to-rotmat"]], "quaternion_to_rotvec": [[719, "quaternion-to-rotvec"]], "rot_x": [[720, "rot-x"]], "rot_y": [[721, "rot-y"]], "rot_z": [[722, "rot-z"]], "rotmat_to_euler": [[723, "rotmat-to-euler"]], "rotmat_to_quaternion": [[724, "rotmat-to-quaternion"]], "rotvec_to_quaternion": [[725, "rotvec-to-quaternion"]], "rotvec_to_rotmat": [[726, "rotvec-to-rotmat"]], "skew": [[727, "skew"]], "slerp": [[728, "slerp"]], "MODEL": [[729, "model"]], "PSF": [[730, "psf"]], "giant.scripts.generate_sample_data.camera_orientation": [[731, "giant-scripts-generate-sample-data-camera-orientation"]], "giant.scripts.generate_sample_data.camera_position": [[732, "giant-scripts-generate-sample-data-camera-position"]], "giant.scripts.generate_sample_data.sun_orientation": [[733, "giant-scripts-generate-sample-data-sun-orientation"]], "giant.scripts.generate_sample_data.sun_position": [[734, "giant-scripts-generate-sample-data-sun-position"]], "giant.scripts.generate_sample_data.target_orientation": [[735, "giant-scripts-generate-sample-data-target-orientation"]], "giant.scripts.generate_sample_data.target_position": [[736, "giant-scripts-generate-sample-data-target-position"]], "Usage": [[737, "usage"], [739, "usage"], [740, "usage"], [741, "usage"], [742, "usage"], [743, "usage"], [744, "usage"], [745, "usage"]], "Named Arguments": [[737, "named-arguments"], [739, "named-arguments"], [740, "named-arguments"], [741, "named-arguments"], [742, "named-arguments"], [743, "named-arguments"], [744, "named-arguments"], [745, "named-arguments"]], "generate_sample_data": [[738, "generate-sample-data"]], "ingest_shape": [[739, "ingest-shape"]], "Positional Arguments": [[739, "positional-arguments"], [740, "positional-arguments"], [741, "positional-arguments"], [742, "positional-arguments"], [743, "positional-arguments"], [745, "positional-arguments"]], "merge_cameras": [[740, "merge-cameras"]], "mosaic_images": [[741, "mosaic-images"]], "shape_stats": [[742, "shape-stats"]], "spc_to_feature_catalogue": [[743, "spc-to-feature-catalogue"]], "spc_to_results": [[744, "spc-to-results"]], "tile_shape": [[745, "tile-shape"]], "AttitudeEstimator": [[746, "attitudeestimator"]], "AttitudeEstimator.estimate": [[747, "attitudeestimator-estimate"]], "DavenportQMethod": [[748, "davenportqmethod"]], "DavenportQMethod.compute_residuals": [[749, "davenportqmethod-compute-residuals"]], "DavenportQMethod.estimate": [[750, "davenportqmethod-estimate"]], "giant.stellar_opnav.estimators": [[751, "module-giant.stellar_opnav.estimators"]], "giant.stellar_opnav.star_identification": [[752, "module-giant.stellar_opnav.star_identification"]], "Algorithm Description": [[752, "algorithm-description"]], "Tuning the StarID routines": [[752, "tuning-the-starid-routines"]], "giant.stellar_opnav.stellar_class": [[753, "module-giant.stellar_opnav.stellar_class"]], "giant.stellar_opnav.visualizer": [[754, "module-giant.stellar_opnav.visualizer"]], "StarID": [[755, "starid"]], "StarID.compute_pointing": [[756, "starid-compute-pointing"]], "StarID.id_stars": [[757, "starid-id-stars"]], "StarID.project_stars": [[758, "starid-project-stars"]], "StarID.query_catalogue": [[759, "starid-query-catalogue"]], "StarID.ransac": [[760, "starid-ransac"]], "StarID.ransac_iter_test": [[761, "starid-ransac-iter-test"]], "StellarOpNav": [[762, "stellaropnav"]], "StellarOpNav.add_images": [[763, "stellaropnav-add-images"]], "StellarOpNav.estimate_attitude": [[764, "stellaropnav-estimate-attitude"]], "StellarOpNav.id_stars": [[765, "stellaropnav-id-stars"]], "StellarOpNav.matched_star_residuals": [[766, "stellaropnav-matched-star-residuals"]], "StellarOpNav.remove_matched_stars": [[767, "stellaropnav-remove-matched-stars"]], "StellarOpNav.remove_outliers": [[768, "stellaropnav-remove-outliers"]], "StellarOpNav.reproject_stars": [[769, "stellaropnav-reproject-stars"]], "StellarOpNav.reset_attitude_estimator": [[770, "stellaropnav-reset-attitude-estimator"]], "StellarOpNav.reset_image_processing": [[771, "stellaropnav-reset-image-processing"]], "StellarOpNav.reset_star_id": [[772, "stellaropnav-reset-star-id"]], "StellarOpNav.review_outliers": [[773, "stellaropnav-review-outliers"]], "StellarOpNav.sid_summary": [[774, "stellaropnav-sid-summary"]], "StellarOpNav.update_attitude_estimator": [[775, "stellaropnav-update-attitude-estimator"]], "StellarOpNav.update_image_processing": [[776, "stellaropnav-update-image-processing"]], "StellarOpNav.update_star_id": [[777, "stellaropnav-update-star-id"]], "OutlierCallback": [[778, "outliercallback"]], "giant.stellar_opnav.visualizer.plot_residuals_vs_magnitude": [[779, "giant-stellar-opnav-visualizer-plot-residuals-vs-magnitude"]], "giant.stellar_opnav.visualizer.plot_residuals_vs_temperature": [[780, "giant-stellar-opnav-visualizer-plot-residuals-vs-temperature"]], "giant.stellar_opnav.visualizer.residual_histograms": [[781, "giant-stellar-opnav-visualizer-residual-histograms"]], "show_id_results": [[782, "show-id-results"]], "show_outlier": [[783, "show-outlier"]], "Performing Camera Calibration": [[784, "performing-camera-calibration"]], "Initial Imports": [[784, "initial-imports"], [787, "initial-imports"]], "Initializing Our Camera Model": [[784, "initializing-our-camera-model"]], "Defining a Meta Kernel": [[784, "defining-a-meta-kernel"]], "Loading the Images and Creating the Camera Instance": [[784, "loading-the-images-and-creating-the-camera-instance"], [787, "loading-the-images-and-creating-the-camera-instance"]], "Creating the Calibration Object": [[784, "creating-the-calibration-object"]], "Identifying Stars in an Image": [[784, "identifying-stars-in-an-image"]], "Performing Calibration": [[784, "performing-calibration"]], "Viewing the Calibration Results": [[784, "viewing-the-calibration-results"]], "Saving the Solved for Camera Model": [[784, "saving-the-solved-for-camera-model"]], "The Full FC2 Calibration Script": [[784, "the-full-fc2-calibration-script"]], "Acquiring Data for the Tutorial": [[785, "acquiring-data-for-the-tutorial"]], "Initial Set-up": [[786, "initial-set-up"]], "Customizing GIANT for DAWN": [[786, "customizing-giant-for-dawn"]], "Defining Our Imports": [[786, "defining-our-imports"]], "Subclassing OpNavImage": [[786, "subclassing-opnavimage"]], "Subclassing the Camera Class": [[786, "subclassing-the-camera-class"]], "Defining Functions to Return State Information": [[786, "defining-functions-to-return-state-information"]], "Installing dawn_giant": [[786, "installing-dawn-giant"]], "The Full dawn_giant File": [[786, "the-full-dawn-giant-file"]], "Performing Optical Navigation": [[787, "performing-optical-navigation"]], "Loading the Data": [[787, "loading-the-data"]], "Estimating the Rotation Using Star Images": [[787, "estimating-the-rotation-using-star-images"]], "Updating the Short Exposure Image Rotation": [[787, "updating-the-short-exposure-image-rotation"]], "Defining the OpNav Scene": [[787, "defining-the-opnav-scene"]], "Creating the RelNav Instance and extracting the observables": [[787, "creating-the-relnav-instance-and-extracting-the-observables"]], "The Complete OpNav Script": [[787, "the-complete-opnav-script"]], "Conclusion": [[787, "conclusion"]], "Organization": [[788, "organization"]], "ClearableQueue": [[789, "clearablequeue"]], "ClearableQueue.cancel_join_thread": [[790, "clearablequeue-cancel-join-thread"]], "ClearableQueue.clear": [[791, "clearablequeue-clear"]], "ClearableQueue.close": [[792, "clearablequeue-close"]], "ClearableQueue.empty": [[793, "clearablequeue-empty"]], "ClearableQueue.full": [[794, "clearablequeue-full"]], "ClearableQueue.get": [[795, "clearablequeue-get"]], "ClearableQueue.get_nowait": [[796, "clearablequeue-get-nowait"]], "ClearableQueue.join_thread": [[797, "clearablequeue-join-thread"]], "ClearableQueue.put": [[798, "clearablequeue-put"]], "ClearableQueue.put_nowait": [[799, "clearablequeue-put-nowait"]], "ClearableQueue.qsize": [[800, "clearablequeue-qsize"]], "SharedCounter": [[801, "sharedcounter"]], "SharedCounter.increment": [[802, "sharedcounter-increment"]], "Detector": [[803, "detector"]], "Detector.add_images": [[804, "detector-add-images"]], "Detector.clear_results": [[805, "detector-clear-results"]], "Detector.find_ufos": [[806, "detector-find-ufos"]], "Detector.identify_hot_pixels_and_unmatched_stars": [[807, "detector-identify-hot-pixels-and-unmatched-stars"]], "Detector.package_results": [[808, "detector-package-results"]], "Detector.remove_duplicates": [[809, "detector-remove-duplicates"]], "Detector.save_results": [[810, "detector-save-results"]], "Detector.update_attitude": [[811, "detector-update-attitude"]], "unit_to_radec_jacobian": [[812, "unit-to-radec-jacobian"]], "Dynamics": [[813, "dynamics"]], "Dynamics.compute_dynamics": [[814, "dynamics-compute-dynamics"]], "Dynamics.propagate": [[815, "dynamics-propagate"]], "SolRadAndGravityDynamics": [[816, "solradandgravitydynamics"]], "SolRadAndGravityDynamics.compute_covariance_dynamics": [[817, "solradandgravitydynamics-compute-covariance-dynamics"]], "SolRadAndGravityDynamics.compute_dynamics": [[818, "solradandgravitydynamics-compute-dynamics"]], "SolRadAndGravityDynamics.compute_solar_radiation_acceleration": [[819, "solradandgravitydynamics-compute-solar-radiation-acceleration"]], "SolRadAndGravityDynamics.compute_state_dynamics": [[820, "solradandgravitydynamics-compute-state-dynamics"]], "SolRadAndGravityDynamics.get_gm": [[821, "solradandgravitydynamics-get-gm"]], "SolRadAndGravityDynamics.propagate": [[822, "solradandgravitydynamics-propagate"]], "SpiceGravityDynamics": [[823, "spicegravitydynamics"]], "SpiceGravityDynamics.compute_covariance_dynamics": [[824, "spicegravitydynamics-compute-covariance-dynamics"]], "SpiceGravityDynamics.compute_dynamics": [[825, "spicegravitydynamics-compute-dynamics"]], "SpiceGravityDynamics.compute_state_dynamics": [[826, "spicegravitydynamics-compute-state-dynamics"]], "SpiceGravityDynamics.get_gm": [[827, "spicegravitydynamics-get-gm"]], "SpiceGravityDynamics.propagate": [[828, "spicegravitydynamics-propagate"]], "zero3": [[829, "zero3"]], "Tracker": [[830, "tracker"]], "Tracker.filter_ekfs": [[831, "tracker-filter-ekfs"]], "Tracker.find_initial_pairs": [[832, "tracker-find-initial-pairs"]], "Tracker.save_results": [[833, "tracker-save-results"]], "Tracker.track": [[834, "tracker-track"]], "ExtendedKalmanFilter": [[835, "extendedkalmanfilter"]], "ExtendedKalmanFilter.compute_residual_statistics": [[836, "extendedkalmanfilter-compute-residual-statistics"]], "ExtendedKalmanFilter.initialize": [[837, "extendedkalmanfilter-initialize"]], "ExtendedKalmanFilter.process_measurement": [[838, "extendedkalmanfilter-process-measurement"]], "ExtendedKalmanFilter.propagate_and_predict": [[839, "extendedkalmanfilter-propagate-and-predict"]], "ExtendedKalmanFilter.smooth": [[840, "extendedkalmanfilter-smooth"]], "giant.ufo.clearable_queue": [[841, "module-giant.ufo.clearable_queue"]], "giant.ufo.detector": [[842, "module-giant.ufo.detector"]], "giant.ufo.dynamics": [[843, "module-giant.ufo.dynamics"]], "giant.ufo.ekf_tracker": [[844, "module-giant.ufo.ekf_tracker"]], "extended_kalman_filter": [[845, "module-giant.ufo.extended_kalman_filter"]], "measurements": [[846, "module-giant.ufo.measurements"]], "giant.ufo.state_initializer": [[847, "module-giant.ufo.state_initializer"]], "giant.ufo.ufo_class": [[848, "module-giant.ufo.ufo_class"]], "giant.ufo.visualizer": [[849, "module-giant.ufo.visualizer"]], "Measurement": [[850, "measurement"]], "Measurement.compare_residuals": [[851, "measurement-compare-residuals"]], "Measurement.compute_jacobian": [[852, "measurement-compute-jacobian"]], "Measurement.predict": [[853, "measurement-predict"]], "OpticalBearingMeasurement": [[854, "opticalbearingmeasurement"]], "OpticalBearingMeasurement.compare_residuals": [[855, "opticalbearingmeasurement-compare-residuals"]], "OpticalBearingMeasurement.compute_jacobian": [[856, "opticalbearingmeasurement-compute-jacobian"]], "OpticalBearingMeasurement.predict": [[857, "opticalbearingmeasurement-predict"]], "ORExInitializer": [[858, "orexinitializer"]], "UFO": [[859, "ufo"]], "UFO.detect": [[860, "ufo-detect"]], "UFO.save_results": [[861, "ufo-save-results"]], "UFO.track": [[862, "ufo-track"]], "UFO.visualize_detection_results": [[863, "ufo-visualize-detection-results"]], "show_detections": [[864, "show-detections"]], "giant.utilities.outlier_identifier": [[865, "module-giant.utilities.outlier_identifier"]], "giant.utilities.random_combination": [[866, "module-giant.utilities.random_combination"]], "giant.utilities.spice_interface": [[867, "module-giant.utilities.spice_interface"]], "giant.utilties.stereophotoclinometry": [[868, "module-giant.utilities.stereophotoclinometry"]], "giant.utilities.tee": [[869, "module-giant.utilities.tee"]], "get_outliers": [[870, "get-outliers"]], "RandomCombinations": [[871, "randomcombinations"]], "HAS_SPICE": [[872, "has-spice"]], "J2000_EPOCH": [[873, "j2000-epoch"]], "LEAP_SECONDS_LIST": [[874, "leap-seconds-list"]], "SpiceOrientation": [[875, "spiceorientation"]], "SpicePosition": [[876, "spiceposition"]], "SpicePosition.light_time": [[877, "spiceposition-light-time"]], "SpicePosition.position_light_time": [[878, "spiceposition-position-light-time"]], "SpiceState": [[879, "spicestate"]], "SpiceState.light_time": [[880, "spicestate-light-time"]], "SpiceState.position_light_time": [[881, "spicestate-position-light-time"]], "create_callable_orientation": [[882, "create-callable-orientation"]], "create_callable_position": [[883, "create-callable-position"]], "create_callable_state": [[884, "create-callable-state"]], "datetime_to_et": [[885, "datetime-to-et"]], "et_callable_to_datetime_callable": [[886, "et-callable-to-datetime-callable"]], "leap_seconds": [[887, "leap-seconds"]], "DATE_FMT": [[888, "date-fmt"]], "Image": [[889, "image"]], "Image.read": [[890, "image-read"]], "Image.write": [[891, "image-write"]], "Landmark": [[892, "landmark"]], "Landmark.read": [[893, "landmark-read"]], "Landmark.write": [[894, "landmark-write"]], "Maplet": [[895, "maplet"]], "Maplet.get_triangles": [[896, "maplet-get-triangles"]], "Maplet.read": [[897, "maplet-read"]], "Maplet.write": [[898, "maplet-write"]], "Nominal": [[899, "nominal"]], "Nominal.read": [[900, "nominal-read"]], "Nominal.write": [[901, "nominal-write"]], "Regress": [[902, "regress"]], "Regress.read": [[903, "regress-read"]], "ShapeModel": [[904, "shapemodel"]], "ShapeModel.get_triangles": [[905, "shapemodel-get-triangles"]], "ShapeModel.read": [[906, "shapemodel-read"]], "ShapeModel.write": [[907, "shapemodel-write"]], "Summary": [[908, "summary"]], "Summary.read": [[909, "summary-read"]], "Summary.write": [[910, "summary-write"]], "get_distortion": [[911, "get-distortion"]], "DoubleTee": [[912, "doubletee"]], "DoubleTee.close": [[913, "doubletee-close"]], "REDIRECT": [[914, "redirect"]], "Tee": [[915, "tee"]], "Tee.close": [[916, "tee-close"]], "Tee.flush": [[917, "tee-flush"]], "Tee.write": [[918, "tee-write"]], "relnav_class": [[693, "module-giant.relative_opnav.relnav_class"]], "Extending RelativeOpNav With New Techniques": [[693, "extending-relativeopnav-with-new-techniques"]], "giant.relative_opnav.relnav_class.RESULTS_DTYPE": [[694, "giant-relative-opnav-relnav-class-results-dtype"]], "RelativeOpNav.add_images": [[696, "relativeopnav-add-images"]], "RelativeOpNav.auto_estimate": [[697, "relativeopnav-auto-estimate"]], "RelativeOpNav.cross_correlation_estimate": [[698, "relativeopnav-cross-correlation-estimate"]], "RelativeOpNav.default_estimator": [[699, "relativeopnav-default-estimator"]], "RelativeOpNav.ellipse_matching_estimate": [[700, "relativeopnav-ellipse-matching-estimate"]], "RelativeOpNav.limb_matching_estimate": [[701, "relativeopnav-limb-matching-estimate"]], "RelativeOpNav.moment_algorithm_estimate": [[702, "relativeopnav-moment-algorithm-estimate"]], "RelativeOpNav.process_image": [[703, "relativeopnav-process-image"]], "RelativeOpNav.register": [[704, "relativeopnav-register"]], "RelativeOpNav.unresolved_estimate": [[706, "relativeopnav-unresolved-estimate"]], "RelativeOpNav": [[695, "relativeopnav"]], "RelNavEstimator": [[619, "relnavestimator"]], "XCorrCenterFinding": [[604, "xcorrcenterfinding"]], "XCorrCenterFinding.compute_rays": [[605, "xcorrcenterfinding-compute-rays"]], "XCorrCenterFinding.estimate": [[606, "xcorrcenterfinding-estimate"]], "XCorrCenterFinding.render": [[607, "xcorrcenterfinding-render"]], "EllipseMatching": [[610, "ellipsematching"]], "EllipseMatching.estimate": [[611, "ellipsematching-estimate"]], "EllipseMatching.extract_and_pair_limbs": [[612, "ellipsematching-extract-and-pair-limbs"]], "EllipseMatching.reset": [[613, "ellipsematching-reset"]], "LimbExtractionMethods": [[615, "limbextractionmethods"]], "LimbScanner": [[616, "limbscanner"]], "LimbScanner.extract_limbs": [[617, "limbscanner-extract-limbs"]], "LimbScanner.predict_limbs": [[618, "limbscanner-predict-limbs"]], "cross_correlation": [[624, "module-giant.relative_opnav.estimators.cross_correlation"]], "Description of the Technique": [[624, "description-of-the-technique"], [625, "description-of-the-technique"], [627, "description-of-the-technique"], [628, "description-of-the-technique"], [630, "description-of-the-technique"], [645, "description-of-the-technique"]], "Tuning": [[624, "tuning"], [625, "tuning"], [627, "tuning"], [628, "tuning"], [630, "tuning"], [645, "tuning"]], "ellipse_matching": [[625, "module-giant.relative_opnav.estimators.ellipse_matching"]], "limb_matching": [[627, "module-giant.relative_opnav.estimators.limb_matching"]], "moment_algorithm": [[628, "module-giant.relative_opnav.estimators.moment_algorithm"]], "unresolved": [[630, "module-giant.relative_opnav.estimators.unresolved"]], "LimbMatching": [[631, "limbmatching"]], "LimbMatching.compute_jacobian": [[632, "limbmatching-compute-jacobian"]], "LimbMatching.estimate": [[633, "limbmatching-estimate"]], "LimbMatching.extract_and_pair_limbs": [[634, "limbmatching-extract-and-pair-limbs"]], "LimbMatching.reset": [[635, "limbmatching-reset"]], "MomentAlgorithm": [[637, "momentalgorithm"]], "MomentAlgorithm.compute_line_of_sight_sun_image": [[638, "momentalgorithm-compute-line-of-sight-sun-image"]], "MomentAlgorithm.compute_phase_correction": [[639, "momentalgorithm-compute-phase-correction"]], "MomentAlgorithm.estimate": [[640, "momentalgorithm-estimate"]], "MomentAlgorithm.rastered_phase_correction": [[641, "momentalgorithm-rastered-phase-correction"]], "MomentAlgorithm.simple_phase_correction": [[643, "momentalgorithm-simple-phase-correction"]], "sfn_class": [[645, "module-giant.relative_opnav.estimators.sfn.sfn_class"]], "SurfaceFeatureNavigation": [[648, "surfacefeaturenavigation"]], "SurfaceFeatureNavigation.apply_options": [[649, "surfacefeaturenavigation-apply-options"]], "SurfaceFeatureNavigation.compute_rays": [[650, "surfacefeaturenavigation-compute-rays"]], "SurfaceFeatureNavigation.estimate": [[651, "surfacefeaturenavigation-estimate"]], "SurfaceFeatureNavigation.pnp_solver": [[652, "surfacefeaturenavigation-pnp-solver"]], "SurfaceFeatureNavigation.render": [[653, "surfacefeaturenavigation-render"]], "SurfaceFeatureNavigationOptions": [[656, "surfacefeaturenavigationoptions"]], "PhaseCorrectionType": [[675, "phasecorrectiontype"]], "PhaseCorrector": [[676, "phasecorrector"]], "PhaseCorrector.compute_line_of_sight_sun_image": [[677, "phasecorrector-compute-line-of-sight-sun-image"]], "PhaseCorrector.compute_phase_correction": [[678, "phasecorrector-compute-phase-correction"]], "PhaseCorrector.rastered_phase_correction": [[680, "phasecorrector-rastered-phase-correction"]], "PhaseCorrector.simple_phase_correction": [[682, "phasecorrector-simple-phase-correction"]], "UnresolvedCenterFinding": [[684, "unresolvedcenterfinding"]], "UnresolvedCenterFinding.compute_line_of_sight_sun_image": [[685, "unresolvedcenterfinding-compute-line-of-sight-sun-image"]], "UnresolvedCenterFinding.compute_phase_correction": [[686, "unresolvedcenterfinding-compute-phase-correction"]], "UnresolvedCenterFinding.estimate": [[687, "unresolvedcenterfinding-estimate"]], "UnresolvedCenterFinding.rastered_phase_correction": [[688, "unresolvedcenterfinding-rastered-phase-correction"]], "UnresolvedCenterFinding.simple_phase_correction": [[690, "unresolvedcenterfinding-simple-phase-correction"]]}, "indexentries": {"xcorrcenterfinding (class in giant.relative_opnav.estimators.cross_correlation)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding"]], "blur (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.blur"]], "brdf (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.brdf"]], "camera (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding property)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.camera"]], "computed_bearings (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.computed_bearings"]], "details (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.details"]], "generates_templates (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.generates_templates"]], "grid_size (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.grid_size"]], "min_corr_score (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.min_corr_score"]], "observable_type (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.observable_type"]], "observed_bearings (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.observed_bearings"]], "peak_finder (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.peak_finder"]], "rays (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.rays"]], "relnav_handler (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.relnav_handler"]], "scene (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding property)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.scene"]], "search_region (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.search_region"]], "technique (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.technique"]], "template_overflow_bounds (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding attribute)": [[604, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.template_overflow_bounds"]], "compute_rays() (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding method)": [[605, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.compute_rays"]], "estimate() (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding method)": [[606, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.estimate"]], "render() (giant.relative_opnav.estimators.cross_correlation.xcorrcenterfinding method)": [[607, "giant.relative_opnav.estimators.cross_correlation.XCorrCenterFinding.render"]], "ellipsematching (class in giant.relative_opnav.estimators.ellipse_matching)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching"]], "camera (giant.relative_opnav.estimators.ellipse_matching.ellipsematching property)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.camera"]], "computed_bearings (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.computed_bearings"]], "computed_positions (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.computed_positions"]], "details (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.details"]], "extraction_method (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.extraction_method"]], "generates_templates (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.generates_templates"]], "interpolator (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.interpolator"]], "limbs_camera (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.limbs_camera"]], "observable_type (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.observable_type"]], "observed_bearings (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.observed_bearings"]], "observed_positions (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.observed_positions"]], "recenter (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.recenter"]], "relnav_handler (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.relnav_handler"]], "scene (giant.relative_opnav.estimators.ellipse_matching.ellipsematching property)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.scene"]], "technique (giant.relative_opnav.estimators.ellipse_matching.ellipsematching attribute)": [[610, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.technique"]], "estimate() (giant.relative_opnav.estimators.ellipse_matching.ellipsematching method)": [[611, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.estimate"]], "extract_and_pair_limbs() (giant.relative_opnav.estimators.ellipse_matching.ellipsematching method)": [[612, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.extract_and_pair_limbs"]], "reset() (giant.relative_opnav.estimators.ellipse_matching.ellipsematching method)": [[613, "giant.relative_opnav.estimators.ellipse_matching.EllipseMatching.reset"]], "edge_detection (giant.relative_opnav.estimators.ellipse_matching.limbextractionmethods attribute)": [[615, "giant.relative_opnav.estimators.ellipse_matching.LimbExtractionMethods.EDGE_DETECTION"]], "limb_scanning (giant.relative_opnav.estimators.ellipse_matching.limbextractionmethods attribute)": [[615, "giant.relative_opnav.estimators.ellipse_matching.LimbExtractionMethods.LIMB_SCANNING"]], "limbextractionmethods (class in giant.relative_opnav.estimators.ellipse_matching)": [[615, "giant.relative_opnav.estimators.ellipse_matching.LimbExtractionMethods"]], "limbscanner (class in giant.relative_opnav.estimators.ellipse_matching)": [[616, "giant.relative_opnav.estimators.ellipse_matching.LimbScanner"]], "extract_limbs() (giant.relative_opnav.estimators.ellipse_matching.limbscanner method)": [[617, "giant.relative_opnav.estimators.ellipse_matching.LimbScanner.extract_limbs"]], "predict_limbs() (giant.relative_opnav.estimators.ellipse_matching.limbscanner method)": [[618, "giant.relative_opnav.estimators.ellipse_matching.LimbScanner.predict_limbs"]], "giant.relative_opnav.estimators.cross_correlation": [[624, "module-giant.relative_opnav.estimators.cross_correlation"]], "module": [[624, "module-giant.relative_opnav.estimators.cross_correlation"], [625, "module-giant.relative_opnav.estimators.ellipse_matching"], [627, "module-giant.relative_opnav.estimators.limb_matching"], [628, "module-giant.relative_opnav.estimators.moment_algorithm"], [629, "module-giant.relative_opnav.estimators.sfn"], [630, "module-giant.relative_opnav.estimators.unresolved"], [645, "module-giant.relative_opnav.estimators.sfn.sfn_class"], [692, "module-giant.relative_opnav.estimators"]], "giant.relative_opnav.estimators.ellipse_matching": [[625, "module-giant.relative_opnav.estimators.ellipse_matching"]], "giant.relative_opnav.estimators.limb_matching": [[627, "module-giant.relative_opnav.estimators.limb_matching"]], "giant.relative_opnav.estimators.moment_algorithm": [[628, "module-giant.relative_opnav.estimators.moment_algorithm"]], "giant.relative_opnav.estimators.sfn": [[629, "module-giant.relative_opnav.estimators.sfn"]], "giant.relative_opnav.estimators.unresolved": [[630, "module-giant.relative_opnav.estimators.unresolved"]], "limbmatching (class in giant.relative_opnav.estimators.limb_matching)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching"]], "camera (giant.relative_opnav.estimators.limb_matching.limbmatching property)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.camera"]], "computed_bearings (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.computed_bearings"]], "computed_positions (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.computed_positions"]], "details (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.details"]], "extraction_method (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.extraction_method"]], "generates_templates (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.generates_templates"]], "interpolator (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.interpolator"]], "limbs_camera (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.limbs_camera"]], "observable_type (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.observable_type"]], "observed_bearings (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.observed_bearings"]], "observed_positions (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.observed_positions"]], "recenter (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.recenter"]], "relnav_handler (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.relnav_handler"]], "scene (giant.relative_opnav.estimators.limb_matching.limbmatching property)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.scene"]], "technique (giant.relative_opnav.estimators.limb_matching.limbmatching attribute)": [[631, "giant.relative_opnav.estimators.limb_matching.LimbMatching.technique"]], "compute_jacobian() (giant.relative_opnav.estimators.limb_matching.limbmatching method)": [[632, "giant.relative_opnav.estimators.limb_matching.LimbMatching.compute_jacobian"]], "estimate() (giant.relative_opnav.estimators.limb_matching.limbmatching method)": [[633, "giant.relative_opnav.estimators.limb_matching.LimbMatching.estimate"]], "extract_and_pair_limbs() (giant.relative_opnav.estimators.limb_matching.limbmatching method)": [[634, "giant.relative_opnav.estimators.limb_matching.LimbMatching.extract_and_pair_limbs"]], "reset() (giant.relative_opnav.estimators.limb_matching.limbmatching method)": [[635, "giant.relative_opnav.estimators.limb_matching.LimbMatching.reset"]], "momentalgorithm (class in giant.relative_opnav.estimators.moment_algorithm)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm"]], "apparent_area_margin_of_safety (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.apparent_area_margin_of_safety"]], "apply_phase_correction (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.apply_phase_correction"]], "camera (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm property)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.camera"]], "computed_bearings (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.computed_bearings"]], "details (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.details"]], "generates_templates (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.generates_templates"]], "observable_type (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.observable_type"]], "observed_bearings (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.observed_bearings"]], "relnav_handler (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.relnav_handler"]], "scene (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm property)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.scene"]], "search_distance (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.search_distance"]], "technique (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.technique"]], "use_apparent_area (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm attribute)": [[637, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.use_apparent_area"]], "compute_line_of_sight_sun_image() (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm method)": [[638, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.compute_line_of_sight_sun_image"]], "compute_phase_correction() (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm method)": [[639, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.compute_phase_correction"]], "estimate() (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm method)": [[640, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.estimate"]], "rastered_phase_correction() (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm method)": [[641, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.rastered_phase_correction"]], "simple_phase_correction() (giant.relative_opnav.estimators.moment_algorithm.momentalgorithm method)": [[643, "giant.relative_opnav.estimators.moment_algorithm.MomentAlgorithm.simple_phase_correction"]], "giant.relative_opnav.estimators.sfn.sfn_class": [[645, "module-giant.relative_opnav.estimators.sfn.sfn_class"]], "surfacefeaturenavigation (class in giant.relative_opnav.estimators.sfn.sfn_class)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation"]], "attitude_sigma (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.attitude_sigma"]], "camera (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation property)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.camera"]], "cf_index (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.cf_index"]], "cf_results (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.cf_results"]], "computed_bearings (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.computed_bearings"]], "details (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.details"]], "generates_templates (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.generates_templates"]], "lsq_relative_error_tolerance (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.lsq_relative_error_tolerance"]], "max_lsq_iterations (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.max_lsq_iterations"]], "measurement_sigma (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.measurement_sigma"]], "observable_type (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.observable_type"]], "observed_bearings (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.observed_bearings"]], "pnp_ransac_iterations (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.pnp_ransac_iterations"]], "position_sigma (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.position_sigma"]], "relnav_handler (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.relnav_handler"]], "run_pnp_solver (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.run_pnp_solver"]], "scene (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation property)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.scene"]], "second_search_region (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.second_search_region"]], "show_templates (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.show_templates"]], "state_sigma (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.state_sigma"]], "technique (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.technique"]], "visible_features (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation attribute)": [[648, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.visible_features"], [648, "id0"]], "apply_options() (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation method)": [[649, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.apply_options"]], "compute_rays() (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation method)": [[650, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.compute_rays"]], "estimate() (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation method)": [[651, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.estimate"]], "pnp_solver() (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation method)": [[652, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.pnp_solver"]], "render() (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigation method)": [[653, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigation.render"]], "surfacefeaturenavigationoptions (class in giant.relative_opnav.estimators.sfn.sfn_class)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions"]], "attitude_sigma (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.attitude_sigma"]], "blur (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.blur"]], "brdf (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.brdf"]], "cf_index (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.cf_index"]], "cf_results (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.cf_results"]], "grid_size (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.grid_size"]], "lsq_relative_error_tolerance (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.lsq_relative_error_tolerance"]], "lsq_relative_update_tolerance (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.lsq_relative_update_tolerance"]], "max_lsq_iterations (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.max_lsq_iterations"]], "measurement_sigma (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.measurement_sigma"]], "min_corr_score (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.min_corr_score"]], "pnp_ransac_iterations (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.pnp_ransac_iterations"]], "position_sigma (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.position_sigma"]], "rays (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.rays"]], "run_pnp_solver (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.run_pnp_solver"]], "search_region (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.search_region"]], "second_search_region (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.second_search_region"]], "show_templates (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.show_templates"]], "state_sigma (giant.relative_opnav.estimators.sfn.sfn_class.surfacefeaturenavigationoptions attribute)": [[656, "giant.relative_opnav.estimators.sfn.sfn_class.SurfaceFeatureNavigationOptions.state_sigma"]], "phasecorrectiontype (class in giant.relative_opnav.estimators.unresolved)": [[675, "giant.relative_opnav.estimators.unresolved.PhaseCorrectionType"]], "rastered (giant.relative_opnav.estimators.unresolved.phasecorrectiontype attribute)": [[675, "giant.relative_opnav.estimators.unresolved.PhaseCorrectionType.RASTERED"]], "simple (giant.relative_opnav.estimators.unresolved.phasecorrectiontype attribute)": [[675, "giant.relative_opnav.estimators.unresolved.PhaseCorrectionType.SIMPLE"]], "phasecorrector (class in giant.relative_opnav.estimators.unresolved)": [[676, "giant.relative_opnav.estimators.unresolved.PhaseCorrector"]], "camera (giant.relative_opnav.estimators.unresolved.phasecorrector property)": [[676, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.camera"]], "generates_templates (giant.relative_opnav.estimators.unresolved.phasecorrector attribute)": [[676, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.generates_templates"]], "observable_type (giant.relative_opnav.estimators.unresolved.phasecorrector attribute)": [[676, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.observable_type"]], "relnav_handler (giant.relative_opnav.estimators.unresolved.phasecorrector attribute)": [[676, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.relnav_handler"]], "scene (giant.relative_opnav.estimators.unresolved.phasecorrector property)": [[676, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.scene"]], "technique (giant.relative_opnav.estimators.unresolved.phasecorrector attribute)": [[676, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.technique"]], "compute_line_of_sight_sun_image() (giant.relative_opnav.estimators.unresolved.phasecorrector method)": [[677, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.compute_line_of_sight_sun_image"]], "compute_phase_correction() (giant.relative_opnav.estimators.unresolved.phasecorrector method)": [[678, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.compute_phase_correction"]], "rastered_phase_correction() (giant.relative_opnav.estimators.unresolved.phasecorrector method)": [[680, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.rastered_phase_correction"]], "simple_phase_correction() (giant.relative_opnav.estimators.unresolved.phasecorrector method)": [[682, "giant.relative_opnav.estimators.unresolved.PhaseCorrector.simple_phase_correction"]], "unresolvedcenterfinding (class in giant.relative_opnav.estimators.unresolved)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding"]], "brdf (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.brdf"]], "camera (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding property)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.camera"]], "computed_bearings (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.computed_bearings"]], "details (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.details"]], "generates_templates (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.generates_templates"]], "observable_type (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.observable_type"]], "observed_bearings (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.observed_bearings"]], "phase_correction_type (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.phase_correction_type"]], "relnav_handler (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.relnav_handler"]], "scene (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding property)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.scene"]], "technique (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding attribute)": [[684, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.technique"]], "compute_line_of_sight_sun_image() (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding method)": [[685, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.compute_line_of_sight_sun_image"]], "compute_phase_correction() (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding method)": [[686, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.compute_phase_correction"]], "estimate() (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding method)": [[687, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.estimate"]], "rastered_phase_correction() (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding method)": [[688, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.rastered_phase_correction"]], "simple_phase_correction() (giant.relative_opnav.estimators.unresolved.unresolvedcenterfinding method)": [[690, "giant.relative_opnav.estimators.unresolved.UnresolvedCenterFinding.simple_phase_correction"]], "giant.relative_opnav.estimators": [[692, "module-giant.relative_opnav.estimators"]]}})